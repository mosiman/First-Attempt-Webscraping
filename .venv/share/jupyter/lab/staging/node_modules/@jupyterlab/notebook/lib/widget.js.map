{"version":3,"file":"widget.js","sourceRoot":"","sources":["../../../../notebook/src/widget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ArrayExt, each } from '@phosphor/algorithm';\n\nimport { JSONValue } from '@phosphor/coreutils';\n\nimport { Message } from '@phosphor/messaging';\n\nimport { MimeData } from '@phosphor/coreutils';\n\nimport { AttachedProperty } from '@phosphor/properties';\n\nimport { ISignal, Signal } from '@phosphor/signaling';\n\nimport { Drag, IDragEvent } from '@phosphor/dragdrop';\n\nimport { PanelLayout, Widget } from '@phosphor/widgets';\n\nimport { h, VirtualDOM } from '@phosphor/virtualdom';\n\nimport {\n  ICellModel,\n  Cell,\n  IMarkdownCellModel,\n  CodeCell,\n  MarkdownCell,\n  ICodeCellModel,\n  RawCell,\n  IRawCellModel\n} from '@jupyterlab/cells';\n\nimport { IEditorMimeTypeService, CodeEditor } from '@jupyterlab/codeeditor';\n\nimport { IChangedArgs, nbformat } from '@jupyterlab/coreutils';\n\nimport { IObservableMap, IObservableList } from '@jupyterlab/observables';\n\nimport { RenderMimeRegistry } from '@jupyterlab/rendermime';\n\nimport { INotebookModel } from './model';\n\n/**\n * The data attribute added to a widget that has an active kernel.\n */\nconst KERNEL_USER = 'jpKernelUser';\n\n/**\n * The data attribute added to a widget that can run code.\n */\nconst CODE_RUNNER = 'jpCodeRunner';\n\n/**\n * The data attribute added to a widget that can undo.\n */\nconst UNDOER = 'jpUndoer';\n\n/**\n * The class name added to notebook widgets.\n */\nconst NB_CLASS = 'jp-Notebook';\n\n/**\n * The class name added to notebook widget cells.\n */\nconst NB_CELL_CLASS = 'jp-Notebook-cell';\n\n/**\n * The class name added to a notebook in edit mode.\n */\nconst EDIT_CLASS = 'jp-mod-editMode';\n\n/**\n * The class name added to a notebook in command mode.\n */\nconst COMMAND_CLASS = 'jp-mod-commandMode';\n\n/**\n * The class name added to the active cell.\n */\nconst ACTIVE_CLASS = 'jp-mod-active';\n\n/**\n * The class name added to selected cells.\n */\nconst SELECTED_CLASS = 'jp-mod-selected';\n\n/**\n * The class name added to an active cell when there are other selected cells.\n */\nconst OTHER_SELECTED_CLASS = 'jp-mod-multiSelected';\n\n/**\n * The class name added to unconfined images.\n */\nconst UNCONFINED_CLASS = 'jp-mod-unconfined';\n\n/**\n * The class name added to a drop target.\n */\nconst DROP_TARGET_CLASS = 'jp-mod-dropTarget';\n\n/**\n * The class name added to a drop source.\n */\nconst DROP_SOURCE_CLASS = 'jp-mod-dropSource';\n\n/**\n * The class name added to drag images.\n */\nconst DRAG_IMAGE_CLASS = 'jp-dragImage';\n\n/**\n * The class name added to singular drag images\n */\nconst SINGLE_DRAG_IMAGE_CLASS = 'jp-dragImage-singlePrompt';\n\n/**\n * The class name added to the drag image cell content.\n */\nconst CELL_DRAG_CONTENT_CLASS = 'jp-dragImage-content';\n\n/**\n * The class name added to the drag image cell content.\n */\nconst CELL_DRAG_PROMPT_CLASS = 'jp-dragImage-prompt';\n\n/**\n * The class name added to the drag image cell content.\n */\nconst CELL_DRAG_MULTIPLE_BACK = 'jp-dragImage-multipleBack';\n\n/**\n * The mimetype used for Jupyter cell data.\n */\nconst JUPYTER_CELL_MIME = 'application/vnd.jupyter.cells';\n\n/**\n * The threshold in pixels to start a drag event.\n */\nconst DRAG_THRESHOLD = 5;\n\n/**\n * The interactivity modes for the notebook.\n */\nexport type NotebookMode = 'command' | 'edit';\n\n/**\n * A widget which renders static non-interactive notebooks.\n *\n * #### Notes\n * The widget model must be set separately and can be changed\n * at any time.  Consumers of the widget must account for a\n * `null` model, and may want to listen to the `modelChanged`\n * signal.\n */\nexport class StaticNotebook extends Widget {\n  /**\n   * Construct a notebook widget.\n   */\n  constructor(options: StaticNotebook.IOptions) {\n    super();\n    this.addClass(NB_CLASS);\n    this.node.dataset[KERNEL_USER] = 'true';\n    this.node.dataset[UNDOER] = 'true';\n    this.rendermime = options.rendermime;\n    this.layout = new Private.NotebookPanelLayout();\n    this.contentFactory =\n      options.contentFactory || StaticNotebook.defaultContentFactory;\n    this.editorConfig =\n      options.editorConfig || StaticNotebook.defaultEditorConfig;\n    this._mimetypeService = options.mimeTypeService;\n  }\n\n  /**\n   * A signal emitted when the model of the notebook changes.\n   */\n  get modelChanged(): ISignal<this, void> {\n    return this._modelChanged;\n  }\n\n  /**\n   * A signal emitted when the model content changes.\n   *\n   * #### Notes\n   * This is a convenience signal that follows the current model.\n   */\n  get modelContentChanged(): ISignal<this, void> {\n    return this._modelContentChanged;\n  }\n\n  /**\n   * The cell factory used by the widget.\n   */\n  readonly contentFactory: StaticNotebook.IContentFactory;\n\n  /**\n   * The Rendermime instance used by the widget.\n   */\n  readonly rendermime: RenderMimeRegistry;\n\n  /**\n   * The model for the widget.\n   */\n  get model(): INotebookModel {\n    return this._model;\n  }\n  set model(newValue: INotebookModel) {\n    newValue = newValue || null;\n    if (this._model === newValue) {\n      return;\n    }\n    let oldValue = this._model;\n    this._model = newValue;\n\n    if (oldValue && oldValue.modelDB.isCollaborative) {\n      oldValue.modelDB.connected.then(() => {\n        oldValue.modelDB.collaborators.changed.disconnect(\n          this._onCollaboratorsChanged,\n          this\n        );\n      });\n    }\n    if (newValue && newValue.modelDB.isCollaborative) {\n      newValue.modelDB.connected.then(() => {\n        newValue.modelDB.collaborators.changed.connect(\n          this._onCollaboratorsChanged,\n          this\n        );\n      });\n    }\n\n    // Trigger private, protected, and public changes.\n    this._onModelChanged(oldValue, newValue);\n    this.onModelChanged(oldValue, newValue);\n    this._modelChanged.emit(void 0);\n  }\n\n  /**\n   * Get the mimetype for code cells.\n   */\n  get codeMimetype(): string {\n    return this._mimetype;\n  }\n\n  /**\n   * A read-only sequence of the widgets in the notebook.\n   */\n  get widgets(): ReadonlyArray<Cell> {\n    return (this.layout as PanelLayout).widgets as ReadonlyArray<Cell>;\n  }\n\n  /**\n   * A configuration object for cell editor settings.\n   */\n  get editorConfig(): StaticNotebook.IEditorConfig {\n    return this._editorConfig;\n  }\n  set editorConfig(value: StaticNotebook.IEditorConfig) {\n    this._editorConfig = value;\n    this._updateEditorConfig();\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose() {\n    // Do nothing if already disposed.\n    if (this.isDisposed) {\n      return;\n    }\n    this._model = null;\n    super.dispose();\n  }\n\n  /**\n   * Handle a new model.\n   *\n   * #### Notes\n   * This method is called after the model change has been handled\n   * internally and before the `modelChanged` signal is emitted.\n   * The default implementation is a no-op.\n   */\n  protected onModelChanged(\n    oldValue: INotebookModel,\n    newValue: INotebookModel\n  ): void {\n    // No-op.\n  }\n\n  /**\n   * Handle changes to the notebook model content.\n   *\n   * #### Notes\n   * The default implementation emits the `modelContentChanged` signal.\n   */\n  protected onModelContentChanged(model: INotebookModel, args: void): void {\n    this._modelContentChanged.emit(void 0);\n  }\n\n  /**\n   * Handle changes to the notebook model metadata.\n   *\n   * #### Notes\n   * The default implementation updates the mimetypes of the code cells\n   * when the `language_info` metadata changes.\n   */\n  protected onMetadataChanged(\n    sender: IObservableMap<JSONValue>,\n    args: IObservableMap.IChangedArgs<JSONValue>\n  ): void {\n    switch (args.key) {\n      case 'language_info':\n        this._updateMimetype();\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle a cell being inserted.\n   *\n   * The default implementation is a no-op\n   */\n  protected onCellInserted(index: number, cell: Cell): void {\n    // This is a no-op.\n  }\n\n  /**\n   * Handle a cell being moved.\n   *\n   * The default implementation is a no-op\n   */\n  protected onCellMoved(fromIndex: number, toIndex: number): void {\n    // This is a no-op.\n  }\n\n  /**\n   * Handle a cell being removed.\n   *\n   * The default implementation is a no-op\n   */\n  protected onCellRemoved(index: number, cell: Cell): void {\n    // This is a no-op.\n  }\n\n  /**\n   * Handle a new model on the widget.\n   */\n  private _onModelChanged(\n    oldValue: INotebookModel,\n    newValue: INotebookModel\n  ): void {\n    let layout = this.layout as PanelLayout;\n    if (oldValue) {\n      oldValue.cells.changed.disconnect(this._onCellsChanged, this);\n      oldValue.metadata.changed.disconnect(this.onMetadataChanged, this);\n      oldValue.contentChanged.disconnect(this.onModelContentChanged, this);\n      // TODO: reuse existing cell widgets if possible. Remember to initially\n      // clear the history of each cell if we do this.\n      while (layout.widgets.length) {\n        this._removeCell(0);\n      }\n    }\n    if (!newValue) {\n      this._mimetype = 'text/plain';\n      return;\n    }\n    this._updateMimetype();\n    let cells = newValue.cells;\n    each(cells, (cell: ICellModel, i: number) => {\n      this._insertCell(i, cell);\n    });\n    cells.changed.connect(this._onCellsChanged, this);\n    newValue.contentChanged.connect(this.onModelContentChanged, this);\n    newValue.metadata.changed.connect(this.onMetadataChanged, this);\n  }\n\n  /**\n   * Handle a change cells event.\n   */\n  private _onCellsChanged(\n    sender: IObservableList<ICellModel>,\n    args: IObservableList.IChangedArgs<ICellModel>\n  ) {\n    let index = 0;\n    switch (args.type) {\n      case 'add':\n        index = args.newIndex;\n        each(args.newValues, value => {\n          this._insertCell(index++, value);\n        });\n        break;\n      case 'move':\n        this._moveCell(args.oldIndex, args.newIndex);\n        break;\n      case 'remove':\n        each(args.oldValues, value => {\n          this._removeCell(args.oldIndex);\n        });\n        break;\n      case 'set':\n        // TODO: reuse existing widgets if possible.\n        index = args.newIndex;\n        each(args.newValues, value => {\n          // Note: this ordering (insert then remove)\n          // is important for getting the active cell\n          // index for the editable notebook correct.\n          this._insertCell(index, value);\n          this._removeCell(index + 1);\n          index++;\n        });\n        break;\n      default:\n        return;\n    }\n  }\n\n  /**\n   * Create a cell widget and insert into the notebook.\n   */\n  private _insertCell(index: number, cell: ICellModel): void {\n    let widget: Cell;\n    switch (cell.type) {\n      case 'code':\n        widget = this._createCodeCell(cell as ICodeCellModel);\n        widget.model.mimeType = this._mimetype;\n        break;\n      case 'markdown':\n        widget = this._createMarkdownCell(cell as IMarkdownCellModel);\n        break;\n      default:\n        widget = this._createRawCell(cell as IRawCellModel);\n    }\n    widget.addClass(NB_CELL_CLASS);\n    let layout = this.layout as PanelLayout;\n    layout.insertWidget(index, widget);\n    this.onCellInserted(index, widget);\n  }\n\n  /**\n   * Create a code cell widget from a code cell model.\n   */\n  private _createCodeCell(model: ICodeCellModel): CodeCell {\n    let rendermime = this.rendermime;\n    let contentFactory = this.contentFactory;\n    const editorConfig = this.editorConfig.code;\n    let options = { editorConfig, model, rendermime, contentFactory };\n    return this.contentFactory.createCodeCell(options, this);\n  }\n\n  /**\n   * Create a markdown cell widget from a markdown cell model.\n   */\n  private _createMarkdownCell(model: IMarkdownCellModel): MarkdownCell {\n    let rendermime = this.rendermime;\n    let contentFactory = this.contentFactory;\n    const editorConfig = this.editorConfig.markdown;\n    let options = { editorConfig, model, rendermime, contentFactory };\n    return this.contentFactory.createMarkdownCell(options, this);\n  }\n\n  /**\n   * Create a raw cell widget from a raw cell model.\n   */\n  private _createRawCell(model: IRawCellModel): RawCell {\n    let contentFactory = this.contentFactory;\n    const editorConfig = this.editorConfig.raw;\n    let options = { editorConfig, model, contentFactory };\n    return this.contentFactory.createRawCell(options, this);\n  }\n\n  /**\n   * Move a cell widget.\n   */\n  private _moveCell(fromIndex: number, toIndex: number): void {\n    let layout = this.layout as PanelLayout;\n    layout.insertWidget(toIndex, layout.widgets[fromIndex]);\n    this.onCellMoved(fromIndex, toIndex);\n  }\n\n  /**\n   * Remove a cell widget.\n   */\n  private _removeCell(index: number): void {\n    let layout = this.layout as PanelLayout;\n    let widget = layout.widgets[index] as Cell;\n    widget.parent = null;\n    this.onCellRemoved(index, widget);\n    widget.dispose();\n  }\n\n  /**\n   * Update the mimetype of the notebook.\n   */\n  private _updateMimetype(): void {\n    let info = this._model.metadata.get(\n      'language_info'\n    ) as nbformat.ILanguageInfoMetadata;\n    if (!info) {\n      return;\n    }\n    this._mimetype = this._mimetypeService.getMimeTypeByLanguage(info);\n    each(this.widgets, widget => {\n      if (widget.model.type === 'code') {\n        widget.model.mimeType = this._mimetype;\n      }\n    });\n  }\n\n  /**\n   * Handle an update to the collaborators.\n   */\n  private _onCollaboratorsChanged(): void {\n    // If there are selections corresponding to non-collaborators,\n    // they are stale and should be removed.\n    for (let i = 0; i < this.widgets.length; i++) {\n      let cell = this.widgets[i];\n      for (let key of cell.model.selections.keys()) {\n        if (!this._model.modelDB.collaborators.has(key)) {\n          cell.model.selections.delete(key);\n        }\n      }\n    }\n  }\n\n  /**\n   * Update editor settings for notebook cells.\n   */\n  private _updateEditorConfig() {\n    for (let i = 0; i < this.widgets.length; i++) {\n      const cell = this.widgets[i];\n      let config: Partial<CodeEditor.IConfig>;\n      switch (cell.model.type) {\n        case 'code':\n          config = this._editorConfig.code;\n          break;\n        case 'markdown':\n          config = this._editorConfig.markdown;\n          break;\n        default:\n          config = this._editorConfig.raw;\n          break;\n      }\n      Object.keys(config).forEach((key: keyof CodeEditor.IConfig) => {\n        cell.editor.setOption(key, config[key]);\n      });\n    }\n  }\n\n  private _editorConfig = StaticNotebook.defaultEditorConfig;\n  private _mimetype = 'text/plain';\n  private _model: INotebookModel = null;\n  private _mimetypeService: IEditorMimeTypeService;\n  private _modelChanged = new Signal<this, void>(this);\n  private _modelContentChanged = new Signal<this, void>(this);\n}\n\n/**\n * The namespace for the `StaticNotebook` class statics.\n */\nexport namespace StaticNotebook {\n  /**\n   * An options object for initializing a static notebook.\n   */\n  export interface IOptions {\n    /**\n     * The rendermime instance used by the widget.\n     */\n    rendermime: RenderMimeRegistry;\n\n    /**\n     * The language preference for the model.\n     */\n    languagePreference?: string;\n\n    /**\n     * A factory for creating content.\n     */\n    contentFactory?: IContentFactory;\n\n    /**\n     * A configuration object for the cell editor settings.\n     */\n    editorConfig?: IEditorConfig;\n\n    /**\n     * The service used to look up mime types.\n     */\n    mimeTypeService: IEditorMimeTypeService;\n  }\n\n  /**\n   * A factory for creating notebook content.\n   *\n   * #### Notes\n   * This extends the content factory of the cell itself, which extends the content\n   * factory of the output area and input area. The result is that there is a single\n   * factory for creating all child content of a notebook.\n   */\n  export interface IContentFactory extends Cell.IContentFactory {\n    /**\n     * Create a new code cell widget.\n     */\n    createCodeCell(\n      options: CodeCell.IOptions,\n      parent: StaticNotebook\n    ): CodeCell;\n\n    /**\n     * Create a new markdown cell widget.\n     */\n    createMarkdownCell(\n      options: MarkdownCell.IOptions,\n      parent: StaticNotebook\n    ): MarkdownCell;\n\n    /**\n     * Create a new raw cell widget.\n     */\n    createRawCell(options: RawCell.IOptions, parent: StaticNotebook): RawCell;\n  }\n\n  /**\n   * A config object for the cell editors.\n   */\n  export interface IEditorConfig {\n    /**\n     * Config options for code cells.\n     */\n    readonly code: Partial<CodeEditor.IConfig>;\n    /**\n     * Config options for markdown cells.\n     */\n    readonly markdown: Partial<CodeEditor.IConfig>;\n    /**\n     * Config options for raw cells.\n     */\n    readonly raw: Partial<CodeEditor.IConfig>;\n  }\n\n  /**\n   * Default configuration options for cell editors.\n   */\n  export const defaultEditorConfig: IEditorConfig = {\n    code: {\n      ...CodeEditor.defaultConfig,\n      lineWrap: 'off',\n      matchBrackets: true,\n      autoClosingBrackets: true\n    },\n    markdown: {\n      ...CodeEditor.defaultConfig,\n      lineWrap: 'on',\n      matchBrackets: false,\n      autoClosingBrackets: false\n    },\n    raw: {\n      ...CodeEditor.defaultConfig,\n      lineWrap: 'on',\n      matchBrackets: false,\n      autoClosingBrackets: false\n    }\n  };\n\n  /**\n   * The default implementation of an `IContentFactory`.\n   */\n  export class ContentFactory extends Cell.ContentFactory\n    implements IContentFactory {\n    /**\n     * Create a new code cell widget.\n     *\n     * #### Notes\n     * If no cell content factory is passed in with the options, the one on the\n     * notebook content factory is used.\n     */\n    createCodeCell(\n      options: CodeCell.IOptions,\n      parent: StaticNotebook\n    ): CodeCell {\n      if (!options.contentFactory) {\n        options.contentFactory = this;\n      }\n      return new CodeCell(options);\n    }\n\n    /**\n     * Create a new markdown cell widget.\n     *\n     * #### Notes\n     * If no cell content factory is passed in with the options, the one on the\n     * notebook content factory is used.\n     */\n    createMarkdownCell(\n      options: MarkdownCell.IOptions,\n      parent: StaticNotebook\n    ): MarkdownCell {\n      if (!options.contentFactory) {\n        options.contentFactory = this;\n      }\n      return new MarkdownCell(options);\n    }\n\n    /**\n     * Create a new raw cell widget.\n     *\n     * #### Notes\n     * If no cell content factory is passed in with the options, the one on the\n     * notebook content factory is used.\n     */\n    createRawCell(options: RawCell.IOptions, parent: StaticNotebook): RawCell {\n      if (!options.contentFactory) {\n        options.contentFactory = this;\n      }\n      return new RawCell(options);\n    }\n  }\n\n  /**\n   * A namespace for the staic notebook content factory.\n   */\n  export namespace ContentFactory {\n    /**\n     * Options for the content factory.\n     */\n    export interface IOptions extends Cell.ContentFactory.IOptions {}\n  }\n\n  /**\n   * Default content factory for the static notebook widget.\n   */\n  export const defaultContentFactory: IContentFactory = new ContentFactory();\n}\n\n/**\n * A notebook widget that supports interactivity.\n */\nexport class Notebook extends StaticNotebook {\n  /**\n   * Construct a notebook widget.\n   */\n  constructor(options: Notebook.IOptions) {\n    super(Private.processNotebookOptions(options));\n    this.node.tabIndex = -1; // Allow the widget to take focus.\n    // Allow the node to scroll while dragging items.\n    this.node.setAttribute('data-p-dragscroll', 'true');\n  }\n\n  /**\n   * A signal emitted when the active cell changes.\n   *\n   * #### Notes\n   * This can be due to the active index changing or the\n   * cell at the active index changing.\n   */\n  get activeCellChanged(): ISignal<this, Cell> {\n    return this._activeCellChanged;\n  }\n\n  /**\n   * A signal emitted when the state of the notebook changes.\n   */\n  get stateChanged(): ISignal<this, IChangedArgs<any>> {\n    return this._stateChanged;\n  }\n\n  /**\n   * A signal emitted when the selection state of the notebook changes.\n   */\n  get selectionChanged(): ISignal<this, void> {\n    return this._selectionChanged;\n  }\n\n  /**\n   * The interactivity mode of the notebook.\n   */\n  get mode(): NotebookMode {\n    return this._mode;\n  }\n  set mode(newValue: NotebookMode) {\n    let activeCell = this.activeCell;\n    if (!activeCell) {\n      newValue = 'command';\n    }\n    if (newValue === this._mode) {\n      this._ensureFocus();\n      return;\n    }\n    // Post an update request.\n    this.update();\n    let oldValue = this._mode;\n    this._mode = newValue;\n\n    if (newValue === 'edit') {\n      // Edit mode deselects all cells.\n      each(this.widgets, widget => {\n        this.deselect(widget);\n      });\n      //  Edit mode unrenders an active markdown widget.\n      if (activeCell instanceof MarkdownCell) {\n        activeCell.rendered = false;\n      }\n      activeCell.inputHidden = false;\n    } else {\n      // Focus on the notebook document, which blurs the active cell.\n      this.node.focus();\n    }\n    this._stateChanged.emit({ name: 'mode', oldValue, newValue });\n    this._ensureFocus();\n  }\n\n  /**\n   * The active cell index of the notebook.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the notebook cells.\n   */\n  get activeCellIndex(): number {\n    if (!this.model) {\n      return -1;\n    }\n    return this.model.cells.length ? this._activeCellIndex : -1;\n  }\n  set activeCellIndex(newValue: number) {\n    let oldValue = this._activeCellIndex;\n    if (!this.model || !this.model.cells.length) {\n      newValue = -1;\n    } else {\n      newValue = Math.max(newValue, 0);\n      newValue = Math.min(newValue, this.model.cells.length - 1);\n    }\n\n    this._activeCellIndex = newValue;\n    let cell = this.widgets[newValue];\n    if (cell !== this._activeCell) {\n      // Post an update request.\n      this.update();\n      this._activeCell = cell;\n      this._activeCellChanged.emit(cell);\n    }\n    if (this.mode === 'edit' && cell instanceof MarkdownCell) {\n      cell.rendered = false;\n    }\n    this._ensureFocus();\n    if (newValue === oldValue) {\n      return;\n    }\n    this._trimSelections();\n    this._stateChanged.emit({ name: 'activeCellIndex', oldValue, newValue });\n  }\n\n  /**\n   * Get the active cell widget.\n   *\n   * #### Notes\n   * This is a cell or undefined if there is no active cell.\n   */\n  get activeCell(): Cell | undefined {\n    return this._activeCell;\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._activeCell = undefined;\n    super.dispose();\n  }\n\n  /**\n   * Select a cell widget.\n   *\n   * #### Notes\n   * It is a no-op if the value does not change.\n   * It will emit the `selectionChanged` signal.\n   */\n  select(widget: Cell): void {\n    if (Private.selectedProperty.get(widget)) {\n      return;\n    }\n    Private.selectedProperty.set(widget, true);\n    this._selectionChanged.emit(void 0);\n    this.update();\n  }\n\n  /**\n   * Deselect a cell widget.\n   *\n   * #### Notes\n   * It is a no-op if the value does not change.\n   * It will emit the `selectionChanged` signal.\n   */\n  deselect(widget: Cell): void {\n    if (!Private.selectedProperty.get(widget)) {\n      return;\n    }\n    Private.selectedProperty.set(widget, false);\n    this._selectionChanged.emit(void 0);\n    this.update();\n  }\n\n  /**\n   * Whether a cell is selected.\n   */\n  isSelected(widget: Cell): boolean {\n    return Private.selectedProperty.get(widget);\n  }\n\n  /**\n   * Whether a cell is selected or is the active cell.\n   */\n  isSelectedOrActive(widget: Cell): boolean {\n    if (widget === this._activeCell) {\n      return true;\n    }\n    return Private.selectedProperty.get(widget);\n  }\n\n  /**\n   * Deselect all of the cells.\n   */\n  deselectAll(): void {\n    let changed = false;\n    each(this.widgets, widget => {\n      if (Private.selectedProperty.get(widget)) {\n        changed = true;\n      }\n      Private.selectedProperty.set(widget, false);\n    });\n    if (changed) {\n      this._selectionChanged.emit(void 0);\n    }\n    // Make sure we have a valid active cell.\n    this.activeCellIndex = this.activeCellIndex;\n    this.update();\n  }\n\n  /**\n   * Move the head of an existing contiguous selection to extend the selection.\n   *\n   * @param index - The new head of the existing selection.\n   *\n   * #### Notes\n   * If there is no existing selection, the active cell is considered an\n   * existing one-cell selection.\n   *\n   * If the new selection is a single cell, that cell becomes the active cell\n   * and all cells are deselected.\n   *\n   * There is no change if there are no cells (i.e., activeCellIndex is -1).\n   */\n  extendContiguousSelectionTo(index: number): void {\n    let { head, anchor } = this.getContiguousSelection();\n    let i: number;\n\n    // Handle the case of no current selection.\n    if (anchor === null) {\n      if (index === this.activeCellIndex) {\n        // Already collapsed selection, nothing more to do.\n        return;\n      }\n\n      // We will start a new selection below.\n      head = this.activeCellIndex;\n      anchor = this.activeCellIndex;\n    }\n\n    // Move the active cell. We do this before the collapsing shortcut below.\n    this.activeCellIndex = index;\n\n    // Make sure the index is valid, according to the rules for setting and clipping the\n    // active cell index. This may change the index.\n    index = this.activeCellIndex;\n\n    // Collapse the selection if it is only the active cell.\n    if (index === anchor) {\n      this.deselectAll();\n      return;\n    }\n\n    let selectionChanged = false;\n\n    if (head < index) {\n      if (head < anchor) {\n        Private.selectedProperty.set(this.widgets[head], false);\n        selectionChanged = true;\n      }\n\n      // Toggle everything strictly between head and index except anchor.\n      for (i = head + 1; i < index; i++) {\n        if (i !== anchor) {\n          Private.selectedProperty.set(\n            this.widgets[i],\n            !Private.selectedProperty.get(this.widgets[i])\n          );\n          selectionChanged = true;\n        }\n      }\n    } else if (index < head) {\n      if (anchor < head) {\n        Private.selectedProperty.set(this.widgets[head], false);\n        selectionChanged = true;\n      }\n\n      // Toggle everything strictly between index and head except anchor.\n      for (i = index + 1; i < head; i++) {\n        if (i !== anchor) {\n          Private.selectedProperty.set(\n            this.widgets[i],\n            !Private.selectedProperty.get(this.widgets[i])\n          );\n          selectionChanged = true;\n        }\n      }\n    }\n\n    // Anchor and index should *always* be selected.\n    if (!Private.selectedProperty.get(this.widgets[anchor])) {\n      selectionChanged = true;\n    }\n    Private.selectedProperty.set(this.widgets[anchor], true);\n\n    if (!Private.selectedProperty.get(this.widgets[index])) {\n      selectionChanged = true;\n    }\n    Private.selectedProperty.set(this.widgets[index], true);\n\n    if (selectionChanged) {\n      this._selectionChanged.emit(void 0);\n    }\n  }\n\n  /**\n   * Get the head and anchor of a contiguous cell selection.\n   *\n   * The head of a contiguous selection is always the active cell.\n   *\n   * If there are no cells selected, `{head: null, anchor: null}` is returned.\n   *\n   * Throws an error if the currently selected cells do not form a contiguous\n   * selection.\n   */\n  getContiguousSelection(): { head: number | null; anchor: number | null } {\n    let cells = this.widgets;\n    let first = ArrayExt.findFirstIndex(cells, c => this.isSelected(c));\n\n    // Return early if no cells are selected.\n    if (first === -1) {\n      return { head: null, anchor: null };\n    }\n\n    let last = ArrayExt.findLastIndex(\n      cells,\n      c => this.isSelected(c),\n      -1,\n      first\n    );\n\n    // Check that the selection is contiguous.\n    for (let i = first; i <= last; i++) {\n      if (!this.isSelected(cells[i])) {\n        throw new Error('Selection not contiguous');\n      }\n    }\n\n    // Check that the active cell is one of the endpoints of the selection.\n    let activeIndex = this.activeCellIndex;\n    if (first !== activeIndex && last !== activeIndex) {\n      throw new Error('Active cell not at endpoint of selection');\n    }\n\n    // Determine the head and anchor of the selection.\n    if (first === activeIndex) {\n      return { head: first, anchor: last };\n    } else {\n      return { head: last, anchor: first };\n    }\n  }\n\n  /**\n   * Scroll so that the given position is centered.\n   *\n   * @param position - The vertical position in the notebook widget.\n   *\n   * @param threshold - An optional threshold for the scroll (0-50, defaults to\n   * 25).\n   *\n   * #### Notes\n   * If the position is within the threshold percentage of the widget height,\n   * measured from the center of the widget, the scroll position will not be\n   * changed. A threshold of 0 means we will always scroll so the position is\n   * centered, and a threshold of 50 means scrolling only happens if position is\n   * outside the current window.\n   */\n  scrollToPosition(position: number, threshold = 25): void {\n    let node = this.node;\n    let ar = node.getBoundingClientRect();\n    let delta = position - ar.top - ar.height / 2;\n    if (Math.abs(delta) > ar.height * threshold / 100) {\n      node.scrollTop += delta;\n    }\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the notebook panel's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    if (!this.model) {\n      return;\n    }\n\n    switch (event.type) {\n      case 'contextmenu':\n        if (event.eventPhase === Event.CAPTURING_PHASE) {\n          this._evtContextMenuCapture(event as PointerEvent);\n        }\n        break;\n      case 'mousedown':\n        if (event.eventPhase === Event.CAPTURING_PHASE) {\n          this._evtMouseDownCapture(event as MouseEvent);\n        } else {\n          this._evtMouseDown(event as MouseEvent);\n        }\n        break;\n      case 'mouseup':\n        if (event.currentTarget === document) {\n          this._evtDocumentMouseup(event as MouseEvent);\n        }\n        break;\n      case 'mousemove':\n        if (event.currentTarget === document) {\n          this._evtDocumentMousemove(event as MouseEvent);\n        }\n        break;\n      case 'keydown':\n        this._ensureFocus(true);\n        break;\n      case 'dblclick':\n        this._evtDblClick(event as MouseEvent);\n        break;\n      case 'focusin':\n        this._evtFocusIn(event as MouseEvent);\n        break;\n      case 'focusout':\n        this._evtFocusOut(event as MouseEvent);\n        break;\n      case 'p-dragenter':\n        this._evtDragEnter(event as IDragEvent);\n        break;\n      case 'p-dragleave':\n        this._evtDragLeave(event as IDragEvent);\n        break;\n      case 'p-dragover':\n        this._evtDragOver(event as IDragEvent);\n        break;\n      case 'p-drop':\n        this._evtDrop(event as IDragEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle `after-attach` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    let node = this.node;\n    node.addEventListener('contextmenu', this, true);\n    node.addEventListener('mousedown', this, true);\n    node.addEventListener('mousedown', this);\n    node.addEventListener('keydown', this);\n    node.addEventListener('dblclick', this);\n    node.addEventListener('focusin', this);\n    node.addEventListener('focusout', this);\n    node.addEventListener('p-dragenter', this);\n    node.addEventListener('p-dragleave', this);\n    node.addEventListener('p-dragover', this);\n    node.addEventListener('p-drop', this);\n  }\n\n  /**\n   * Handle `before-detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    let node = this.node;\n    node.removeEventListener('contextmenu', this, true);\n    node.removeEventListener('mousedown', this, true);\n    node.removeEventListener('mousedown', this);\n    node.removeEventListener('keydown', this);\n    node.removeEventListener('dblclick', this);\n    node.removeEventListener('focusin', this);\n    node.removeEventListener('focusout', this);\n    node.removeEventListener('p-dragenter', this);\n    node.removeEventListener('p-dragleave', this);\n    node.removeEventListener('p-dragover', this);\n    node.removeEventListener('p-drop', this);\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n  }\n\n  /**\n   * Handle `'activate-request'` messages.\n   */\n  protected onActivateRequest(msg: Message): void {\n    this._ensureFocus(true);\n  }\n\n  /**\n   * Handle `update-request` messages sent to the widget.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    let activeCell = this.activeCell;\n\n    // Set the appropriate classes on the cells.\n    if (this.mode === 'edit') {\n      this.addClass(EDIT_CLASS);\n      this.removeClass(COMMAND_CLASS);\n    } else {\n      this.addClass(COMMAND_CLASS);\n      this.removeClass(EDIT_CLASS);\n    }\n    if (activeCell) {\n      activeCell.addClass(ACTIVE_CLASS);\n    }\n\n    let count = 0;\n    each(this.widgets, widget => {\n      if (widget !== activeCell) {\n        widget.removeClass(ACTIVE_CLASS);\n      }\n      widget.removeClass(OTHER_SELECTED_CLASS);\n      if (this.isSelectedOrActive(widget)) {\n        widget.addClass(SELECTED_CLASS);\n        count++;\n      } else {\n        widget.removeClass(SELECTED_CLASS);\n      }\n    });\n    if (count > 1) {\n      activeCell.addClass(OTHER_SELECTED_CLASS);\n    }\n  }\n\n  /**\n   * Handle a cell being inserted.\n   */\n  protected onCellInserted(index: number, cell: Cell): void {\n    if (this.model && this.model.modelDB.isCollaborative) {\n      let modelDB = this.model.modelDB;\n      modelDB.connected.then(() => {\n        if (!cell.isDisposed) {\n          // Setup the selection style for collaborators.\n          let localCollaborator = modelDB.collaborators.localCollaborator;\n          cell.editor.uuid = localCollaborator.sessionId;\n          cell.editor.selectionStyle = {\n            ...CodeEditor.defaultSelectionStyle,\n            color: localCollaborator.color\n          };\n        }\n      });\n    }\n    cell.editor.edgeRequested.connect(this._onEdgeRequest, this);\n    // If the insertion happened above, increment the active cell\n    // index, otherwise it stays the same.\n    this.activeCellIndex =\n      index <= this.activeCellIndex\n        ? this.activeCellIndex + 1\n        : this.activeCellIndex;\n  }\n\n  /**\n   * Handle a cell being moved.\n   */\n  protected onCellMoved(fromIndex: number, toIndex: number): void {\n    let i = this.activeCellIndex;\n    if (fromIndex === i) {\n      this.activeCellIndex = toIndex;\n    } else if (fromIndex < i && i <= toIndex) {\n      this.activeCellIndex--;\n    } else if (toIndex <= i && i < fromIndex) {\n      this.activeCellIndex++;\n    }\n  }\n\n  /**\n   * Handle a cell being removed.\n   */\n  protected onCellRemoved(index: number, cell: Cell): void {\n    // If the removal happened above, decrement the active\n    // cell index, otherwise it stays the same.\n    this.activeCellIndex =\n      index <= this.activeCellIndex\n        ? this.activeCellIndex - 1\n        : this.activeCellIndex;\n    if (this.isSelected(cell)) {\n      this._selectionChanged.emit(void 0);\n    }\n  }\n\n  /**\n   * Handle a new model.\n   */\n  protected onModelChanged(\n    oldValue: INotebookModel,\n    newValue: INotebookModel\n  ): void {\n    super.onModelChanged(oldValue, newValue);\n\n    // Try to set the active cell index to 0.\n    // It will be set to `-1` if there is no new model or the model is empty.\n    this.activeCellIndex = 0;\n  }\n\n  /**\n   * Handle edge request signals from cells.\n   */\n  private _onEdgeRequest(\n    editor: CodeEditor.IEditor,\n    location: CodeEditor.EdgeLocation\n  ): void {\n    let prev = this.activeCellIndex;\n    if (location === 'top') {\n      this.activeCellIndex--;\n      // Move the cursor to the first position on the last line.\n      if (this.activeCellIndex < prev) {\n        let editor = this.activeCell.editor;\n        let lastLine = editor.lineCount - 1;\n        editor.setCursorPosition({ line: lastLine, column: 0 });\n      }\n    } else {\n      this.activeCellIndex++;\n      // Move the cursor to the first character.\n      if (this.activeCellIndex > prev) {\n        let editor = this.activeCell.editor;\n        editor.setCursorPosition({ line: 0, column: 0 });\n      }\n    }\n    this.mode = 'edit';\n  }\n\n  /**\n   * Ensure that the notebook has proper focus.\n   */\n  private _ensureFocus(force = false): void {\n    let activeCell = this.activeCell;\n    if (this.mode === 'edit' && activeCell) {\n      if (!activeCell.editor.hasFocus()) {\n        activeCell.editor.focus();\n      }\n    }\n    if (force && !this.node.contains(document.activeElement)) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * Find the cell index containing the target html element.\n   *\n   * #### Notes\n   * Returns -1 if the cell is not found.\n   */\n  private _findCell(node: HTMLElement): number {\n    // Trace up the DOM hierarchy to find the root cell node.\n    // Then find the corresponding child and select it.\n    while (node && node !== this.node) {\n      if (node.classList.contains(NB_CELL_CLASS)) {\n        let i = ArrayExt.findFirstIndex(\n          this.widgets,\n          widget => widget.node === node\n        );\n        if (i !== -1) {\n          return i;\n        }\n        break;\n      }\n      node = node.parentElement;\n    }\n    return -1;\n  }\n\n  /**\n   * Handle `contextmenu` event.\n   */\n  private _evtContextMenuCapture(event: PointerEvent): void {\n    // Allow the event to propagate un-modified if the user\n    // is holding the shift-key (and probably requesting\n    // the native context menu).\n    if (event.shiftKey) {\n      return;\n    }\n    // `event.target` sometimes gives an orphaned node in Firefox 57, which\n    // can have `null` anywhere in its parent tree. If we fail to find a\n    // cell using `event.target`, try again using a target reconstructed from\n    // the position of the click event.\n    let target = event.target as HTMLElement;\n    let index = this._findCell(target);\n    if (index === -1) {\n      target = document.elementFromPoint(\n        event.clientX,\n        event.clientY\n      ) as HTMLElement;\n      index = this._findCell(target);\n    }\n    let widget = this.widgets[index];\n\n    if (widget && widget.editorWidget.node.contains(target)) {\n      // Prevent CodeMirror from focusing the editor.\n      // TODO: find an editor-agnostic solution.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handle `mousedown` event in the capture phase for the widget.\n   */\n  private _evtMouseDownCapture(event: MouseEvent): void {\n    const { button, shiftKey } = event;\n\n    // `event.target` sometimes gives an orphaned node in Firefox 57, which\n    // can have `null` anywhere in its parent tree. If we fail to find a\n    // cell using `event.target`, try again using a target reconstructed from\n    // the position of the click event.\n    let target = event.target as HTMLElement;\n    let index = this._findCell(target);\n    if (index === -1) {\n      target = document.elementFromPoint(\n        event.clientX,\n        event.clientY\n      ) as HTMLElement;\n      index = this._findCell(target);\n    }\n    let widget = this.widgets[index];\n\n    // On OS X, the context menu may be triggered with ctrl-left-click. In\n    // Firefox, ctrl-left-click gives an event with button 2, but in Chrome,\n    // ctrl-left-click gives an event with button 0 with the ctrl modifier.\n    if (\n      button === 2 &&\n      !shiftKey &&\n      widget &&\n      widget.editorWidget.node.contains(target)\n    ) {\n      this.mode = 'command';\n\n      // Prevent CodeMirror from focusing the editor.\n      // TODO: find an editor-agnostic solution.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handle `mousedown` events for the widget.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    const { button, shiftKey } = event;\n\n    // We only handle main or secondary button actions.\n    if (!(button === 0 || button === 2)) {\n      return;\n    }\n\n    // Shift right-click gives the browser default behavior.\n    if (shiftKey && button === 2) {\n      return;\n    }\n\n    // Find the target cell.\n    let target = event.target as HTMLElement;\n    let index = this._findCell(target);\n    if (index === -1) {\n      // `event.target` sometimes gives an orphaned node in\n      // Firefox 57, which can have `null` anywhere in its parent line. If we fail\n      // to find a cell using `event.target`, try again using a target\n      // reconstructed from the position of the click event.\n      target = document.elementFromPoint(\n        event.clientX,\n        event.clientY\n      ) as HTMLElement;\n      index = this._findCell(target);\n    }\n    let widget = this.widgets[index];\n\n    let targetArea: 'input' | 'prompt' | 'cell' | 'notebook';\n    if (widget) {\n      if (widget.editorWidget.node.contains(target)) {\n        targetArea = 'input';\n      } else if (widget.promptNode.contains(target)) {\n        targetArea = 'prompt';\n      } else {\n        targetArea = 'cell';\n      }\n    } else {\n      targetArea = 'notebook';\n    }\n\n    // Make sure we go to command mode if the click isn't in the cell editor If\n    // we do click in the cell editor, the editor handles the focus event to\n    // switch to edit mode.\n    if (targetArea !== 'input') {\n      this.mode = 'command';\n    }\n\n    if (targetArea === 'notebook') {\n      this.deselectAll();\n    } else if (targetArea === 'prompt' || targetArea === 'cell') {\n      if (button === 0 && shiftKey) {\n        // Prevent browser selecting text in prompt or output\n        event.preventDefault();\n\n        // Shift-click - extend selection\n        try {\n          this.extendContiguousSelectionTo(index);\n        } catch (e) {\n          console.error(e);\n          this.deselectAll();\n          return;\n        }\n        // Enter selecting mode\n        this._mouseMode = 'select';\n        document.addEventListener('mouseup', this, true);\n        document.addEventListener('mousemove', this, true);\n      } else if (button === 0 && !shiftKey) {\n        // Prepare to start a drag if we are on the drag region. TODO: If there is no drag, we'll deselect on mouseup.\n        if (targetArea === 'prompt' && this.isSelectedOrActive(widget)) {\n          // Prepare for a drag start\n          this._dragData = {\n            pressX: event.clientX,\n            pressY: event.clientY,\n            index: index\n          };\n\n          // Enter possible drag mode\n          this._mouseMode = 'couldDrag';\n          document.addEventListener('mouseup', this, true);\n          document.addEventListener('mousemove', this, true);\n          event.preventDefault();\n        } else {\n          this.deselectAll();\n          this.activeCellIndex = index;\n        }\n      } else if (button === 2) {\n        if (!this.isSelectedOrActive(widget)) {\n          this.deselectAll();\n          this.activeCellIndex = index;\n        }\n        event.preventDefault();\n      }\n    } else if (targetArea === 'input') {\n      if (button === 2 && !this.isSelectedOrActive(widget)) {\n        this.deselectAll();\n        this.activeCellIndex = index;\n      }\n    }\n\n    // If we didn't set focus above, make sure we get focus now.\n    this._ensureFocus(true);\n  }\n\n  /**\n   * Handle the `'mouseup'` event on the document.\n   */\n  private _evtDocumentMouseup(event: MouseEvent): void {\n    // Remove the event listeners we put on the document\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n\n    if (this._mouseMode === 'couldDrag') {\n      // We didn't end up dragging if we are here, so treat it as a click event.\n\n      // Find the target cell.\n      let target = event.target as HTMLElement;\n      let index = this._findCell(target);\n      if (index === -1) {\n        // `event.target` sometimes gives an orphaned node in\n        // Firefox 57, which can have `null` anywhere in its parent line. If we fail\n        // to find a cell using `event.target`, try again using a target\n        // reconstructed from the position of the click event.\n        target = document.elementFromPoint(\n          event.clientX,\n          event.clientY\n        ) as HTMLElement;\n        index = this._findCell(target);\n      }\n\n      this.deselectAll();\n      this.activeCellIndex = index;\n    }\n\n    this._mouseMode = null;\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the widget.\n   */\n  private _evtDocumentMousemove(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // If in select mode, update the selection\n    switch (this._mouseMode) {\n      case 'select':\n        let target = event.target as HTMLElement;\n        let index = this._findCell(target);\n        if (index !== -1) {\n          this.extendContiguousSelectionTo(index);\n        }\n        break;\n      case 'couldDrag':\n        // Check for a drag initialization.\n        let data = this._dragData;\n        let dx = Math.abs(event.clientX - data.pressX);\n        let dy = Math.abs(event.clientY - data.pressY);\n        if (dx >= DRAG_THRESHOLD || dy >= DRAG_THRESHOLD) {\n          this._mouseMode = null;\n          this._startDrag(data.index, event.clientX, event.clientY);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle the `'p-dragenter'` event for the widget.\n   */\n  private _evtDragEnter(event: IDragEvent): void {\n    if (!event.mimeData.hasData(JUPYTER_CELL_MIME)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    let target = event.target as HTMLElement;\n    let index = this._findCell(target);\n    if (index === -1) {\n      return;\n    }\n\n    let widget = (this.layout as PanelLayout).widgets[index];\n    widget.node.classList.add(DROP_TARGET_CLASS);\n  }\n\n  /**\n   * Handle the `'p-dragleave'` event for the widget.\n   */\n  private _evtDragLeave(event: IDragEvent): void {\n    if (!event.mimeData.hasData(JUPYTER_CELL_MIME)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    let elements = this.node.getElementsByClassName(DROP_TARGET_CLASS);\n    if (elements.length) {\n      (elements[0] as HTMLElement).classList.remove(DROP_TARGET_CLASS);\n    }\n  }\n\n  /**\n   * Handle the `'p-dragover'` event for the widget.\n   */\n  private _evtDragOver(event: IDragEvent): void {\n    if (!event.mimeData.hasData(JUPYTER_CELL_MIME)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    event.dropAction = event.proposedAction;\n    let elements = this.node.getElementsByClassName(DROP_TARGET_CLASS);\n    if (elements.length) {\n      (elements[0] as HTMLElement).classList.remove(DROP_TARGET_CLASS);\n    }\n    let target = event.target as HTMLElement;\n    let index = this._findCell(target);\n    if (index === -1) {\n      return;\n    }\n    let widget = (this.layout as PanelLayout).widgets[index];\n    widget.node.classList.add(DROP_TARGET_CLASS);\n  }\n\n  /**\n   * Handle the `'p-drop'` event for the widget.\n   */\n  private _evtDrop(event: IDragEvent): void {\n    if (!event.mimeData.hasData(JUPYTER_CELL_MIME)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.proposedAction === 'none') {\n      event.dropAction = 'none';\n      return;\n    }\n\n    let target = event.target as HTMLElement;\n    while (target && target.parentElement) {\n      if (target.classList.contains(DROP_TARGET_CLASS)) {\n        target.classList.remove(DROP_TARGET_CLASS);\n        break;\n      }\n      target = target.parentElement;\n    }\n\n    let source: Notebook = event.source;\n    if (source === this) {\n      // Handle the case where we are moving cells within\n      // the same notebook.\n      event.dropAction = 'move';\n      let toMove: Cell[] = event.mimeData.getData('internal:cells');\n\n      // Compute the to/from indices for the move.\n      let fromIndex = ArrayExt.firstIndexOf(this.widgets, toMove[0]);\n      let toIndex = this._findCell(target);\n      // This check is needed for consistency with the view.\n      if (toIndex !== -1 && toIndex > fromIndex) {\n        toIndex -= 1;\n      } else if (toIndex === -1) {\n        // If the drop is within the notebook but not on any cell,\n        // most often this means it is past the cell areas, so\n        // set it to move the cells to the end of the notebook.\n        toIndex = this.widgets.length - 1;\n      }\n      // Don't move if we are within the block of selected cells.\n      if (toIndex >= fromIndex && toIndex < fromIndex + toMove.length) {\n        return;\n      }\n\n      // Move the cells one by one\n      this.model.cells.beginCompoundOperation();\n      if (fromIndex < toIndex) {\n        each(toMove, cellWidget => {\n          this.model.cells.move(fromIndex, toIndex);\n        });\n      } else if (fromIndex > toIndex) {\n        each(toMove, cellWidget => {\n          this.model.cells.move(fromIndex++, toIndex++);\n        });\n      }\n      this.model.cells.endCompoundOperation();\n    } else {\n      // Handle the case where we are copying cells between\n      // notebooks.\n      event.dropAction = 'copy';\n      // Find the target cell and insert the copied cells.\n      let index = this._findCell(target);\n      if (index === -1) {\n        index = this.widgets.length;\n      }\n      let start = index;\n      let model = this.model;\n      let values = event.mimeData.getData(JUPYTER_CELL_MIME);\n      let factory = model.contentFactory;\n\n      // Insert the copies of the original cells.\n      model.cells.beginCompoundOperation();\n      each(values, (cell: nbformat.ICell) => {\n        let value: ICellModel;\n        switch (cell.cell_type) {\n          case 'code':\n            value = factory.createCodeCell({ cell });\n            break;\n          case 'markdown':\n            value = factory.createMarkdownCell({ cell });\n            break;\n          default:\n            value = factory.createRawCell({ cell });\n            break;\n        }\n        model.cells.insert(index++, value);\n      });\n      model.cells.endCompoundOperation();\n      // Select the inserted cells.\n      this.deselectAll();\n      this.activeCellIndex = start;\n      this.extendContiguousSelectionTo(index - 1);\n    }\n  }\n\n  /**\n   * Start a drag event.\n   */\n  private _startDrag(index: number, clientX: number, clientY: number): void {\n    let cells = this.model.cells;\n    let selected: nbformat.ICell[] = [];\n    let toMove: Cell[] = [];\n\n    each(this.widgets, (widget, i) => {\n      let cell = cells.get(i);\n      if (this.isSelectedOrActive(widget)) {\n        widget.addClass(DROP_SOURCE_CLASS);\n        selected.push(cell.toJSON());\n        toMove.push(widget);\n      }\n    });\n    let activeCell = this.activeCell;\n    let dragImage: HTMLElement = null;\n    let countString: string;\n    if (activeCell.model.type === 'code') {\n      let executionCount = (activeCell.model as ICodeCellModel).executionCount;\n      countString = ' ';\n      if (executionCount) {\n        countString = executionCount.toString();\n      }\n    } else {\n      countString = '';\n    }\n\n    // Create the drag image.\n    dragImage = Private.createDragImage(\n      selected.length,\n      countString,\n      activeCell.model.value.text.split('\\n')[0].slice(0, 26)\n    );\n\n    // Set up the drag event.\n    this._drag = new Drag({\n      mimeData: new MimeData(),\n      dragImage,\n      supportedActions: 'copy-move',\n      proposedAction: 'copy',\n      source: this\n    });\n    this._drag.mimeData.setData(JUPYTER_CELL_MIME, selected);\n    // Add mimeData for the fully reified cell widgets, for the\n    // case where the target is in the same notebook and we\n    // can just move the cells.\n    this._drag.mimeData.setData('internal:cells', toMove);\n\n    // Remove mousemove and mouseup listeners and start the drag.\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n    this._mouseMode = null;\n    this._drag.start(clientX, clientY).then(action => {\n      if (this.isDisposed) {\n        return;\n      }\n      this._drag = null;\n      each(toMove, widget => {\n        widget.removeClass(DROP_SOURCE_CLASS);\n      });\n    });\n  }\n\n  /**\n   * Handle `focus` events for the widget.\n   */\n  private _evtFocusIn(event: MouseEvent): void {\n    let target = event.target as HTMLElement;\n\n    let i = this._findCell(target);\n    if (i !== -1) {\n      let widget = this.widgets[i];\n      // If the editor itself does not have focus, ensure command mode.\n      if (!widget.editorWidget.node.contains(target)) {\n        this.mode = 'command';\n      }\n      this.activeCellIndex = i;\n      // If the editor has focus, ensure edit mode.\n      let node = widget.editorWidget.node;\n      if (node.contains(target)) {\n        this.mode = 'edit';\n      }\n    } else {\n      // No cell has focus, ensure command mode.\n      this.mode = 'command';\n    }\n    if (this.mode === 'command' && target !== this.node) {\n      delete this.node.dataset[CODE_RUNNER];\n    } else {\n      this.node.dataset[CODE_RUNNER] = 'true';\n    }\n  }\n\n  /**\n   * Handle `focusout` events for the notebook.\n   */\n  private _evtFocusOut(event: MouseEvent): void {\n    let relatedTarget = event.relatedTarget as HTMLElement;\n\n    // Bail if the window is losing focus, to preserve edit mode. This test\n    // assumes that we explicitly focus things rather than calling blur()\n    if (!relatedTarget) {\n      return;\n    }\n\n    // Bail if the item gaining focus is another cell,\n    // and we should not be entering command mode.\n    const i = this._findCell(relatedTarget);\n    if (i !== -1) {\n      const widget = this.widgets[i];\n      if (widget.editorWidget.node.contains(relatedTarget)) {\n        return;\n      }\n    }\n\n    // Otherwise enter command mode.\n    this.mode = 'command';\n  }\n\n  /**\n   * Handle `dblclick` events for the widget.\n   */\n  private _evtDblClick(event: MouseEvent): void {\n    let model = this.model;\n    if (!model) {\n      return;\n    }\n    this.deselectAll();\n\n    // `event.target` sometimes gives an orphaned node in Firefox 57, which\n    // can have `null` anywhere in its parent tree. If we fail to find a\n    // cell using `event.target`, try again using a target reconstructed from\n    // the position of the click event.\n    let target = event.target as HTMLElement;\n    let i = this._findCell(target);\n    if (i === -1) {\n      target = document.elementFromPoint(\n        event.clientX,\n        event.clientY\n      ) as HTMLElement;\n      i = this._findCell(target);\n    }\n\n    if (i === -1) {\n      return;\n    }\n    this.activeCellIndex = i;\n    if (model.cells.get(i).type === 'markdown') {\n      let widget = this.widgets[i] as MarkdownCell;\n      widget.rendered = false;\n    } else if (target.localName === 'img') {\n      target.classList.toggle(UNCONFINED_CLASS);\n    }\n  }\n\n  /**\n   * Remove selections from inactive cells to avoid\n   * spurious cursors.\n   */\n  private _trimSelections(): void {\n    for (let i = 0; i < this.widgets.length; i++) {\n      if (i !== this._activeCellIndex) {\n        let cell = this.widgets[i];\n        cell.model.selections.delete(cell.editor.uuid);\n      }\n    }\n  }\n\n  private _activeCellIndex = -1;\n  private _activeCell: Cell | undefined = undefined;\n  private _mode: NotebookMode = 'command';\n  private _drag: Drag = null;\n  private _dragData: { pressX: number; pressY: number; index: number } = null;\n  private _mouseMode: 'select' | 'couldDrag' | null = null;\n  private _activeCellChanged = new Signal<this, Cell>(this);\n  private _stateChanged = new Signal<this, IChangedArgs<any>>(this);\n  private _selectionChanged = new Signal<this, void>(this);\n}\n\n/**\n * The namespace for the `Notebook` class statics.\n */\nexport namespace Notebook {\n  /**\n   * An options object for initializing a notebook widget.\n   */\n  export interface IOptions extends StaticNotebook.IOptions {}\n\n  /**\n   * The content factory for the notebook widget.\n   */\n  export interface IContentFactory extends StaticNotebook.IContentFactory {}\n\n  /**\n   * The default implementation of a notebook content factory..\n   *\n   * #### Notes\n   * Override methods on this class to customize the default notebook factory\n   * methods that create notebook content.\n   */\n  export class ContentFactory extends StaticNotebook.ContentFactory {}\n\n  /**\n   * A namespace for the notebook content factory.\n   */\n  export namespace ContentFactory {\n    /**\n     * An options object for initializing a notebook content factory.\n     */\n    export interface IOptions extends StaticNotebook.ContentFactory.IOptions {}\n  }\n\n  export const defaultContentFactory: IContentFactory = new ContentFactory();\n}\n\n/**\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * An attached property for the selected state of a cell.\n   */\n  export const selectedProperty = new AttachedProperty<Cell, boolean>({\n    name: 'selected',\n    create: () => false\n  });\n\n  /**\n   * A custom panel layout for the notebook.\n   */\n  export class NotebookPanelLayout extends PanelLayout {\n    /**\n     * A message handler invoked on an `'update-request'` message.\n     *\n     * #### Notes\n     * This is a reimplementation of the base class method,\n     * and is a no-op.\n     */\n    protected onUpdateRequest(msg: Message): void {\n      // This is a no-op.\n    }\n  }\n\n  /**\n   * Create a cell drag image.\n   */\n  export function createDragImage(\n    count: number,\n    promptNumber: string,\n    cellContent: string\n  ): HTMLElement {\n    if (count > 1) {\n      if (promptNumber !== '') {\n        return VirtualDOM.realize(\n          h.div(\n            h.div(\n              { className: DRAG_IMAGE_CLASS },\n              h.span(\n                { className: CELL_DRAG_PROMPT_CLASS },\n                'In [' + promptNumber + ']:'\n              ),\n              h.span({ className: CELL_DRAG_CONTENT_CLASS }, cellContent)\n            ),\n            h.div({ className: CELL_DRAG_MULTIPLE_BACK }, '')\n          )\n        );\n      } else {\n        return VirtualDOM.realize(\n          h.div(\n            h.div(\n              { className: DRAG_IMAGE_CLASS },\n              h.span({ className: CELL_DRAG_PROMPT_CLASS }),\n              h.span({ className: CELL_DRAG_CONTENT_CLASS }, cellContent)\n            ),\n            h.div({ className: CELL_DRAG_MULTIPLE_BACK }, '')\n          )\n        );\n      }\n    } else {\n      if (promptNumber !== '') {\n        return VirtualDOM.realize(\n          h.div(\n            h.div(\n              { className: `${DRAG_IMAGE_CLASS} ${SINGLE_DRAG_IMAGE_CLASS}` },\n              h.span(\n                { className: CELL_DRAG_PROMPT_CLASS },\n                'In [' + promptNumber + ']:'\n              ),\n              h.span({ className: CELL_DRAG_CONTENT_CLASS }, cellContent)\n            )\n          )\n        );\n      } else {\n        return VirtualDOM.realize(\n          h.div(\n            h.div(\n              { className: `${DRAG_IMAGE_CLASS} ${SINGLE_DRAG_IMAGE_CLASS}` },\n              h.span({ className: CELL_DRAG_PROMPT_CLASS }),\n              h.span({ className: CELL_DRAG_CONTENT_CLASS }, cellContent)\n            )\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * Process the `IOptions` passed to the notebook widget.\n   *\n   * #### Notes\n   * This defaults the content factory to that in the `Notebook` namespace.\n   */\n  export function processNotebookOptions(options: Notebook.IOptions) {\n    if (options.contentFactory) {\n      return options;\n    } else {\n      return {\n        rendermime: options.rendermime,\n        languagePreference: options.languagePreference,\n        contentFactory: Notebook.defaultContentFactory,\n        mimeTypeService: options.mimeTypeService\n      };\n    }\n  }\n}\n"]}