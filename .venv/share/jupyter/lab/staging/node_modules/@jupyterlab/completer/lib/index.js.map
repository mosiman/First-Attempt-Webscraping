{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../completer/src/index.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;;;;AAM3D,mDAA4C;AAM5C,8BAA4B;AAE5B,+BAA0B;AAC1B,uCAAkC;AAClC,6BAAwB;AACxB,8BAAyB;AAEzB,oBAAoB;AACpB;;GAEG;AACU,QAAA,kBAAkB,GAAG,IAAI,iBAAK,CACzC,0CAA0C,CAC3C,CAAC","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { CodeEditor } from '@jupyterlab/codeeditor';\n\nimport { IDataConnector } from '@jupyterlab/coreutils';\n\nimport { Token } from '@phosphor/coreutils';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport { CompletionHandler } from './handler';\n\nimport '../style/index.css';\n\nexport * from './handler';\nexport * from './kernelconnector';\nexport * from './model';\nexport * from './widget';\n\n/* tslint:disable */\n/**\n * The completion manager token.\n */\nexport const ICompletionManager = new Token<ICompletionManager>(\n  '@jupyterlab/completer:ICompletionManager'\n);\n/* tslint:enable */\n\n/**\n * A manager to register completers with parent widgets.\n */\nexport interface ICompletionManager {\n  /**\n   * Register a completable object with the completion manager.\n   *\n   * @returns A completable object whose attributes can be updated as necessary.\n   */\n  register(\n    completable: ICompletionManager.ICompletable\n  ): ICompletionManager.ICompletableAttributes;\n}\n\n/**\n * A namespace for `ICompletionManager` interface specifications.\n */\nexport namespace ICompletionManager {\n  /**\n   * The attributes of a completable object that can change and sync at runtime.\n   */\n  export interface ICompletableAttributes {\n    /**\n     * The host editor for the completer.\n     */\n    editor: CodeEditor.IEditor | null;\n\n    /**\n     * The data connector used to populate the completer.\n     */\n    connector: IDataConnector<\n      CompletionHandler.IReply,\n      void,\n      CompletionHandler.IRequest\n    >;\n  }\n\n  /**\n   * An interface for completer-compatible objects.\n   */\n  export interface ICompletable extends ICompletableAttributes {\n    /**\n     * The parent of the completer; the completer resources dispose with parent.\n     */\n    readonly parent: Widget;\n  }\n}\n"]}