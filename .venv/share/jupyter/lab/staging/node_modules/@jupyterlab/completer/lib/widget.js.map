{"version":3,"file":"widget.js","sourceRoot":"","sources":["../../../../completer/src/widget.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;AAE3D,mDAA8E;AAE9E,mDAA0D;AAI1D,iDAAgD;AAIhD,mDAAsD;AAEtD,+CAA2C;AAE3C,mDAAkE;AAIlE;;GAEG;AACH,MAAM,UAAU,GAAG,mBAAmB,CAAC;AAEvC;;GAEG;AACH,MAAM,YAAY,GAAG,eAAe,CAAC;AAErC;;GAEG;AACH,MAAM,UAAU,GAAG,EAAE,CAAC;AAEtB;;GAEG;AACH,MAAM,UAAU,GAAG,GAAG,CAAC;AAEvB;;GAEG;AACH,MAAM,WAAW,GAAG,IAAI,CAAC;AAEzB;;;GAGG;AACH,MAAM,QAAQ,GAAG,EAAE,CAAC;AAEpB;;GAEG;AACH,eAAuB,SAAQ,gBAAM;IACnC;;OAEG;IACH,YAAY,OAA2B;QACrC,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QA6ZxC,iBAAY,GAAG,CAAC,CAAC;QACjB,YAAO,GAA8B,IAAI,CAAC;QAC1C,WAAM,GAA4B,IAAI,CAAC;QACvC,cAAS,GAA+B,IAAI,CAAC;QAC7C,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,IAAI,kBAAM,CAAe,IAAI,CAAC,CAAC;QAC3C,uBAAkB,GAAG,IAAI,kBAAM,CAAa,IAAI,CAAC,CAAC;QAlaxD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,SAAS,CAAC,eAAe,CAAC;QAC/D,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC;QACnC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACD,IAAI,MAAM,CAAC,QAAmC;QAC5C,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;;;;;OAMG;IACH,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,IAAI,KAAK,CAAC,KAA8B;QACtC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;YACrD,OAAO;SACR;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;SACrE;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;SAClE;IACH,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED;;;;;;;;;OASG;IACH,WAAW,CAAC,KAAY;QACtB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YAClC,OAAO;SACR;QACD,QAAQ,KAAK,CAAC,IAAI,EAAE;YAClB,KAAK,SAAS;gBACZ,IAAI,CAAC,WAAW,CAAC,KAAsB,CAAC,CAAC;gBACzC,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,aAAa,CAAC,KAAmB,CAAC,CAAC;gBACxC,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,UAAU,CAAC,KAAmB,CAAC,CAAC;gBACrC,MAAM;YACR;gBACE,MAAM;SACT;IACH,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;IAED;;OAEG;IACH,YAAY;QACV,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,YAAY,EAAE,CAAgB,CAAC;QACxE,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAW,CAAC,CAAC;QACjE,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED;;OAEG;IACO,aAAa,CAAC,GAAY;QAClC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QACxD,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QAC1D,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACzD,CAAC;IAED;;OAEG;IACO,cAAc,CAAC,GAAY;QACnC,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QAC3D,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QAC7D,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC5D,CAAC;IAED;;OAEG;IACO,mBAAmB;QAC3B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;IACH,CAAC;IAED;;OAEG;IACO,eAAe,CAAC,GAAY;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAE1B,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACzC;YACD,OAAO;SACR;QAED,IAAI,KAAK,GAAG,mBAAO,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QAEnC,yCAAyC;QACzC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACzC;YACD,OAAO;SACR;QAED,8CAA8C;QAC9C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO;SACR;QAED,kBAAkB;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,4EAA4E;QAC5E,+DAA+D;QAC/D,IAAI,YAAY,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QAExC,gCAAgC;QAChC,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;YACtB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CACpC,IAAK,EACL,KAAK,CAAC,OAAO,EAAE,EACf,YAAY,CACb,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACtB;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAEnC,sEAAsE;QACtE,qCAAqC;QACrC,IAAI,KAAK,CAAC,WAAW,EAAE;YACrB,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YAEzC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;YAC1B,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,OAAO;aACR;SACF;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAED;;;;;;;OAOG;IACK,MAAM,CAAC,SAAwB;QACrC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;QACzD,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,YAAY,EAAE,CAAgB,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;SACrD;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SAClE;QACD,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAgB,CAAC;QACjD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACnC,qBAAU,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACK,WAAW,CAAC,KAAoB;QACtC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YAClC,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAqB,CAAC,EAAE;YAC5D,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO;SACR;QACD,QAAQ,KAAK,CAAC,OAAO,EAAE;YACrB,KAAK,CAAC,EAAE,UAAU;gBAChB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,wBAAwB,EAAE,CAAC;gBACjC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;gBACxB,IAAI,CAAC,KAAK,EAAE;oBACV,OAAO;iBACR;gBACD,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;gBACzB,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC1B,IAAI,SAAS,EAAE;oBACb,OAAO;iBACR;gBACD,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,OAAO;YACT,KAAK,EAAE,EAAE,UAAU;gBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,wBAAwB,EAAE,CAAC;gBACjC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO;YACT,KAAK,EAAE,CAAC,CAAC,eAAe;YACxB,KAAK,EAAE,EAAE,iBAAiB;gBACxB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,wBAAwB,EAAE,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBAClD,OAAO;YACT;gBACE,OAAO;SACV;IACH,CAAC;IAED;;OAEG;IACK,aAAa,CAAC,KAAiB;QACrC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YAClC,OAAO;SACR;QACD,IAAI,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;YACnC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO;SACR;QAED,IAAI,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;QACzC,OAAO,MAAM,KAAK,QAAQ,CAAC,eAAe,EAAE;YAC1C,yEAAyE;YACzE,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBACzC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,wBAAwB,EAAE,CAAC;gBACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAW,CAAC,CAAC;gBACjE,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO;aACR;YAED,iEAAiE;YACjE,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,EAAE;gBACxB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,wBAAwB,EAAE,CAAC;gBACjC,OAAO;aACR;YAED,MAAM,GAAG,MAAM,CAAC,aAA4B,CAAC;SAC9C;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED;;OAEG;IACK,UAAU,CAAC,KAAiB;QAClC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YAClC,OAAO;SACR;QAED,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAEtB,wEAAwE;QACxE,2EAA2E;QAC3E,4EAA4E;QAC5E,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAqB,CAAC,EAAE;YAC9C,OAAO;SACR;QAED,+CAA+C;QAC/C,qBAAqB,CAAC,GAAG,EAAE;YACzB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACK,eAAe;QACrB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,KAAK,CAAC;SACd;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;QAC3D,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/D,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;QAExB,2EAA2E;QAC3E,IAAI,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAC7D,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YAErB,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACK,YAAY;QAClB,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAE5B,kEAAkE;QAClE,yEAAyE;QACzE,sDAAsD;QACtD,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACzD,OAAO;SACR;QAED,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAyB,CAAC;QACrE,MAAM,MAAM,GAAG,MAAM,CAAC,wBAAwB,CAAC,QAAQ,CAAe,CAAC;QACvE,MAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,eAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAY,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QAE1D,2CAA2C;QAC3C,mBAAQ,CAAC,WAAW,CAAC;YACnB,MAAM;YACN,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,SAAS,EAAE,UAAU;YACrB,SAAS,EAAE,UAAU;YACrB,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,EAAE,UAAU,EAAE,UAAU,GAAG,WAAW,EAAE;YAChD,SAAS,EAAE,OAAO;YAClB,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;IACL,CAAC;CASF;AAzaD,8BAyaC;AAED,WAAiB,SAAS;IAyMxB;;OAEG;IACH;QACE;;WAEG;QACH,cAAc,CACZ,IAAW,EACX,OAAgB,EAChB,YAAsB;YAEtB,IAAI,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACtC,EAAE,CAAC,SAAS,GAAG,UAAU,CAAC;YAC1B,uDAAuD;YACvD,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAExC,IAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC/C,SAAS,CAAC,SAAS,GAAG,oBAAoB,CAAC;YAC3C,4DAA4D;YAC5D,SAAS,CAAC,SAAS,GAAG,2BAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE;gBACzD,WAAW,EAAE,CAAC,MAAM,CAAC;aACtB,CAAC,CAAC;YAEH,yCAAyC;YACzC,IAAI,CAAC,mBAAO,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;gBACnC,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC9C,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBACnC,QAAQ,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;gBACrD,IAAI,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;gBAC3D,QAAQ,CAAC,SAAS,GAAG,mBAAmB,CAAC;gBACzC,QAAQ,CAAC,YAAY,CAAC,kBAAkB,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACjE,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;gBAChB,IAAI,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBACtD,gBAAgB,CAAC,SAAS,GAAG,2BAA2B,CAAC;gBACzD,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACxD,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACzB,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;gBAC1B,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;aAClC;iBAAM;gBACL,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;aAC3B;YACD,OAAO,EAAE,CAAC;QACZ,CAAC;KACF;IAzCY,kBAAQ,WAyCpB,CAAA;IAED;;OAEG;IACU,yBAAe,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChD,CAAC,EA3PgB,SAAS,GAAT,iBAAS,KAAT,iBAAS,QA2PzB;AAED;;GAEG;AACH,IAAU,OAAO,CA8ChB;AA9CD,WAAU,OAAO;IACf;;OAEG;IACH,sBAA6B,MAAgB;QAC3C,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;QACxB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,GAAG,GAAG,CAAC,EAAE;YACX,OAAO,MAAM,CAAC;SACf;QACD,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;oBACvB,OAAO,MAAM,CAAC;iBACf;aACF;YACD,MAAM,IAAI,EAAE,CAAC;SACd;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAjBe,oBAAY,eAiB3B,CAAA;IAED;;OAEG;IACH,oBAA2B,KAAe;QACxC,IAAI,MAAM,GAAa,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAChD,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,CAAiB,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;SACnE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IANe,kBAAU,aAMzB,CAAA;IAED;;OAEG;IACH,0BAAiC,KAAiB;QAChD,OAAO,CACL,KAAK,CAAC,MAAM,KAAK,CAAC;YAClB,KAAK,CAAC,MAAM;YACZ,KAAK,CAAC,OAAO;YACb,KAAK,CAAC,QAAQ;YACd,KAAK,CAAC,OAAO,CACd,CAAC;IACJ,CAAC;IARe,wBAAgB,mBAQ/B,CAAA;AACH,CAAC,EA9CS,OAAO,KAAP,OAAO,QA8ChB","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IIterator, IterableOrArrayLike, toArray } from '@phosphor/algorithm';\n\nimport { JSONObject, JSONExt } from '@phosphor/coreutils';\n\nimport { IDisposable } from '@phosphor/disposable';\n\nimport { ElementExt } from '@phosphor/domutils';\n\nimport { Message } from '@phosphor/messaging';\n\nimport { ISignal, Signal } from '@phosphor/signaling';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport { HoverBox, defaultSanitizer } from '@jupyterlab/apputils';\n\nimport { CodeEditor } from '@jupyterlab/codeeditor';\n\n/**\n * The class name added to completer menu items.\n */\nconst ITEM_CLASS = 'jp-Completer-item';\n\n/**\n * The class name added to an active completer menu item.\n */\nconst ACTIVE_CLASS = 'jp-mod-active';\n\n/**\n * The minimum height of a completer widget.\n */\nconst MIN_HEIGHT = 20;\n\n/**\n * The maximum height of a completer widget.\n */\nconst MAX_HEIGHT = 200;\n\n/**\n * A flag to indicate that event handlers are caught in the capture phase.\n */\nconst USE_CAPTURE = true;\n\n/**\n * The number of colors defined for the completer type annotations.\n * These are listed in completer/style/index.css#102-152.\n */\nconst N_COLORS = 10;\n\n/**\n * A widget that enables text completion.\n */\nexport class Completer extends Widget {\n  /**\n   * Construct a text completer menu widget.\n   */\n  constructor(options: Completer.IOptions) {\n    super({ node: document.createElement('ul') });\n    this._renderer = options.renderer || Completer.defaultRenderer;\n    this.model = options.model || null;\n    this.editor = options.editor || null;\n    this.addClass('jp-Completer');\n  }\n\n  /**\n   * The editor used by the completion widget.\n   */\n  get editor(): CodeEditor.IEditor | null {\n    return this._editor;\n  }\n  set editor(newValue: CodeEditor.IEditor | null) {\n    this._editor = newValue;\n  }\n\n  /**\n   * A signal emitted when a selection is made from the completer menu.\n   */\n  get selected(): ISignal<this, string> {\n    return this._selected;\n  }\n\n  /**\n   * A signal emitted when the completer widget's visibility changes.\n   *\n   * #### Notes\n   * This signal is useful when there are multiple floating widgets that may\n   * contend with the same space and ought to be mutually exclusive.\n   */\n  get visibilityChanged(): ISignal<this, void> {\n    return this._visibilityChanged;\n  }\n\n  /**\n   * The model used by the completer widget.\n   */\n  get model(): Completer.IModel | null {\n    return this._model;\n  }\n  set model(model: Completer.IModel | null) {\n    if ((!model && !this._model) || model === this._model) {\n      return;\n    }\n    if (this._model) {\n      this._model.stateChanged.disconnect(this.onModelStateChanged, this);\n    }\n    this._model = model;\n    if (this._model) {\n      this._model.stateChanged.connect(this.onModelStateChanged, this);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the completer widget.\n   */\n  dispose() {\n    this._model = null;\n    super.dispose();\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the dock panel's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    if (this.isHidden || !this._editor) {\n      return;\n    }\n    switch (event.type) {\n      case 'keydown':\n        this._evtKeydown(event as KeyboardEvent);\n        break;\n      case 'mousedown':\n        this._evtMousedown(event as MouseEvent);\n        break;\n      case 'scroll':\n        this._evtScroll(event as MouseEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Reset the widget.\n   */\n  reset(): void {\n    this._activeIndex = 0;\n    if (this._model) {\n      this._model.reset(true);\n    }\n  }\n\n  /**\n   * Emit the selected signal for the current active item and reset.\n   */\n  selectActive(): void {\n    let active = this.node.querySelector(`.${ACTIVE_CLASS}`) as HTMLElement;\n    if (!active) {\n      this.reset();\n      return;\n    }\n    this._selected.emit(active.getAttribute('data-value') as string);\n    this.reset();\n  }\n\n  /**\n   * Handle `after-attach` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    document.addEventListener('keydown', this, USE_CAPTURE);\n    document.addEventListener('mousedown', this, USE_CAPTURE);\n    document.addEventListener('scroll', this, USE_CAPTURE);\n  }\n\n  /**\n   * Handle `before-detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    document.removeEventListener('keydown', this, USE_CAPTURE);\n    document.removeEventListener('mousedown', this, USE_CAPTURE);\n    document.removeEventListener('scroll', this, USE_CAPTURE);\n  }\n\n  /**\n   * Handle model state changes.\n   */\n  protected onModelStateChanged(): void {\n    if (this.isAttached) {\n      this._activeIndex = 0;\n      this.update();\n    }\n  }\n\n  /**\n   * Handle `update-request` messages.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    const model = this._model;\n\n    if (!model) {\n      return;\n    }\n\n    if (this._resetFlag) {\n      this._resetFlag = false;\n      if (!this.isHidden) {\n        this.hide();\n        this._visibilityChanged.emit(undefined);\n      }\n      return;\n    }\n\n    let items = toArray(model.items());\n\n    // If there are no items, reset and bail.\n    if (!items || !items.length) {\n      this._resetFlag = true;\n      this.reset();\n      if (!this.isHidden) {\n        this.hide();\n        this._visibilityChanged.emit(undefined);\n      }\n      return;\n    }\n\n    // If there is only one item, signal and bail.\n    if (items.length === 1) {\n      this._selected.emit(items[0].raw);\n      this.reset();\n      return;\n    }\n\n    // Clear the node.\n    let node = this.node;\n    node.textContent = '';\n\n    // Compute an ordered list of all the types in the typeMap, this is computed\n    // once by the model each time new data arrives for efficiency.\n    let orderedTypes = model.orderedTypes();\n\n    // Populate the completer items.\n    for (let item of items) {\n      let li = this._renderer.createItemNode(\n        item!,\n        model.typeMap(),\n        orderedTypes\n      );\n      node.appendChild(li);\n    }\n\n    let active = node.querySelectorAll(`.${ITEM_CLASS}`)[this._activeIndex];\n    active.classList.add(ACTIVE_CLASS);\n\n    // If this is the first time the current completer session has loaded,\n    // populate any initial subset match.\n    if (model.subsetMatch) {\n      const populated = this._populateSubset();\n\n      model.subsetMatch = false;\n      if (populated) {\n        this.update();\n        return;\n      }\n    }\n\n    if (this.isHidden) {\n      this.show();\n      this._setGeometry();\n      this._visibilityChanged.emit(undefined);\n    } else {\n      this._setGeometry();\n    }\n  }\n\n  /**\n   * Cycle through the available completer items.\n   *\n   * #### Notes\n   * When the user cycles all the way `down` to the last index, subsequent\n   * `down` cycles will remain on the last index. When the user cycles `up` to\n   * the first item, subsequent `up` cycles will remain on the first cycle.\n   */\n  private _cycle(direction: 'up' | 'down'): void {\n    let items = this.node.querySelectorAll(`.${ITEM_CLASS}`);\n    let index = this._activeIndex;\n    let active = this.node.querySelector(`.${ACTIVE_CLASS}`) as HTMLElement;\n    active.classList.remove(ACTIVE_CLASS);\n    if (direction === 'up') {\n      this._activeIndex = index === 0 ? index : index - 1;\n    } else {\n      this._activeIndex = index < items.length - 1 ? index + 1 : index;\n    }\n    active = items[this._activeIndex] as HTMLElement;\n    active.classList.add(ACTIVE_CLASS);\n    ElementExt.scrollIntoViewIfNeeded(this.node, active);\n  }\n\n  /**\n   * Handle keydown events for the widget.\n   */\n  private _evtKeydown(event: KeyboardEvent) {\n    if (this.isHidden || !this._editor) {\n      return;\n    }\n    if (!this._editor.host.contains(event.target as HTMLElement)) {\n      this.reset();\n      return;\n    }\n    switch (event.keyCode) {\n      case 9: // Tab key\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        let model = this._model;\n        if (!model) {\n          return;\n        }\n        model.subsetMatch = true;\n        let populated = this._populateSubset();\n        model.subsetMatch = false;\n        if (populated) {\n          return;\n        }\n        this.selectActive();\n        return;\n      case 27: // Esc key\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        this.reset();\n        return;\n      case 38: // Up arrow key\n      case 40: // Down arrow key\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        this._cycle(event.keyCode === 38 ? 'up' : 'down');\n        return;\n      default:\n        return;\n    }\n  }\n\n  /**\n   * Handle mousedown events for the widget.\n   */\n  private _evtMousedown(event: MouseEvent) {\n    if (this.isHidden || !this._editor) {\n      return;\n    }\n    if (Private.nonstandardClick(event)) {\n      this.reset();\n      return;\n    }\n\n    let target = event.target as HTMLElement;\n    while (target !== document.documentElement) {\n      // If the user has made a selection, emit its value and reset the widget.\n      if (target.classList.contains(ITEM_CLASS)) {\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        this._selected.emit(target.getAttribute('data-value') as string);\n        this.reset();\n        return;\n      }\n\n      // If the mouse event happened anywhere else in the widget, bail.\n      if (target === this.node) {\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        return;\n      }\n\n      target = target.parentElement as HTMLElement;\n    }\n    this.reset();\n  }\n\n  /**\n   * Handle scroll events for the widget\n   */\n  private _evtScroll(event: MouseEvent) {\n    if (this.isHidden || !this._editor) {\n      return;\n    }\n\n    const { node } = this;\n\n    // All scrolls except scrolls in the actual hover box node may cause the\n    // referent editor that anchors the node to move, so the only scroll events\n    // that can safely be ignored are ones that happen inside the hovering node.\n    if (node.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    // Set the geometry of the node asynchronously.\n    requestAnimationFrame(() => {\n      this._setGeometry();\n    });\n  }\n\n  /**\n   * Populate the completer up to the longest initial subset of items.\n   *\n   * @returns `true` if a subset match was found and populated.\n   */\n  private _populateSubset(): boolean {\n    const { model } = this;\n\n    if (!model) {\n      return false;\n    }\n\n    const items = this.node.querySelectorAll(`.${ITEM_CLASS}`);\n    const subset = Private.commonSubset(Private.itemValues(items));\n    const { query } = model;\n\n    // If a common subset exists and it is not the current query, highlight it.\n    if (subset && subset !== query && subset.indexOf(query) === 0) {\n      model.query = subset;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Set the visible dimensions of the widget.\n   */\n  private _setGeometry(): void {\n    const { node } = this;\n    const model = this._model;\n    const editor = this._editor;\n\n    // This is an overly defensive test: `cursor` will always exist if\n    // `original` exists, except in contrived tests. But since it is possible\n    // to generate a runtime error, the check occurs here.\n    if (!editor || !model || !model.original || !model.cursor) {\n      return;\n    }\n\n    const start = model.cursor.start;\n    const position = editor.getPositionAt(start) as CodeEditor.IPosition;\n    const anchor = editor.getCoordinateForPosition(position) as ClientRect;\n    const style = window.getComputedStyle(node);\n    const borderLeft = parseInt(style.borderLeftWidth!, 10) || 0;\n    const paddingLeft = parseInt(style.paddingLeft!, 10) || 0;\n\n    // Calculate the geometry of the completer.\n    HoverBox.setGeometry({\n      anchor,\n      host: editor.host,\n      maxHeight: MAX_HEIGHT,\n      minHeight: MIN_HEIGHT,\n      node: node,\n      offset: { horizontal: borderLeft + paddingLeft },\n      privilege: 'below',\n      style: style\n    });\n  }\n\n  private _activeIndex = 0;\n  private _editor: CodeEditor.IEditor | null = null;\n  private _model: Completer.IModel | null = null;\n  private _renderer: Completer.IRenderer | null = null;\n  private _resetFlag = false;\n  private _selected = new Signal<this, string>(this);\n  private _visibilityChanged = new Signal<this, void>(this);\n}\n\nexport namespace Completer {\n  /**\n   * A type map that may add type annotations to completer matches.\n   */\n  export type TypeMap = { [index: string]: string };\n\n  /**\n   * The initialization options for a completer widget.\n   */\n  export interface IOptions {\n    /**\n     * The semantic parent of the completer widget, its referent editor.\n     */\n    editor?: CodeEditor.IEditor | null;\n\n    /**\n     * The model for the completer widget.\n     */\n    model?: IModel;\n\n    /**\n     * The renderer for the completer widget nodes.\n     */\n    renderer?: IRenderer;\n  }\n\n  /**\n   * An interface for a completion request reflecting the state of the editor.\n   */\n  export interface ITextState extends JSONObject {\n    /**\n     * The current value of the editor.\n     */\n    readonly text: string;\n\n    /**\n     * The height of a character in the editor.\n     */\n    readonly lineHeight: number;\n\n    /**\n     * The width of a character in the editor.\n     */\n    readonly charWidth: number;\n\n    /**\n     * The line number of the editor cursor.\n     */\n    readonly line: number;\n\n    /**\n     * The character number of the editor cursor within a line.\n     */\n    readonly column: number;\n  }\n\n  /**\n   * The data model backing a code completer widget.\n   */\n  export interface IModel extends IDisposable {\n    /**\n     * A signal emitted when state of the completer menu changes.\n     */\n    readonly stateChanged: ISignal<IModel, void>;\n\n    /**\n     * The current text state details.\n     */\n    current: ITextState | null;\n\n    /**\n     * The cursor details that the API has used to return matching options.\n     */\n    cursor: ICursorSpan | null;\n\n    /**\n     * A flag that is true when the model value was modified by a subset match.\n     */\n    subsetMatch: boolean;\n\n    /**\n     * The original completer request details.\n     */\n    original: ITextState | null;\n\n    /**\n     * The query against which items are filtered.\n     */\n    query: string;\n\n    /**\n     * Get the of visible items in the completer menu.\n     */\n    items(): IIterator<IItem>;\n\n    /**\n     * Get the unfiltered options in a completer menu.\n     */\n    options(): IIterator<string>;\n\n    /**\n     * The map from identifiers (`a.b`) to their types (function, module, class,\n     * instance, etc.).\n     */\n    typeMap(): TypeMap;\n\n    /**\n     * An ordered list of types used for visual encoding.\n     */\n    orderedTypes(): string[];\n\n    /**\n     * Set the available options in the completer menu.\n     */\n    setOptions(\n      options: IterableOrArrayLike<string>,\n      typeMap?: JSONObject\n    ): void;\n\n    /**\n     * Handle a cursor change.\n     */\n    handleCursorChange(change: Completer.ITextState): void;\n\n    /**\n     * Handle a completion request.\n     */\n    handleTextChange(change: Completer.ITextState): void;\n\n    /**\n     * Create a resolved patch between the original state and a patch string.\n     */\n    createPatch(patch: string): IPatch | undefined;\n\n    /**\n     * Reset the state of the model and emit a state change signal.\n     *\n     * @param hard - Reset even if a subset match is in progress.\n     */\n    reset(hard?: boolean): void;\n  }\n\n  /**\n   * An object describing a completion option injection into text.\n   */\n  export interface IPatch {\n    /**\n     * The patched text.\n     */\n    text: string;\n\n    /**\n     * The offset of the cursor.\n     */\n    offset: number;\n  }\n\n  /**\n   * A completer menu item.\n   */\n  export interface IItem {\n    /**\n     * The highlighted, marked up text of a visible completer item.\n     */\n    text: string;\n\n    /**\n     * The raw text of a visible completer item.\n     */\n    raw: string;\n  }\n\n  /**\n   * A cursor span.\n   */\n  export interface ICursorSpan extends JSONObject {\n    /**\n     * The start position of the cursor.\n     */\n    start: number;\n\n    /**\n     * The end position of the cursor.\n     */\n    end: number;\n  }\n\n  /**\n   * A renderer for completer widget nodes.\n   */\n  export interface IRenderer {\n    /**\n     * Create an item node (an `li` element) for a text completer menu.\n     */\n    createItemNode(\n      item: IItem,\n      typeMap: TypeMap,\n      orderedTypes: string[]\n    ): HTMLLIElement;\n  }\n\n  /**\n   * The default implementation of an `IRenderer`.\n   */\n  export class Renderer implements IRenderer {\n    /**\n     * Create an item node for a text completer menu.\n     */\n    createItemNode(\n      item: IItem,\n      typeMap: TypeMap,\n      orderedTypes: string[]\n    ): HTMLLIElement {\n      let li = document.createElement('li');\n      li.className = ITEM_CLASS;\n      // Set the raw, un-marked up value as a data attribute.\n      li.setAttribute('data-value', item.raw);\n\n      let matchNode = document.createElement('code');\n      matchNode.className = 'jp-Completer-match';\n      // Use innerHTML because search results include <mark> tags.\n      matchNode.innerHTML = defaultSanitizer.sanitize(item.text, {\n        allowedTags: ['mark']\n      });\n\n      // If there are types provided add those.\n      if (!JSONExt.deepEqual(typeMap, {})) {\n        let typeNode = document.createElement('span');\n        let type = typeMap[item.raw] || '';\n        typeNode.textContent = (type[0] || '').toLowerCase();\n        let colorIndex = orderedTypes.indexOf(type) % N_COLORS + 1;\n        typeNode.className = 'jp-Completer-type';\n        typeNode.setAttribute(`data-color-index`, colorIndex.toString());\n        li.title = type;\n        let typeExtendedNode = document.createElement('code');\n        typeExtendedNode.className = 'jp-Completer-typeExtended';\n        typeExtendedNode.textContent = type.toLocaleLowerCase();\n        li.appendChild(typeNode);\n        li.appendChild(matchNode);\n        li.appendChild(typeExtendedNode);\n      } else {\n        li.appendChild(matchNode);\n      }\n      return li;\n    }\n  }\n\n  /**\n   * The default `IRenderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n}\n\n/**\n * A namespace for completer widget private data.\n */\nnamespace Private {\n  /**\n   * Returns the common subset string that a list of strings shares.\n   */\n  export function commonSubset(values: string[]): string {\n    let len = values.length;\n    let subset = '';\n    if (len < 2) {\n      return subset;\n    }\n    let strlen = values[0].length;\n    for (let i = 0; i < strlen; i++) {\n      let ch = values[0][i];\n      for (let j = 1; j < len; j++) {\n        if (values[j][i] !== ch) {\n          return subset;\n        }\n      }\n      subset += ch;\n    }\n    return subset;\n  }\n\n  /**\n   * Returns the list of raw item values currently in the DOM.\n   */\n  export function itemValues(items: NodeList): string[] {\n    let values: string[] = [];\n    for (let i = 0, len = items.length; i < len; i++) {\n      values.push((items[i] as HTMLElement).getAttribute('data-value'));\n    }\n    return values;\n  }\n\n  /**\n   * Returns true for any modified click event (i.e., not a left-click).\n   */\n  export function nonstandardClick(event: MouseEvent): boolean {\n    return (\n      event.button !== 0 ||\n      event.altKey ||\n      event.ctrlKey ||\n      event.shiftKey ||\n      event.metaKey\n    );\n  }\n}\n"]}