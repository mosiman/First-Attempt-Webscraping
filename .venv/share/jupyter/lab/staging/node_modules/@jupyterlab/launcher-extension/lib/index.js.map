{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../launcher-extension/src/index.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;AAI3D,mDAAuE;AAEvE,mDAA0E;AAE1E,mDAA8C;AAM9C,8BAA4B;AAE5B;;GAEG;AACH,IAAU,UAAU,CAEnB;AAFD,WAAU,UAAU;IACL,iBAAM,GAAG,iBAAiB,CAAC;AAC1C,CAAC,EAFS,UAAU,KAAV,UAAU,QAEnB;AAED;;GAEG;AACH,MAAM,MAAM,GAAgC;IAC1C,QAAQ;IACR,EAAE,EAAE,uCAAuC;IAC3C,QAAQ,EAAE,CAAC,0BAAe,CAAC;IAC3B,QAAQ,EAAE,oBAAS;IACnB,SAAS,EAAE,IAAI;CAChB,CAAC;AAEF;;GAEG;AACH,kBAAe,MAAM,CAAC;AAEtB;;GAEG;AACH,kBAAkB,GAAe,EAAE,OAAwB;IACzD,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,wBAAa,EAAE,CAAC;IAElC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE;QACrC,KAAK,EAAE,cAAc;QACrB,OAAO,EAAE,CAAC,IAAgB,EAAE,EAAE;YAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACnD,MAAM,EAAE,GAAG,YAAY,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;YACtC,MAAM,QAAQ,GAAG,CAAC,IAAY,EAAE,EAAE;gBAChC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;YACzC,CAAC,CAAC;YACF,MAAM,QAAQ,GAAG,IAAI,mBAAQ,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YAE3D,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;YAClC,QAAQ,CAAC,KAAK,CAAC,SAAS,GAAG,iBAAiB,CAAC;YAE7C,IAAI,IAAI,GAAG,IAAI,yBAAc,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;YAErD,uEAAuE;YACvE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,mBAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;YAC9D,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YAEb,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAY,EAAE,CAAC,CAAC;YAErE,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE;gBAChC,2DAA2D;gBAC3D,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,mBAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YAClE,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,OAAO,IAAI,CAAC;QACd,CAAC;KACF,CAAC,CAAC;IAEH,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;IAEtE,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;GAEG;AACH,IAAU,OAAO,CAKhB;AALD,WAAU,OAAO;IACf;;OAEG;IACQ,UAAE,GAAG,CAAC,CAAC;AACpB,CAAC,EALS,OAAO,KAAP,OAAO,QAKhB","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JupyterLab, JupyterLabPlugin } from '@jupyterlab/application';\n\nimport { ICommandPalette, MainAreaWidget } from '@jupyterlab/apputils';\n\nimport { ILauncher, LauncherModel, Launcher } from '@jupyterlab/launcher';\n\nimport { toArray } from '@phosphor/algorithm';\n\nimport { JSONObject } from '@phosphor/coreutils';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport '../style/index.css';\n\n/**\n * The command IDs used by the launcher plugin.\n */\nnamespace CommandIDs {\n  export const create = 'launcher:create';\n}\n\n/**\n * A service providing an interface to the the launcher.\n */\nconst plugin: JupyterLabPlugin<ILauncher> = {\n  activate,\n  id: '@jupyterlab/launcher-extension:plugin',\n  requires: [ICommandPalette],\n  provides: ILauncher,\n  autoStart: true\n};\n\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n\n/**\n * Activate the launcher.\n */\nfunction activate(app: JupyterLab, palette: ICommandPalette): ILauncher {\n  const { commands, shell } = app;\n  const model = new LauncherModel();\n\n  commands.addCommand(CommandIDs.create, {\n    label: 'New Launcher',\n    execute: (args: JSONObject) => {\n      const cwd = args['cwd'] ? String(args['cwd']) : '';\n      const id = `launcher-${Private.id++}`;\n      const callback = (item: Widget) => {\n        shell.addToMainArea(item, { ref: id });\n      };\n      const launcher = new Launcher({ cwd, callback, commands });\n\n      launcher.model = model;\n      launcher.title.label = 'Launcher';\n      launcher.title.iconClass = 'jp-LauncherIcon';\n\n      let main = new MainAreaWidget({ content: launcher });\n\n      // If there are any other widgets open, remove the launcher close icon.\n      main.title.closable = !!toArray(shell.widgets('main')).length;\n      main.id = id;\n\n      shell.addToMainArea(main, { activate: args['activate'] as boolean });\n\n      shell.layoutModified.connect(() => {\n        // If there is only a launcher open, remove the close icon.\n        main.title.closable = toArray(shell.widgets('main')).length > 1;\n      }, main);\n\n      return main;\n    }\n  });\n\n  palette.addItem({ command: CommandIDs.create, category: 'Launcher' });\n\n  return model;\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * The incrementing id used for launcher widgets.\n   */\n  export let id = 0;\n}\n"]}