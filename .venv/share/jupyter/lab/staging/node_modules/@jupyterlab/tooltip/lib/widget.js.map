{"version":3,"file":"widget.js","sourceRoot":"","sources":["../../../../tooltip/src/widget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONObject } from '@phosphor/coreutils';\n\nimport { Message } from '@phosphor/messaging';\n\nimport { PanelLayout } from '@phosphor/widgets';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport { CodeEditor } from '@jupyterlab/codeeditor';\n\nimport { HoverBox } from '@jupyterlab/apputils';\n\nimport {\n  IRenderMime,\n  RenderMimeRegistry,\n  MimeModel\n} from '@jupyterlab/rendermime';\n\n/**\n * The class name added to each tooltip.\n */\nconst TOOLTIP_CLASS = 'jp-Tooltip';\n\n/**\n * The class name added to the tooltip content.\n */\nconst CONTENT_CLASS = 'jp-Tooltip-content';\n\n/**\n * The class added to the body when a tooltip exists on the page.\n */\nconst BODY_CLASS = 'jp-mod-tooltip';\n\n/**\n * The minimum height of a tooltip widget.\n */\nconst MIN_HEIGHT = 20;\n\n/**\n * The maximum height of a tooltip widget.\n */\nconst MAX_HEIGHT = 250;\n\n/**\n * A flag to indicate that event handlers are caught in the capture phase.\n */\nconst USE_CAPTURE = true;\n\n/**\n * A tooltip widget.\n */\nexport class Tooltip extends Widget {\n  /**\n   * Instantiate a tooltip.\n   */\n  constructor(options: Tooltip.IOptions) {\n    super();\n\n    const layout = (this.layout = new PanelLayout());\n    const model = new MimeModel({ data: options.bundle });\n\n    this.anchor = options.anchor;\n    this.addClass(TOOLTIP_CLASS);\n    this._editor = options.editor;\n    this._rendermime = options.rendermime;\n\n    const mimeType = this._rendermime.preferredMimeType(options.bundle, 'any');\n\n    if (!mimeType) {\n      return;\n    }\n\n    this._content = this._rendermime.createRenderer(mimeType);\n    this._content.renderModel(model);\n    this._content.addClass(CONTENT_CLASS);\n    layout.addWidget(this._content);\n  }\n\n  /**\n   * The anchor widget that the tooltip widget tracks.\n   */\n  readonly anchor: Widget;\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    if (this._content) {\n      this._content.dispose();\n      this._content = null;\n    }\n    super.dispose();\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the dock panel's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    if (this.isHidden || this.isDisposed) {\n      return;\n    }\n\n    const { node } = this;\n    const target = event.target as HTMLElement;\n\n    switch (event.type) {\n      case 'keydown':\n        if (node.contains(target)) {\n          return;\n        }\n        this.dispose();\n        break;\n      case 'mousedown':\n        if (node.contains(target)) {\n          this.activate();\n          return;\n        }\n        this.dispose();\n        break;\n      case 'scroll':\n        this._evtScroll(event as MouseEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle `'activate-request'` messages.\n   */\n  protected onActivateRequest(msg: Message): void {\n    this.node.tabIndex = -1;\n    this.node.focus();\n  }\n\n  /**\n   * Handle `'after-attach'` messages.\n   */\n  protected onAfterAttach(msg: Message): void {\n    document.body.classList.add(BODY_CLASS);\n    document.addEventListener('keydown', this, USE_CAPTURE);\n    document.addEventListener('mousedown', this, USE_CAPTURE);\n    this.anchor.node.addEventListener('scroll', this, USE_CAPTURE);\n    this.update();\n  }\n\n  /**\n   * Handle `before-detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    document.body.classList.remove(BODY_CLASS);\n    document.removeEventListener('keydown', this, USE_CAPTURE);\n    document.removeEventListener('mousedown', this, USE_CAPTURE);\n    this.anchor.node.removeEventListener('scroll', this, USE_CAPTURE);\n  }\n\n  /**\n   * Handle `'update-request'` messages.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    this._setGeometry();\n    super.onUpdateRequest(msg);\n  }\n\n  /**\n   * Handle scroll events for the widget\n   */\n  private _evtScroll(event: MouseEvent) {\n    // All scrolls except scrolls in the actual hover box node may cause the\n    // referent editor that anchors the node to move, so the only scroll events\n    // that can safely be ignored are ones that happen inside the hovering node.\n    if (this.node.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Set the geometry of the tooltip widget.\n   */\n  private _setGeometry(): void {\n    // Find the start of the current token for hover box placement.\n    const editor = this._editor;\n    const cursor = editor.getCursorPosition();\n    const end = editor.getOffsetAt(cursor);\n    const line = editor.getLine(cursor.line);\n\n    if (!line) {\n      return;\n    }\n\n    const tokens = line.substring(0, end).split(/\\W+/);\n    const last = tokens[tokens.length - 1];\n    const start = last ? end - last.length : end;\n    const position = editor.getPositionAt(start);\n\n    if (!position) {\n      return;\n    }\n\n    const anchor = editor.getCoordinateForPosition(position) as ClientRect;\n    const style = window.getComputedStyle(this.node);\n    const paddingLeft = parseInt(style.paddingLeft!, 10) || 0;\n\n    // Calculate the geometry of the tooltip.\n    HoverBox.setGeometry({\n      anchor,\n      host: editor.host,\n      maxHeight: MAX_HEIGHT,\n      minHeight: MIN_HEIGHT,\n      node: this.node,\n      offset: { horizontal: -1 * paddingLeft },\n      privilege: 'below',\n      style: style\n    });\n  }\n\n  private _content: IRenderMime.IRenderer | null = null;\n  private _editor: CodeEditor.IEditor;\n  private _rendermime: RenderMimeRegistry;\n}\n\n/**\n * A namespace for tooltip widget statics.\n */\nexport namespace Tooltip {\n  /**\n   * Instantiation options for a tooltip widget.\n   */\n  export interface IOptions {\n    /**\n     * The anchor widget that the tooltip widget tracks.\n     */\n    anchor: Widget;\n\n    /**\n     * The data that populates the tooltip widget.\n     */\n    bundle: JSONObject;\n\n    /**\n     * The editor referent of the tooltip model.\n     */\n    editor: CodeEditor.IEditor;\n\n    /**\n     * The rendermime instance used by the tooltip model.\n     */\n    rendermime: RenderMimeRegistry;\n  }\n}\n"]}