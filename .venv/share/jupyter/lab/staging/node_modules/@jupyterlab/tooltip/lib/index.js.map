{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../tooltip/src/index.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;;;;AAI3D,mDAA4C;AAQ5C,8BAA4B;AAE5B,8BAAyB;AAEzB,oBAAoB;AACpB;;GAEG;AACU,QAAA,eAAe,GAAG,IAAI,iBAAK,CACtC,qCAAqC,CACtC,CAAC","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Kernel } from '@jupyterlab/services';\n\nimport { Token } from '@phosphor/coreutils';\n\nimport { Widget } from '@phosphor/widgets';\n\nimport { CodeEditor } from '@jupyterlab/codeeditor';\n\nimport { RenderMimeRegistry } from '@jupyterlab/rendermime';\n\nimport '../style/index.css';\n\nexport * from './widget';\n\n/* tslint:disable */\n/**\n * The tooltip manager token.\n */\nexport const ITooltipManager = new Token<ITooltipManager>(\n  '@jupyterlab/tooltip:ITooltipManager'\n);\n/* tslint:enable */\n\n/**\n * A manager to register tooltips with parent widgets.\n */\nexport interface ITooltipManager {\n  /**\n   * Invoke a tooltip.\n   */\n  invoke(options: ITooltipManager.IOptions): void;\n}\n\n/**\n * A namespace for `ICompletionManager` interface specifications.\n */\nexport namespace ITooltipManager {\n  /**\n   * An interface for tooltip-compatible objects.\n   */\n  export interface IOptions {\n    /**\n     * The referent anchor the tooltip follows.\n     */\n    readonly anchor: Widget;\n\n    /**\n     * The referent editor for the tooltip.\n     */\n    readonly editor: CodeEditor.IEditor;\n\n    /**\n     * The kernel the tooltip communicates with to populate itself.\n     */\n    readonly kernel: Kernel.IKernelConnection;\n\n    /**\n     * The renderer the tooltip uses to render API responses.\n     */\n    readonly rendermime: RenderMimeRegistry;\n  }\n}\n"]}