{"version":3,"file":"placeholder.js","sourceRoot":"","sources":["../../../../cells/src/placeholder.tsx"],"names":[],"mappings":";AAAA;;;+EAG+E;;;;;;;;;AAE/E,6CAA+B;AAE/B,mDAAoD;AAEpD;;GAEG;AACH,MAAM,iBAAiB,GAAG,gBAAgB,CAAC;AAE3C;;GAEG;AACH,MAAM,kBAAkB,GAAG,sCAAsC,CAAC;AAElE;;GAEG;AACH,MAAM,mBAAmB,GAAG,uCAAuC,CAAC;AAEpE;;GAEG;AACH,MAAM,aAAa,GAAG,wBAAwB,CAAC;AAE/C;;GAEG;AACH,MAAM,uBAAuB,GAAG,qBAAqB,CAAC;AAEtD;;GAEG;AACH,MAAM,wBAAwB,GAAG,sBAAsB,CAAC;AAExD;;;;;;GAMG;AACH,iBAAkC,SAAQ,uBAAkB;IAC1D;;OAEG;IACH,YAAY,QAAuD;QACjE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED;;OAEG;IACO,WAAW,CAAC,CAAmC;QACvD,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;CAGF;AAnBD,kCAmBC;AAED;;GAEG;AACH,sBAA8B,SAAQ,WAAW;IAC/C;;OAEG;IACH,YAAY,QAAuD;QACjE,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACO,MAAM;QACd,OAAO;YACL,6BAAK,SAAS,EAAE,kBAAkB,EAAE,GAAG,EAAC,OAAO,GAAG;YAClD,6BACE,SAAS,EAAE,aAAa,EACxB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EACjC,GAAG,EAAC,SAAS;gBAEb,6BAAK,SAAS,EAAC,kBAAkB,GAAG,CAChC;SACP,CAAC;IACJ,CAAC;CACF;AAxBD,4CAwBC;AAED;;GAEG;AACH,uBAA+B,SAAQ,WAAW;IAChD;;OAEG;IACH,YAAY,QAAuD;QACjE,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACO,MAAM;QACd,OAAO;YACL,6BAAK,SAAS,EAAE,mBAAmB,EAAE,GAAG,EAAC,QAAQ,GAAG;YACpD,6BACE,SAAS,EAAE,aAAa,EACxB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EACjC,GAAG,EAAC,SAAS;gBAEb,6BAAK,SAAS,EAAC,kBAAkB,GAAG,CAChC;SACP,CAAC;IACJ,CAAC;CACF;AAxBD,8CAwBC","sourcesContent":["/*-----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport * as React from 'react';\n\nimport { VDomRenderer } from '@jupyterlab/apputils';\n\n/**\n * The CSS class added to placeholders.\n */\nconst PLACEHOLDER_CLASS = 'jp-Placeholder';\n\n/**\n * The CSS classes added to input placeholder prompts.\n */\nconst INPUT_PROMPT_CLASS = 'jp-Placeholder-prompt jp-InputPrompt';\n\n/**\n * The CSS classes added to output placeholder prompts.\n */\nconst OUTPUT_PROMPT_CLASS = 'jp-Placeholder-prompt jp-OutputPrompt';\n\n/**\n * The CSS class added to placeholder content.\n */\nconst CONTENT_CLASS = 'jp-Placeholder-content';\n\n/**\n * The CSS class added to input placeholders.\n */\nconst INPUT_PLACEHOLDER_CLASS = 'jp-InputPlaceholder';\n\n/**\n * The CSS class added to output placeholders.\n */\nconst OUTPUT_PLACEHOLDER_CLASS = 'jp-OutputPlaceholder';\n\n/**\n * An abstract base class for placeholders\n *\n * ### Notes\n * A placeholder is the element that is shown when input/output\n * is hidden.\n */\nexport abstract class Placeholder extends VDomRenderer<null> {\n  /**\n   * Construct a new placeholder.\n   */\n  constructor(callback: (e: React.MouseEvent<HTMLDivElement>) => void) {\n    super();\n    this.addClass(PLACEHOLDER_CLASS);\n    this._callback = callback;\n  }\n\n  /**\n   * Handle the click event.\n   */\n  protected handleClick(e: React.MouseEvent<HTMLDivElement>): void {\n    let callback = this._callback;\n    callback(e);\n  }\n\n  private _callback: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * The input placeholder class.\n */\nexport class InputPlaceholder extends Placeholder {\n  /**\n   * Construct a new input placeholder.\n   */\n  constructor(callback: (e: React.MouseEvent<HTMLDivElement>) => void) {\n    super(callback);\n    this.addClass(INPUT_PLACEHOLDER_CLASS);\n  }\n\n  /**\n   * Render the input placeholder using the virtual DOM.\n   */\n  protected render(): React.ReactElement<any>[] {\n    return [\n      <div className={INPUT_PROMPT_CLASS} key=\"input\" />,\n      <div\n        className={CONTENT_CLASS}\n        onClick={e => this.handleClick(e)}\n        key=\"content\"\n      >\n        <div className=\"jp-MoreHorizIcon\" />\n      </div>\n    ];\n  }\n}\n\n/**\n * The output placeholder class.\n */\nexport class OutputPlaceholder extends Placeholder {\n  /**\n   * Construct a new output placeholder.\n   */\n  constructor(callback: (e: React.MouseEvent<HTMLDivElement>) => void) {\n    super(callback);\n    this.addClass(OUTPUT_PLACEHOLDER_CLASS);\n  }\n\n  /**\n   * Render the output placeholder using the virtual DOM.\n   */\n  protected render(): React.ReactElement<any>[] {\n    return [\n      <div className={OUTPUT_PROMPT_CLASS} key=\"output\" />,\n      <div\n        className={CONTENT_CLASS}\n        onClick={e => this.handleClick(e)}\n        key=\"content\"\n      >\n        <div className=\"jp-MoreHorizIcon\" />\n      </div>\n    ];\n  }\n}\n"]}