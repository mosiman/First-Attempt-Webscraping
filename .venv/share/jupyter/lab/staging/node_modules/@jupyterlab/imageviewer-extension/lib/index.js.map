{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../imageviewer-extension/src/index.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;AAE3D,yDAIiC;AAEjC,mDAAwE;AAIxE,yDAIiC;AAEjC;;GAEG;AACH,IAAU,UAAU,CAgBnB;AAhBD,WAAU,UAAU;IACL,qBAAU,GAAG,yBAAyB,CAAC;IAEvC,iBAAM,GAAG,qBAAqB,CAAC;IAE/B,kBAAO,GAAG,sBAAsB,CAAC;IAEjC,yBAAc,GAAG,6BAA6B,CAAC;IAE/C,uBAAY,GAAG,2BAA2B,CAAC;IAE3C,0BAAe,GAAG,8BAA8B,CAAC;IAEjD,iCAAsB,GAAG,qCAAqC,CAAC;IAE/D,uBAAY,GAAG,2BAA2B,CAAC;AAC1D,CAAC,EAhBS,UAAU,KAAV,UAAU,QAgBnB;AAED;;GAEG;AACH,MAAM,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AAE9E;;GAEG;AACH,MAAM,OAAO,GAAG,OAAO,CAAC;AAExB;;GAEG;AACH,MAAM,MAAM,GAAoC;IAC9C,QAAQ;IACR,EAAE,EAAE,0CAA0C;IAC9C,QAAQ,EAAE,2BAAa;IACvB,QAAQ,EAAE,CAAC,0BAAe,EAAE,6BAAe,CAAC;IAC5C,SAAS,EAAE,IAAI;CAChB,CAAC;AAEF;;GAEG;AACH,kBAAe,MAAM,CAAC;AAEtB;;GAEG;AACH,kBACE,GAAe,EACf,OAAwB,EACxB,QAAyB;IAEzB,MAAM,SAAS,GAAG,cAAc,CAAC;IACjC,MAAM,OAAO,GAAG,IAAI,gCAAkB,CAAC;QACrC,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,QAAQ;QACnB,SAAS,EAAE,UAAU;QACrB,UAAU,EAAE,UAAU;QACtB,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;IACH,MAAM,OAAO,GAAG,IAAI,0BAAe,CAA+B;QAChE,SAAS;KACV,CAAC,CAAC;IAEH,4BAA4B;IAC5B,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE;QACxB,OAAO,EAAE,iBAAiB;QAC1B,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;QACjE,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;KACpC,CAAC,CAAC;IAEH,GAAG,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAE1C,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;QAC/C,+DAA+D;QAC/D,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE;YACtC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,MAAM,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEvE,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC5C,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;SAC7C;IACH,CAAC,CAAC,CAAC;IAEH,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAE1B,MAAM,QAAQ,GAAG,cAAc,CAAC;IAEhC;QACE,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,UAAU;QACrB,UAAU,CAAC,eAAe;QAC1B,UAAU,CAAC,sBAAsB;QACjC,UAAU,CAAC,cAAc;QACzB,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,YAAY;KACxB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAClB,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;;GAEG;AACH,qBAA4B,GAAe,EAAE,OAAsB;IACjE,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC;IAEzB;;OAEG;IACH;QACE,OAAO,CACL,OAAO,CAAC,aAAa,KAAK,IAAI;YAC9B,OAAO,CAAC,aAAa,KAAK,GAAG,CAAC,KAAK,CAAC,aAAa,CAClD,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,UAAU,CAAC,qBAAqB,EAAE;QACzC,OAAO,EAAE,MAAM;QACf,KAAK,EAAE,SAAS;QAChB,SAAS;KACV,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,CAAC,sBAAsB,EAAE;QAC1C,OAAO,EAAE,OAAO;QAChB,KAAK,EAAE,UAAU;QACjB,SAAS;KACV,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,CAAC,yBAAyB,EAAE;QAC7C,OAAO,EAAE,UAAU;QACnB,KAAK,EAAE,aAAa;QACpB,SAAS;KACV,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,CAAC,8BAA8B,EAAE;QAClD,OAAO,EAAE,eAAe;QACxB,KAAK,EAAE,kBAAkB;QACzB,SAAS;KACV,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,CAAC,qCAAqC,EAAE;QACzD,OAAO,EAAE,sBAAsB;QAC/B,KAAK,EAAE,yBAAyB;QAChC,SAAS;KACV,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,CAAC,6BAA6B,EAAE;QACjD,OAAO,EAAE,cAAc;QACvB,KAAK,EAAE,yBAAyB;QAChC,SAAS;KACV,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,CAAC,2BAA2B,EAAE;QAC/C,OAAO,EAAE,YAAY;QACrB,KAAK,EAAE,uBAAuB;QAC9B,SAAS;KACV,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,CAAC,2BAA2B,EAAE;QAC/C,OAAO,EAAE,YAAY;QACrB,KAAK,EAAE,eAAe;QACtB,SAAS;KACV,CAAC,CAAC;IAEH;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QAE7C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;SACzE;IACH,CAAC;IAED;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QAE7C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;SACzE;IACH,CAAC;IAED;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QAE7C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;YAC1B,MAAM,CAAC,iBAAiB,EAAE,CAAC;SAC5B;IACH,CAAC;IAED;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QAE7C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,eAAe,EAAE,CAAC;SAC1B;IACH,CAAC;IAED;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QAE7C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,sBAAsB,EAAE,CAAC;SACjC;IACH,CAAC;IAED;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QAE7C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,cAAc,EAAE,CAAC;SACzB;IACH,CAAC;IAED;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QAE7C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,YAAY,EAAE,CAAC;SACvB;IACH,CAAC;IAED;QACE,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC;QAE7C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,cAAc,IAAI,CAAC,CAAC;YAC3B,MAAM,CAAC,cAAc,IAAI,CAAC,CAAC;SAC5B;IACH,CAAC;AACH,CAAC;AA/HD,kCA+HC","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  ILayoutRestorer,\n  JupyterLab,\n  JupyterLabPlugin\n} from '@jupyterlab/application';\n\nimport { ICommandPalette, InstanceTracker } from '@jupyterlab/apputils';\n\nimport { IDocumentWidget } from '@jupyterlab/docregistry';\n\nimport {\n  ImageViewer,\n  ImageViewerFactory,\n  IImageTracker\n} from '@jupyterlab/imageviewer';\n\n/**\n * The command IDs used by the image widget plugin.\n */\nnamespace CommandIDs {\n  export const resetImage = 'imageviewer:reset-image';\n\n  export const zoomIn = 'imageviewer:zoom-in';\n\n  export const zoomOut = 'imageviewer:zoom-out';\n\n  export const flipHorizontal = 'imageviewer:flip-horizontal';\n\n  export const flipVertical = 'imageviewer:flip-vertical';\n\n  export const rotateClockwise = 'imageviewer:rotate-clockwise';\n\n  export const rotateCounterclockwise = 'imageviewer:rotate-counterclockwise';\n\n  export const invertColors = 'imageviewer:invert-colors';\n}\n\n/**\n * The list of file types for images.\n */\nconst FILE_TYPES = ['png', 'gif', 'jpeg', 'svg', 'bmp', 'ico', 'xbm', 'tiff'];\n\n/**\n * The name of the factory that creates image widgets.\n */\nconst FACTORY = 'Image';\n\n/**\n * The image file handler extension.\n */\nconst plugin: JupyterLabPlugin<IImageTracker> = {\n  activate,\n  id: '@jupyterlab/imageviewer-extension:plugin',\n  provides: IImageTracker,\n  requires: [ICommandPalette, ILayoutRestorer],\n  autoStart: true\n};\n\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n\n/**\n * Activate the image widget extension.\n */\nfunction activate(\n  app: JupyterLab,\n  palette: ICommandPalette,\n  restorer: ILayoutRestorer\n): IImageTracker {\n  const namespace = 'image-widget';\n  const factory = new ImageViewerFactory({\n    name: FACTORY,\n    modelName: 'base64',\n    fileTypes: FILE_TYPES,\n    defaultFor: FILE_TYPES,\n    readOnly: true\n  });\n  const tracker = new InstanceTracker<IDocumentWidget<ImageViewer>>({\n    namespace\n  });\n\n  // Handle state restoration.\n  restorer.restore(tracker, {\n    command: 'docmanager:open',\n    args: widget => ({ path: widget.context.path, factory: FACTORY }),\n    name: widget => widget.context.path\n  });\n\n  app.docRegistry.addWidgetFactory(factory);\n\n  factory.widgetCreated.connect((sender, widget) => {\n    // Notify the instance tracker if restore data needs to update.\n    widget.context.pathChanged.connect(() => {\n      tracker.save(widget);\n    });\n    tracker.add(widget);\n\n    const types = app.docRegistry.getFileTypesForPath(widget.context.path);\n\n    if (types.length > 0) {\n      widget.title.iconClass = types[0].iconClass;\n      widget.title.iconLabel = types[0].iconLabel;\n    }\n  });\n\n  addCommands(app, tracker);\n\n  const category = 'Image Viewer';\n\n  [\n    CommandIDs.zoomIn,\n    CommandIDs.zoomOut,\n    CommandIDs.resetImage,\n    CommandIDs.rotateClockwise,\n    CommandIDs.rotateCounterclockwise,\n    CommandIDs.flipHorizontal,\n    CommandIDs.flipVertical,\n    CommandIDs.invertColors\n  ].forEach(command => {\n    palette.addItem({ command, category });\n  });\n\n  return tracker;\n}\n\n/**\n * Add the commands for the image widget.\n */\nexport function addCommands(app: JupyterLab, tracker: IImageTracker) {\n  const { commands } = app;\n\n  /**\n   * Whether there is an active image viewer.\n   */\n  function isEnabled(): boolean {\n    return (\n      tracker.currentWidget !== null &&\n      tracker.currentWidget === app.shell.currentWidget\n    );\n  }\n\n  commands.addCommand('imageviewer:zoom-in', {\n    execute: zoomIn,\n    label: 'Zoom In',\n    isEnabled\n  });\n\n  commands.addCommand('imageviewer:zoom-out', {\n    execute: zoomOut,\n    label: 'Zoom Out',\n    isEnabled\n  });\n\n  commands.addCommand('imageviewer:reset-image', {\n    execute: resetImage,\n    label: 'Reset Image',\n    isEnabled\n  });\n\n  commands.addCommand('imageviewer:rotate-clockwise', {\n    execute: rotateClockwise,\n    label: 'Rotate Clockwise',\n    isEnabled\n  });\n\n  commands.addCommand('imageviewer:rotate-counterclockwise', {\n    execute: rotateCounterclockwise,\n    label: 'Rotate Counterclockwise',\n    isEnabled\n  });\n\n  commands.addCommand('imageviewer:flip-horizontal', {\n    execute: flipHorizontal,\n    label: 'Flip image horizontally',\n    isEnabled\n  });\n\n  commands.addCommand('imageviewer:flip-vertical', {\n    execute: flipVertical,\n    label: 'Flip image vertically',\n    isEnabled\n  });\n\n  commands.addCommand('imageviewer:invert-colors', {\n    execute: invertColors,\n    label: 'Invert Colors',\n    isEnabled\n  });\n\n  function zoomIn(): void {\n    const widget = tracker.currentWidget.content;\n\n    if (widget) {\n      widget.scale = widget.scale > 1 ? widget.scale + 0.5 : widget.scale * 2;\n    }\n  }\n\n  function zoomOut(): void {\n    const widget = tracker.currentWidget.content;\n\n    if (widget) {\n      widget.scale = widget.scale > 1 ? widget.scale - 0.5 : widget.scale / 2;\n    }\n  }\n\n  function resetImage(): void {\n    const widget = tracker.currentWidget.content;\n\n    if (widget) {\n      widget.scale = 1;\n      widget.colorinversion = 0;\n      widget.resetRotationFlip();\n    }\n  }\n\n  function rotateClockwise(): void {\n    const widget = tracker.currentWidget.content;\n\n    if (widget) {\n      widget.rotateClockwise();\n    }\n  }\n\n  function rotateCounterclockwise(): void {\n    const widget = tracker.currentWidget.content;\n\n    if (widget) {\n      widget.rotateCounterclockwise();\n    }\n  }\n\n  function flipHorizontal(): void {\n    const widget = tracker.currentWidget.content;\n\n    if (widget) {\n      widget.flipHorizontal();\n    }\n  }\n\n  function flipVertical(): void {\n    const widget = tracker.currentWidget.content;\n\n    if (widget) {\n      widget.flipVertical();\n    }\n  }\n\n  function invertColors(): void {\n    const widget = tracker.currentWidget.content;\n\n    if (widget) {\n      widget.colorinversion += 1;\n      widget.colorinversion %= 2;\n    }\n  }\n}\n"]}