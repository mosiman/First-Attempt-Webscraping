{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../docmanager-extension/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { toArray, iter } from '@phosphor/algorithm';\n\nimport { Widget, DockLayout } from '@phosphor/widgets';\n\nimport { JupyterLab, JupyterLabPlugin } from '@jupyterlab/application';\n\nimport {\n  showDialog,\n  showErrorMessage,\n  Dialog,\n  ICommandPalette\n} from '@jupyterlab/apputils';\n\nimport { IChangedArgs, ISettingRegistry, Time } from '@jupyterlab/coreutils';\n\nimport {\n  renameDialog,\n  getOpenPath,\n  DocumentManager,\n  IDocumentManager\n} from '@jupyterlab/docmanager';\n\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\n\nimport { IMainMenu } from '@jupyterlab/mainmenu';\n\nimport { Contents, Kernel } from '@jupyterlab/services';\n\nimport { IDisposable } from '@phosphor/disposable';\n\n/**\n * The name of the factory that creates markdown widgets.\n */\nconst MARKDOWN_FACTORY = 'Markdown Preview';\n\n/**\n * The command IDs used by the document manager plugin.\n */\nnamespace CommandIDs {\n  export const clone = 'docmanager:clone';\n\n  export const close = 'docmanager:close';\n\n  export const closeAllFiles = 'docmanager:close-all-files';\n\n  export const closeOtherTabs = 'docmanager:close-other-tabs';\n\n  export const closeRightTabs = 'docmanager:close-right-tabs';\n\n  export const deleteFile = 'docmanager:delete-file';\n\n  export const newUntitled = 'docmanager:new-untitled';\n\n  export const open = 'docmanager:open';\n\n  export const openBrowserTab = 'docmanager:open-browser-tab';\n\n  export const openDirect = 'docmanager:open-direct';\n\n  export const reload = 'docmanager:reload';\n\n  export const rename = 'docmanager:rename';\n\n  export const restoreCheckpoint = 'docmanager:restore-checkpoint';\n\n  export const save = 'docmanager:save';\n\n  export const saveAll = 'docmanager:save-all';\n\n  export const saveAs = 'docmanager:save-as';\n\n  export const toggleAutosave = 'docmanager:toggle-autosave';\n\n  export const showInFileBrowser = 'docmanager:show-in-file-browser';\n\n  export const markdownPreview = 'markdownviewer:open';\n}\n\nconst pluginId = '@jupyterlab/docmanager-extension:plugin';\n\n/**\n * The default document manager provider.\n */\nconst plugin: JupyterLabPlugin<IDocumentManager> = {\n  id: pluginId,\n  provides: IDocumentManager,\n  requires: [ICommandPalette, IMainMenu, ISettingRegistry],\n  activate: (\n    app: JupyterLab,\n    palette: ICommandPalette,\n    menu: IMainMenu,\n    settingRegistry: ISettingRegistry\n  ): IDocumentManager => {\n    const manager = app.serviceManager;\n    const contexts = new WeakSet<DocumentRegistry.Context>();\n    const opener: DocumentManager.IWidgetOpener = {\n      open: (widget, options) => {\n        const shell = app.shell;\n        if (!widget.id) {\n          widget.id = `document-manager-${++Private.id}`;\n        }\n        widget.title.dataset = {\n          type: 'document-title',\n          ...widget.title.dataset\n        };\n        if (!widget.isAttached) {\n          app.shell.addToMainArea(widget, options || {});\n        }\n        shell.activateById(widget.id);\n\n        // Handle dirty state for open documents.\n        let context = docManager.contextForWidget(widget);\n        if (!contexts.has(context)) {\n          handleContext(app, context);\n          contexts.add(context);\n        }\n      }\n    };\n    const registry = app.docRegistry;\n    const when = app.restored.then(() => void 0);\n    const docManager = new DocumentManager({\n      registry,\n      manager,\n      opener,\n      when,\n      setBusy: app.setBusy.bind(app)\n    });\n\n    // Register the file operations commands.\n    addCommands(app, docManager, palette, opener, settingRegistry);\n\n    // Keep up to date with the settings registry.\n    const onSettingsUpdated = (settings: ISettingRegistry.ISettings) => {\n      const autosave = settings.get('autosave').composite as boolean | null;\n      docManager.autosave =\n        autosave === true || autosave === false ? autosave : true;\n      app.commands.notifyCommandChanged(CommandIDs.toggleAutosave);\n    };\n\n    // Fetch the initial state of the settings.\n    Promise.all([settingRegistry.load(pluginId), app.restored])\n      .then(([settings]) => {\n        settings.changed.connect(onSettingsUpdated);\n        onSettingsUpdated(settings);\n      })\n      .catch((reason: Error) => {\n        console.error(reason.message);\n      });\n    menu.settingsMenu.addGroup([{ command: CommandIDs.toggleAutosave }], 5);\n\n    return docManager;\n  }\n};\n\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n\n/* Widget to display the revert to checkpoint confirmation. */\nclass RevertConfirmWidget extends Widget {\n  /**\n   * Construct a new revert confirmation widget.\n   */\n  constructor(checkpoint: Contents.ICheckpointModel) {\n    super({ node: Private.createRevertConfirmNode(checkpoint) });\n  }\n}\n\n/**\n * Add the file operations commands to the application's command registry.\n */\nfunction addCommands(\n  app: JupyterLab,\n  docManager: IDocumentManager,\n  palette: ICommandPalette,\n  opener: DocumentManager.IWidgetOpener,\n  settingRegistry: ISettingRegistry\n): void {\n  const { commands, docRegistry, shell } = app;\n  const category = 'File Operations';\n  const isEnabled = () => {\n    const { currentWidget } = shell;\n    return !!(currentWidget && docManager.contextForWidget(currentWidget));\n  };\n  const fileType = () => {\n    const { currentWidget } = shell;\n    if (!currentWidget) {\n      return 'File';\n    }\n    const context = docManager.contextForWidget(currentWidget);\n    if (!context) {\n      return '';\n    }\n    const fts = docRegistry.getFileTypesForPath(context.path);\n    return fts.length && fts[0].displayName ? fts[0].displayName : 'File';\n  };\n  const closeWidgets = (widgets: Array<Widget>): void => {\n    widgets.forEach(widget => widget.close());\n  };\n  const findTab = (\n    area: DockLayout.AreaConfig,\n    widget: Widget\n  ): DockLayout.ITabAreaConfig | null => {\n    switch (area.type) {\n      case 'split-area':\n        const iterator = iter(area.children);\n        let tab: DockLayout.ITabAreaConfig | null = null;\n        let value: DockLayout.AreaConfig | null = null;\n        do {\n          value = iterator.next();\n          if (value) {\n            tab = findTab(value, widget);\n          }\n        } while (!tab && value);\n        return tab;\n      case 'tab-area':\n        const { id } = widget;\n        return area.widgets.some(widget => widget.id === id) ? area : null;\n      default:\n        return null;\n    }\n  };\n  const tabAreaFor = (widget: Widget): DockLayout.ITabAreaConfig | null => {\n    const { mainArea } = shell.saveLayout();\n    if (mainArea.mode !== 'multiple-document') {\n      return null;\n    }\n    let area = mainArea.dock.main;\n    if (!area) {\n      return null;\n    }\n    return findTab(area, widget);\n  };\n  const widgetsRightOf = (widget: Widget): Array<Widget> => {\n    const { id } = widget;\n    const tabArea = tabAreaFor(widget);\n    const widgets = tabArea ? tabArea.widgets || [] : [];\n    const index = widgets.findIndex(widget => widget.id === id);\n    if (index < 0) {\n      return [];\n    }\n    return widgets.slice(index + 1);\n  };\n\n  commands.addCommand(CommandIDs.close, {\n    label: () => {\n      const widget = shell.currentWidget;\n      let name = 'File';\n      if (widget) {\n        const typeName = fileType();\n        name = typeName || widget.title.label;\n      }\n      return `Close ${name}`;\n    },\n    isEnabled: () =>\n      !!shell.currentWidget && !!shell.currentWidget.title.closable,\n    execute: () => {\n      if (shell.currentWidget) {\n        shell.currentWidget.close();\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.closeAllFiles, {\n    label: 'Close All',\n    execute: () => {\n      shell.closeAll();\n    }\n  });\n\n  commands.addCommand(CommandIDs.closeOtherTabs, {\n    label: () => `Close Other Tabs`,\n    isEnabled: () => {\n      // Ensure there are at least two widgets.\n      const iterator = shell.widgets('main');\n      return !!iterator.next() && !!iterator.next();\n    },\n    execute: () => {\n      const widget = shell.currentWidget;\n      if (!widget) {\n        return;\n      }\n      const { id } = widget;\n      const otherWidgets = toArray(shell.widgets('main')).filter(\n        widget => widget.id !== id\n      );\n      closeWidgets(otherWidgets);\n    }\n  });\n\n  commands.addCommand(CommandIDs.closeRightTabs, {\n    label: () => `Close Tabs to Right`,\n    isEnabled: () =>\n      shell.currentWidget && widgetsRightOf(shell.currentWidget).length > 0,\n    execute: () => {\n      const widget = shell.currentWidget;\n      if (!widget) {\n        return;\n      }\n      closeWidgets(widgetsRightOf(widget));\n    }\n  });\n\n  commands.addCommand(CommandIDs.deleteFile, {\n    label: () => `Delete ${fileType()}`,\n    execute: args => {\n      const path =\n        typeof args['path'] === 'undefined' ? '' : (args['path'] as string);\n\n      if (!path) {\n        const command = CommandIDs.deleteFile;\n        throw new Error(`A non-empty path is required for ${command}.`);\n      }\n      return docManager.deleteFile(path);\n    }\n  });\n\n  commands.addCommand(CommandIDs.newUntitled, {\n    execute: args => {\n      const errorTitle = (args['error'] as string) || 'Error';\n      const path =\n        typeof args['path'] === 'undefined' ? '' : (args['path'] as string);\n      let options: Partial<Contents.ICreateOptions> = {\n        type: args['type'] as Contents.ContentType,\n        path\n      };\n\n      if (args['type'] === 'file') {\n        options.ext = (args['ext'] as string) || '.txt';\n      }\n\n      return docManager.services.contents\n        .newUntitled(options)\n        .catch(error => showErrorMessage(errorTitle, error));\n    },\n    label: args => (args['label'] as string) || `New ${args['type'] as string}`\n  });\n\n  commands.addCommand(CommandIDs.open, {\n    execute: args => {\n      const path =\n        typeof args['path'] === 'undefined' ? '' : (args['path'] as string);\n      const factory = (args['factory'] as string) || void 0;\n      const kernel = (args['kernel'] as Kernel.IModel) || void 0;\n      const options =\n        (args['options'] as DocumentRegistry.IOpenOptions) || void 0;\n      return docManager.services.contents\n        .get(path, { content: false })\n        .then(() => docManager.openOrReveal(path, factory, kernel, options));\n    },\n    icon: args => (args['icon'] as string) || '',\n    label: args => (args['label'] || args['factory']) as string,\n    mnemonic: args => (args['mnemonic'] as number) || -1\n  });\n\n  commands.addCommand(CommandIDs.openBrowserTab, {\n    execute: args => {\n      const path =\n        typeof args['path'] === 'undefined' ? '' : (args['path'] as string);\n\n      if (!path) {\n        return;\n      }\n\n      return docManager.services.contents.getDownloadUrl(path).then(url => {\n        window.open(url, '_blank');\n      });\n    },\n    icon: args => (args['icon'] as string) || '',\n    label: () => 'Open in New Browser Tab'\n  });\n\n  commands.addCommand(CommandIDs.openDirect, {\n    label: () => 'Open from Path',\n    caption: 'Open from path',\n    isEnabled: () => true,\n    execute: () => {\n      return getOpenPath(docManager.services.contents).then(path => {\n        if (!path) {\n          return;\n        }\n        docManager.services.contents.get(path, { content: false }).then(\n          args => {\n            // exists\n            return commands.execute(CommandIDs.open, { path: path });\n          },\n          () => {\n            // does not exist\n            return showDialog({\n              title: 'Cannot open',\n              body: 'File not found',\n              buttons: [Dialog.okButton()]\n            });\n          }\n        );\n        return;\n      });\n    }\n  });\n\n  commands.addCommand(CommandIDs.reload, {\n    label: () => `Reload ${fileType()} from Disk`,\n    caption: 'Reload contents from disk',\n    isEnabled,\n    execute: () => {\n      if (!isEnabled()) {\n        return;\n      }\n      const context = docManager.contextForWidget(shell.currentWidget);\n      return showDialog({\n        title: 'Reload Notebook from Disk',\n        body: `Are you sure you want to reload\n          the notebook from the disk?`,\n        buttons: [Dialog.cancelButton(), Dialog.warnButton({ label: 'Reload' })]\n      }).then(result => {\n        if (result.button.accept && !context.isDisposed) {\n          return context.revert();\n        }\n      });\n    }\n  });\n\n  commands.addCommand(CommandIDs.restoreCheckpoint, {\n    label: () => `Revert ${fileType()} to Checkpoint`,\n    caption: 'Revert contents to previous checkpoint',\n    isEnabled,\n    execute: () => {\n      if (!isEnabled()) {\n        return;\n      }\n      const context = docManager.contextForWidget(shell.currentWidget);\n      return context.listCheckpoints().then(checkpoints => {\n        if (checkpoints.length < 1) {\n          return;\n        }\n        const lastCheckpoint = checkpoints[checkpoints.length - 1];\n        if (!lastCheckpoint) {\n          return;\n        }\n        return showDialog({\n          title: 'Revert notebook to checkpoint',\n          body: new RevertConfirmWidget(lastCheckpoint),\n          buttons: [\n            Dialog.cancelButton(),\n            Dialog.warnButton({ label: 'Revert' })\n          ]\n        }).then(result => {\n          if (context.isDisposed) {\n            return;\n          }\n          if (result.button.accept) {\n            if (context.model.readOnly) {\n              return context.revert();\n            }\n            return context.restoreCheckpoint().then(() => context.revert());\n          }\n        });\n      });\n    }\n  });\n\n  commands.addCommand(CommandIDs.save, {\n    label: () => `Save ${fileType()}`,\n    caption: 'Save and create checkpoint',\n    isEnabled,\n    execute: () => {\n      if (isEnabled()) {\n        let context = docManager.contextForWidget(shell.currentWidget);\n        if (context.model.readOnly) {\n          return showDialog({\n            title: 'Cannot Save',\n            body: 'Document is read-only',\n            buttons: [Dialog.okButton()]\n          });\n        }\n        return context\n          .save()\n          .then(() => context.createCheckpoint())\n          .catch(err => {\n            // If the save was canceled by user-action, do nothing.\n            if (err.message === 'Cancel') {\n              return;\n            }\n            throw err;\n          });\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.saveAll, {\n    label: () => 'Save All',\n    caption: 'Save all open documents',\n    isEnabled: () => {\n      const iterator = shell.widgets('main');\n      let widget = iterator.next();\n      while (widget) {\n        if (docManager.contextForWidget(widget)) {\n          return true;\n        }\n        widget = iterator.next();\n      }\n      return false;\n    },\n    execute: () => {\n      const iterator = shell.widgets('main');\n      const promises: Promise<void>[] = [];\n      const paths = new Set<string>(); // Cache so we don't double save files.\n      let widget = iterator.next();\n      while (widget) {\n        const context = docManager.contextForWidget(widget);\n        if (context && !context.model.readOnly && !paths.has(context.path)) {\n          paths.add(context.path);\n          promises.push(context.save());\n        }\n        widget = iterator.next();\n      }\n      return Promise.all(promises);\n    }\n  });\n\n  commands.addCommand(CommandIDs.saveAs, {\n    label: () => `Save ${fileType()} As…`,\n    caption: 'Save with new path',\n    isEnabled,\n    execute: () => {\n      if (isEnabled()) {\n        let context = docManager.contextForWidget(shell.currentWidget);\n        return context.saveAs();\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.rename, {\n    label: () => `Rename ${fileType()}…`,\n    isEnabled,\n    execute: () => {\n      if (isEnabled()) {\n        let context = docManager.contextForWidget(shell.currentWidget);\n        return renameDialog(docManager, context!.path);\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.clone, {\n    label: () => `New View for ${fileType()}`,\n    isEnabled,\n    execute: args => {\n      const widget = shell.currentWidget;\n      const options =\n        (args['options'] as DocumentRegistry.IOpenOptions) || void 0;\n      if (!widget) {\n        return;\n      }\n      // Clone the widget.\n      let child = docManager.cloneWidget(widget);\n      if (child) {\n        opener.open(child, options);\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.toggleAutosave, {\n    label: 'Autosave Documents',\n    isToggled: () => docManager.autosave,\n    execute: () => {\n      const value = !docManager.autosave;\n      const key = 'autosave';\n      return settingRegistry\n        .set(pluginId, key, value)\n        .catch((reason: Error) => {\n          console.error(`Failed to set ${pluginId}:${key} - ${reason.message}`);\n        });\n    }\n  });\n\n  commands.addCommand(CommandIDs.showInFileBrowser, {\n    label: () => `Show in File Browser`,\n    isEnabled,\n    execute: () => {\n      let context = docManager.contextForWidget(shell.currentWidget);\n      if (!context) {\n        return;\n      }\n\n      // 'activate' is needed if this command is selected in the \"open tabs\" sidebar\n      commands.execute('filebrowser:activate', { path: context.path });\n      commands.execute('filebrowser:navigate', { path: context.path });\n    }\n  });\n\n  commands.addCommand(CommandIDs.markdownPreview, {\n    label: 'Markdown Preview',\n    execute: args => {\n      let path = args['path'];\n      if (typeof path !== 'string') {\n        return;\n      }\n      return commands.execute('docmanager:open', {\n        path,\n        factory: MARKDOWN_FACTORY\n      });\n    }\n  });\n\n  app.contextMenu.addItem({\n    command: CommandIDs.rename,\n    selector: '[data-type=\"document-title\"]',\n    rank: 1\n  });\n  app.contextMenu.addItem({\n    command: CommandIDs.clone,\n    selector: '[data-type=\"document-title\"]',\n    rank: 2\n  });\n  app.contextMenu.addItem({\n    command: CommandIDs.showInFileBrowser,\n    selector: '[data-type=\"document-title\"]',\n    rank: 3\n  });\n  app.contextMenu.addItem({\n    command: CommandIDs.closeOtherTabs,\n    selector: '[data-type=\"document-title\"]',\n    rank: 4\n  });\n  app.contextMenu.addItem({\n    command: CommandIDs.closeRightTabs,\n    selector: '[data-type=\"document-title\"]',\n    rank: 5\n  });\n\n  [\n    CommandIDs.openDirect,\n    CommandIDs.save,\n    CommandIDs.reload,\n    CommandIDs.restoreCheckpoint,\n    CommandIDs.saveAs,\n    CommandIDs.clone,\n    CommandIDs.close,\n    CommandIDs.closeAllFiles,\n    CommandIDs.closeOtherTabs,\n    CommandIDs.closeRightTabs,\n    CommandIDs.toggleAutosave\n  ].forEach(command => {\n    palette.addItem({ command, category });\n  });\n}\n\n/**\n * Handle dirty state for a context.\n */\nfunction handleContext(\n  app: JupyterLab,\n  context: DocumentRegistry.Context\n): void {\n  let disposable: IDisposable | null = null;\n  let onStateChanged = (sender: any, args: IChangedArgs<any>) => {\n    if (args.name === 'dirty') {\n      if (args.newValue === true) {\n        if (!disposable) {\n          disposable = app.setDirty();\n        }\n      } else if (disposable) {\n        disposable.dispose();\n        disposable = null;\n      }\n    }\n  };\n  context.ready.then(() => {\n    context.model.stateChanged.connect(onStateChanged);\n    if (context.model.dirty) {\n      disposable = app.setDirty();\n    }\n  });\n  context.disposed.connect(() => {\n    if (disposable) {\n      disposable.dispose();\n    }\n  });\n}\n\n/**\n * A namespace for private module data.\n */\nnamespace Private {\n  /**\n   * A counter for unique IDs.\n   */\n  export let id = 0;\n\n  export function createRevertConfirmNode(\n    checkpoint: Contents.ICheckpointModel\n  ): HTMLElement {\n    let body = document.createElement('div');\n    let confirmMessage = document.createElement('p');\n    let confirmText = document.createTextNode(`Are you sure you want to revert\n      the notebook to the latest checkpoint? `);\n    let cannotUndoText = document.createElement('strong');\n    cannotUndoText.textContent = 'This cannot be undone.';\n\n    confirmMessage.appendChild(confirmText);\n    confirmMessage.appendChild(cannotUndoText);\n\n    let lastCheckpointMessage = document.createElement('p');\n    let lastCheckpointText = document.createTextNode(\n      'The checkpoint was last updated at: '\n    );\n    let lastCheckpointDate = document.createElement('p');\n    let date = new Date(checkpoint.last_modified);\n    lastCheckpointDate.style.textAlign = 'center';\n    lastCheckpointDate.textContent =\n      Time.format(date, 'dddd, MMMM Do YYYY, h:mm:ss a') +\n      ' (' +\n      Time.formatHuman(date) +\n      ')';\n\n    lastCheckpointMessage.appendChild(lastCheckpointText);\n    lastCheckpointMessage.appendChild(lastCheckpointDate);\n\n    body.appendChild(confirmMessage);\n    body.appendChild(lastCheckpointMessage);\n    return body;\n  }\n}\n"]}