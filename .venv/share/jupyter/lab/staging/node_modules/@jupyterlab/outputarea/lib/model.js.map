{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../outputarea/src/model.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { each, map, toArray } from '@phosphor/algorithm';\n\nimport { IDisposable } from '@phosphor/disposable';\n\nimport { ISignal, Signal } from '@phosphor/signaling';\n\nimport { nbformat } from '@jupyterlab/coreutils';\n\nimport {\n  IObservableList,\n  ObservableList,\n  IObservableValue,\n  ObservableValue,\n  IModelDB\n} from '@jupyterlab/observables';\n\nimport { IOutputModel, OutputModel } from '@jupyterlab/rendermime';\n\n/**\n * The model for an output area.\n */\nexport interface IOutputAreaModel extends IDisposable {\n  /**\n   * A signal emitted when the model state changes.\n   */\n  readonly stateChanged: ISignal<IOutputAreaModel, void>;\n\n  /**\n   * A signal emitted when the model changes.\n   */\n  readonly changed: ISignal<IOutputAreaModel, IOutputAreaModel.ChangedArgs>;\n\n  /**\n   * The length of the items in the model.\n   */\n  readonly length: number;\n\n  /**\n   * Whether the output area is trusted.\n   */\n  trusted: boolean;\n\n  /**\n   * The output content factory used by the model.\n   */\n  readonly contentFactory: IOutputAreaModel.IContentFactory;\n\n  /**\n   * Get an item at the specified index.\n   */\n  get(index: number): IOutputModel;\n\n  /**\n   * Add an output, which may be combined with previous output.\n   *\n   * #### Notes\n   * The output bundle is copied.\n   * Contiguous stream outputs of the same `name` are combined.\n   */\n  add(output: nbformat.IOutput): number;\n\n  /**\n   * Set the value at the specified index.\n   */\n  set(index: number, output: nbformat.IOutput): void;\n\n  /**\n   * Clear all of the output.\n   *\n   * @param wait - Delay clearing the output until the next message is added.\n   */\n  clear(wait?: boolean): void;\n\n  /**\n   * Deserialize the model from JSON.\n   *\n   * #### Notes\n   * This will clear any existing data.\n   */\n  fromJSON(values: nbformat.IOutput[]): void;\n\n  /**\n   * Serialize the model to JSON.\n   */\n  toJSON(): nbformat.IOutput[];\n}\n\n/**\n * The namespace for IOutputAreaModel interfaces.\n */\nexport namespace IOutputAreaModel {\n  /**\n   * The options used to create a output area model.\n   */\n  export interface IOptions {\n    /**\n     * The initial values for the model.\n     */\n    values?: nbformat.IOutput[];\n\n    /**\n     * Whether the output is trusted.  The default is false.\n     */\n    trusted?: boolean;\n\n    /**\n     * The output content factory used by the model.\n     *\n     * If not given, a default factory will be used.\n     */\n    contentFactory?: IContentFactory;\n\n    /**\n     * An optional IModelDB to store the output area model.\n     */\n    modelDB?: IModelDB;\n  }\n\n  /**\n   * A type alias for changed args.\n   */\n  export type ChangedArgs = IObservableList.IChangedArgs<IOutputModel>;\n\n  /**\n   * The interface for an output content factory.\n   */\n  export interface IContentFactory {\n    /**\n     * Create an output model.\n     */\n    createOutputModel(options: IOutputModel.IOptions): IOutputModel;\n  }\n}\n\n/**\n * The default implementation of the IOutputAreaModel.\n */\nexport class OutputAreaModel implements IOutputAreaModel {\n  /**\n   * Construct a new observable outputs instance.\n   */\n  constructor(options: IOutputAreaModel.IOptions = {}) {\n    this._trusted = !!options.trusted;\n    this.contentFactory =\n      options.contentFactory || OutputAreaModel.defaultContentFactory;\n    this.list = new ObservableList<IOutputModel>();\n    if (options.values) {\n      each(options.values, value => {\n        this._add(value);\n      });\n    }\n    this.list.changed.connect(this._onListChanged, this);\n\n    // If we are given a IModelDB, keep an up-to-date\n    // serialized copy of the OutputAreaModel in it.\n    if (options.modelDB) {\n      this._modelDB = options.modelDB;\n      this._serialized = this._modelDB.createValue('outputs');\n      if (this._serialized.get()) {\n        this.fromJSON(this._serialized.get() as nbformat.IOutput[]);\n      } else {\n        this._serialized.set(this.toJSON());\n      }\n      this._serialized.changed.connect(this._onSerializedChanged, this);\n    }\n  }\n\n  /**\n   * A signal emitted when the model state changes.\n   */\n  get stateChanged(): ISignal<IOutputAreaModel, void> {\n    return this._stateChanged;\n  }\n\n  /**\n   * A signal emitted when the model changes.\n   */\n  get changed(): ISignal<this, IOutputAreaModel.ChangedArgs> {\n    return this._changed;\n  }\n\n  /**\n   * Get the length of the items in the model.\n   */\n  get length(): number {\n    return this.list ? this.list.length : 0;\n  }\n\n  /**\n   * Get whether the model is trusted.\n   */\n  get trusted(): boolean {\n    return this._trusted;\n  }\n\n  /**\n   * Set whether the model is trusted.\n   *\n   * #### Notes\n   * Changing the value will cause all of the models to re-set.\n   */\n  set trusted(value: boolean) {\n    if (value === this._trusted) {\n      return;\n    }\n    let trusted = (this._trusted = value);\n    for (let i = 0; i < this.list.length; i++) {\n      let item = this.list.get(i);\n      let value = item.toJSON();\n      item.dispose();\n      item = this._createItem({ value, trusted });\n      this.list.set(i, item);\n    }\n  }\n\n  /**\n   * The output content factory used by the model.\n   */\n  readonly contentFactory: IOutputAreaModel.IContentFactory;\n\n  /**\n   * Test whether the model is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources used by the model.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this.list.dispose();\n    Signal.clearData(this);\n  }\n\n  /**\n   * Get an item at the specified index.\n   */\n  get(index: number): IOutputModel {\n    return this.list.get(index);\n  }\n\n  /**\n   * Set the value at the specified index.\n   */\n  set(index: number, value: nbformat.IOutput): void {\n    // Normalize stream data.\n    this._normalize(value);\n    let item = this._createItem({ value, trusted: this._trusted });\n    this.list.set(index, item);\n  }\n\n  /**\n   * Add an output, which may be combined with previous output.\n   *\n   * #### Notes\n   * The output bundle is copied.\n   * Contiguous stream outputs of the same `name` are combined.\n   */\n  add(output: nbformat.IOutput): number {\n    // If we received a delayed clear message, then clear now.\n    if (this.clearNext) {\n      this.clear();\n      this.clearNext = false;\n    }\n\n    return this._add(output);\n  }\n\n  /**\n   * Clear all of the output.\n   *\n   * @param wait Delay clearing the output until the next message is added.\n   */\n  clear(wait: boolean = false): void {\n    this._lastStream = '';\n    if (wait) {\n      this.clearNext = true;\n      return;\n    }\n    each(this.list, (item: IOutputModel) => {\n      item.dispose();\n    });\n    this.list.clear();\n  }\n\n  /**\n   * Deserialize the model from JSON.\n   *\n   * #### Notes\n   * This will clear any existing data.\n   */\n  fromJSON(values: nbformat.IOutput[]) {\n    this.clear();\n    each(values, value => {\n      this._add(value);\n    });\n  }\n\n  /**\n   * Serialize the model to JSON.\n   */\n  toJSON(): nbformat.IOutput[] {\n    return toArray(map(this.list, (output: IOutputModel) => output.toJSON()));\n  }\n\n  /**\n   * Add an item to the list.\n   */\n  private _add(value: nbformat.IOutput): number {\n    let trusted = this._trusted;\n\n    // Normalize the value.\n    this._normalize(value);\n\n    // Consolidate outputs if they are stream outputs of the same kind.\n    if (\n      nbformat.isStream(value) &&\n      this._lastStream &&\n      value.name === this._lastName\n    ) {\n      // In order to get a list change event, we add the previous\n      // text to the current item and replace the previous item.\n      // This also replaces the metadata of the last item.\n      this._lastStream += value.text as string;\n      value.text = this._lastStream;\n      this._removeOverwrittenChars(value);\n      let item = this._createItem({ value, trusted });\n      let index = this.length - 1;\n      let prev = this.list.get(index);\n      prev.dispose();\n      this.list.set(index, item);\n      return index;\n    }\n\n    if (nbformat.isStream(value)) {\n      this._removeOverwrittenChars(value);\n    }\n\n    // Create the new item.\n    let item = this._createItem({ value, trusted });\n\n    // Update the stream information.\n    if (nbformat.isStream(value)) {\n      this._lastStream = value.text as string;\n      this._lastName = value.name;\n    } else {\n      this._lastStream = '';\n    }\n\n    // Add the item to our list and return the new length.\n    return this.list.push(item);\n  }\n\n  /**\n   * Normalize an output.\n   */\n  private _normalize(value: nbformat.IOutput): void {\n    if (nbformat.isStream(value)) {\n      if (Array.isArray(value.text)) {\n        value.text = (value.text as string[]).join('\\n');\n      }\n    }\n  }\n\n  /**\n   * Remove characters that are overridden by backspace characters.\n   */\n  private _fixBackspace(txt: string): string {\n    let tmp = txt;\n    do {\n      txt = tmp;\n      // Cancel out anything-but-newline followed by backspace\n      tmp = txt.replace(/[^\\n]\\x08/gm, '');\n    } while (tmp.length < txt.length);\n    return txt;\n  }\n\n  /**\n   * Remove chunks that should be overridden by the effect of\n   * carriage return characters.\n   */\n  private _fixCarriageReturn(txt: string): string {\n    let tmp = txt;\n    // Handle multiple carriage returns before a newline\n    tmp = tmp.replace(/\\r\\r+\\n/gm, '\\r\\n');\n    // Remove chunks that should be overridden by carriage returns\n    do {\n      // Remove any chunks preceding a carriage return unless carriage\n      // return followed by a newline\n      tmp = tmp.replace(/^[^\\n]*(?:\\r(?!\\n))+/gm, '');\n    } while (tmp.search(/\\r(?!\\n)/) > -1);\n    do {\n      // Replace remaining \\r\\n characters with a newline\n      tmp = tmp.replace(/\\r\\n/gm, '\\n');\n    } while (tmp.indexOf('\\r\\n') > -1);\n    return tmp;\n  }\n\n  /*\n   * Remove characters overridden by backspaces and carriage returns\n   */\n  private _removeOverwrittenChars(value: nbformat.IOutput): void {\n    let tmp = value.text as string;\n    value.text = this._fixCarriageReturn(this._fixBackspace(tmp));\n  }\n\n  protected clearNext = false;\n  protected list: IObservableList<IOutputModel> = null;\n\n  /**\n   * Create an output item and hook up its signals.\n   */\n  private _createItem(options: IOutputModel.IOptions): IOutputModel {\n    let factory = this.contentFactory;\n    let item = factory.createOutputModel(options);\n    item.changed.connect(this._onGenericChange, this);\n    return item;\n  }\n\n  /**\n   * Handle a change to the list.\n   */\n  private _onListChanged(\n    sender: IObservableList<IOutputModel>,\n    args: IObservableList.IChangedArgs<IOutputModel>\n  ) {\n    if (this._serialized && !this._changeGuard) {\n      this._changeGuard = true;\n      this._serialized.set(this.toJSON());\n      this._changeGuard = false;\n    }\n    this._changed.emit(args);\n  }\n\n  /**\n   * If the serialized version of the outputs have changed due to a remote\n   * action, then update the model accordingly.\n   */\n  private _onSerializedChanged(\n    sender: IObservableValue,\n    args: ObservableValue.IChangedArgs\n  ) {\n    if (!this._changeGuard) {\n      this._changeGuard = true;\n      this.fromJSON(args.newValue as nbformat.IOutput[]);\n      this._changeGuard = false;\n    }\n  }\n\n  /**\n   * Handle a change to an item.\n   */\n  private _onGenericChange(): void {\n    this._stateChanged.emit(void 0);\n  }\n\n  private _lastStream: string;\n  private _lastName: 'stdout' | 'stderr';\n  private _trusted = false;\n  private _isDisposed = false;\n  private _stateChanged = new Signal<IOutputAreaModel, void>(this);\n  private _changed = new Signal<this, IOutputAreaModel.ChangedArgs>(this);\n  private _modelDB: IModelDB = null;\n  private _serialized: IObservableValue = null;\n  private _changeGuard = false;\n}\n\n/**\n * The namespace for OutputAreaModel class statics.\n */\nexport namespace OutputAreaModel {\n  /**\n   * The default implementation of a `IModelOutputFactory`.\n   */\n  export class ContentFactory implements IOutputAreaModel.IContentFactory {\n    /**\n     * Create an output model.\n     */\n    createOutputModel(options: IOutputModel.IOptions): IOutputModel {\n      return new OutputModel(options);\n    }\n  }\n\n  /**\n   * The default output model factory.\n   */\n  export const defaultContentFactory = new ContentFactory();\n}\n"]}