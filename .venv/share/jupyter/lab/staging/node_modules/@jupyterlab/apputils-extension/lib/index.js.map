{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../apputils-extension/src/index.ts"],"names":[],"mappings":";AAAA;;;+EAG+E;;AAE/E,yDAKiC;AAEjC,mDAQ8B;AAE9B,qDAQ+B;AAE/B,mDAAiD;AAMjD,mDAAsD;AAEtD,qDAAuE;AAEvE,+CAAyC;AAEzC,uCAA4D;AAE5D,yCAAgD;AAEhD,8BAA4B;AAE5B;;;;GAIG;AACH,MAAM,gCAAgC,GAAG,GAAG,CAAC;AAE7C;;GAEG;AACH,MAAM,sBAAsB,GAAG,KAAK,CAAC;AAErC;;GAEG;AACH,IAAU,UAAU,CAYnB;AAZD,WAAU,UAAU;IACL,sBAAW,GAAG,uBAAuB,CAAC;IAEtC,oBAAS,GAAG,uBAAuB,CAAC;IAEpC,uBAAY,GAAG,0BAA0B,CAAC;IAE1C,gBAAK,GAAG,gBAAgB,CAAC;IAEzB,sBAAW,GAAG,wBAAwB,CAAC;IAEvC,oBAAS,GAAG,uBAAuB,CAAC;AACnD,CAAC,EAZS,UAAU,KAAV,UAAU,QAYnB;AAED;;GAEG;AACH,IAAU,QAAQ,CAMjB;AAND,WAAU,QAAQ;IACH,mBAAU,GAAG,mBAAmB,CAAC;IAEjC,kBAAS,GAAG,0BAA0B,CAAC;IAEvC,oBAAW,GAAG,wBAAwB,CAAC;AACtD,CAAC,EANS,QAAQ,KAAR,QAAQ,QAMjB;AAED;;GAEG;AACH,uBAAwB,SAAQ,yBAG/B;IACC;;OAEG;IACH,YAAY,OAAuB;QACjC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,EAAU;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAClD,8DAA8D;YAC9D,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YAEb,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,IAAI,CAAC,EAAU,EAAE,GAAW;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;CAGF;AAED;;GAEG;AACH,MAAM,OAAO,GAAsC;IACjD,QAAQ,EAAE,yBAAe;IACzB,EAAE,EAAE,wCAAwC;IAC5C,QAAQ,EAAE,0BAAe;IACzB,SAAS,EAAE,IAAI;CAChB,CAAC;AAEF;;;;;;;;GAQG;AACH,MAAM,eAAe,GAA2B;IAC9C,QAAQ,EAAE,wBAAc;IACxB,EAAE,EAAE,iDAAiD;IACrD,QAAQ,EAAE,CAAC,6BAAe,CAAC;IAC3B,SAAS,EAAE,IAAI;CAChB,CAAC;AAEF;;GAEG;AACH,MAAM,QAAQ,GAAuC;IACnD,EAAE,EAAE,yCAAyC;IAC7C,QAAQ,EAAE,CAAC,GAAe,EAAoB,EAAE;QAC9C,MAAM,SAAS,GAAG,IAAI,iBAAiB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5D,OAAO,IAAI,2BAAe,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;IAC5C,CAAC;IACD,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,4BAAgB;CAC3B,CAAC;AAEF;;GAEG;AACH,MAAM,MAAM,GAAoC;IAC9C,EAAE,EAAE,uCAAuC;IAC3C,QAAQ,EAAE,CAAC,4BAAgB,EAAE,wBAAa,CAAC;IAC3C,QAAQ,EAAE,CAAC,0BAAe,EAAE,oBAAS,CAAC;IACtC,QAAQ,EAAE,CACR,GAAe,EACf,QAA0B,EAC1B,MAAqB,EACrB,OAA+B,EAC/B,QAA0B,EACX,EAAE;QACjB,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;QACvB,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC9B,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACjC,MAAM,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC;QACtB,MAAM,OAAO,GAAG,IAAI,uBAAY,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;QAEvE,2DAA2D;QAC3D,+DAA+D;QAC/D,+DAA+D;QAC/D,IAAI,YAAoB,CAAC;QAEzB,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE;YAC1C,KAAK,EAAE,IAAI,CAAC,EAAE;gBACZ,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAW,CAAC;gBACtC,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;YAC1D,CAAC;YACD,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,YAAY;YACjD,OAAO,EAAE,IAAI,CAAC,EAAE;gBACd,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAW,CAAC;gBACtC,IAAI,KAAK,KAAK,OAAO,CAAC,KAAK,EAAE;oBAC3B,OAAO;iBACR;gBACD,YAAY,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACxB,QAAQ,CAAC,oBAAoB,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YACxD,CAAC;SACF,CAAC,CAAC;QAEH,sEAAsE;QACtE,IAAI,QAAQ,EAAE;YACZ,MAAM,SAAS,GAAG,IAAI,cAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;YACzC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,kBAAkB,CAAC;YAC3C,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;gBACrB,MAAM,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC;gBACvC,MAAM,SAAS,GAAG,KAAK,CAAC;gBAExB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAC7B,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;gBAC7D,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAC5B;gBACE;oBACE,IAAI,EAAE,SAA0B;oBAChC,OAAO,EAAE,SAAS;iBACnB;aACF,EACD,CAAC,CACF,CAAC;SACH;QAED,mEAAmE;QACnE,IAAI,OAAO,EAAE;YACX,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;gBACrB,MAAM,QAAQ,GAAG,UAAU,CAAC;gBAC5B,MAAM,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC;gBACvC,MAAM,SAAS,GAAG,IAAI,CAAC;gBACvB,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;gBAE7B,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAC7B,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,wBAAa;CACxB,CAAC;AAEF;;GAEG;AACH,MAAM,QAAQ,GAAsC;IAClD,EAAE,EAAE,yCAAyC;IAC7C,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,0BAAe;IACzB,QAAQ,EAAE,CAAC,qBAAO,CAAC;IACnB,QAAQ,EAAE,CAAC,GAAe,EAAE,MAAe,EAAE,EAAE;QAC7C,MAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACrD,MAAM,QAAQ,GAAG,IAAI,yBAAc,EAAE,CAAC;QAEtC,OAAO,QAAQ;aACZ,OAAO,CAAC,SAAS,CAAC;aAClB,KAAK,CAAC,MAAM,CAAC,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;YAElD,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC;aACD,IAAI,CAAC,GAAG,EAAE;YACT,sBAAU,CAAC,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEjD,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,MAAM,GAAoC;IAC9C,EAAE,EAAE,uCAAuC;IAC3C,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,wBAAa;IACvB,QAAQ,EAAE,GAAG,CAAC,EAAE;QACd,OAAO;YACL,IAAI,EAAE,GAAG,EAAE;gBACT,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC;gBAEnC,OAAO,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YAClE,CAAC;SACF,CAAC;IACJ,CAAC;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,KAAK,GAA+B;IACxC,EAAE,EAAE,sCAAsC;IAC1C,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,oBAAQ;IAClB,QAAQ,EAAE,CAAC,qBAAO,EAAE,0BAAe,EAAE,wBAAa,CAAC;IACnD,QAAQ,EAAE,CACR,GAAe,EACf,MAAe,EACf,QAAyB,EACzB,MAAqB,EACrB,EAAE;QACF,IAAI,SAAiB,CAAC;QACtB,IAAI,QAAQ,GAAG,KAAK,CAAC;QAErB,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,GAAG,CAAC;QAC/C,MAAM,EAAE,UAAU,EAAE,GAAG,cAAc,CAAC;QACtC,MAAM,SAAS,GAAG,IAAI,2BAAe,EAAyB,CAAC;QAC/D,MAAM,KAAK,GAAG,IAAI,mBAAO,CAAC;YACxB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,SAAS,CAAC,OAAO;YAC5B,UAAU,EAAE,QAAQ,CAAC,IAAI;SAC1B,CAAC,CAAC;QAEH,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,EAAE;YAC3C,OAAO,EAAE,GAAG,EAAE;gBACZ,MAAM,SAAS,GAAG,IAAI,CAAC;gBACvB,MAAM,MAAM,GAAG,IAAI,CAAC;gBAEpB,qEAAqE;gBACrE,mDAAmD;gBACnD,OAAO,KAAK;qBACT,KAAK,CAAC,MAAM,CAAC;qBACb,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YACvE,CAAC;SACF,CAAC,CAAC;QAEH,0EAA0E;QAC1E,uEAAuE;QACvE,IAAI,SAAS,GAAiC,IAAI,CAAC;QAEnD,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,EAAE;YACxC,KAAK,EAAE,GAAG,EAAE,CAAC,mBAAmB,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG;YAC/D,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC;YAC/C,OAAO,EAAE,IAAI,CAAC,EAAE;gBACd,MAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAE/C,IAAI,CAAC,SAAS,EAAE;oBACd,OAAO;iBACR;gBAED,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gCAAgC,CAAC;gBACtE,MAAM,EAAE,GAAG,SAAS,CAAC;gBACrB,MAAM,QAAQ,GAAG,EAAE,EAAE,EAAE,CAAC;gBAExB,sEAAsE;gBACtE,IAAI,CAAC,SAAS,EAAE;oBACd,SAAS,GAAG,IAAI,2BAAe,EAAQ,CAAC;iBACzC;gBAED,IAAI,SAAS,EAAE;oBACb,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;iBAChC;gBAED,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;oBACjC,2DAA2D;oBAC3D,IAAI,CAAC,SAAS,EAAE;wBACd,OAAO;qBACR;oBAED,KAAK;yBACF,MAAM,EAAE;yBACR,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;yBACrD,IAAI,CAAC,GAAG,EAAE;wBACT,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;wBAC7B,SAAS,GAAG,IAAI,CAAC;oBACnB,CAAC,CAAC;yBACD,KAAK,CAAC,MAAM,CAAC,EAAE;wBACd,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;wBACzB,SAAS,GAAG,IAAI,CAAC;oBACnB,CAAC,CAAC,CAAC;gBACP,CAAC,EAAE,OAAO,CAAC,CAAC;gBAEZ,OAAO,SAAS,CAAC,OAAO,CAAC;YAC3B,CAAC;SACF,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,CAAC,MAAW,EAAE,MAAsB,EAAE,EAAE;YACvD,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC;QAEF,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,EAAE;YACxC,OAAO,EAAE,CAAC,IAAuB,EAAE,EAAE;gBACnC,uEAAuE;gBACvE,0CAA0C;gBAC1C,IAAI,QAAQ,EAAE;oBACZ,OAAO;iBACR;gBAED,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;gBACpC,MAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC/C,MAAM,KAAK,GAAG,kBAAM,CAAC,mBAAmB,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;gBACvD,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC7B,MAAM,MAAM,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;gBAE7D,IAAI,OAAqB,CAAC;gBAE1B,sEAAsE;gBACtE,kEAAkE;gBAClE,gCAAgC;gBAChC,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,EAAE,EAAE;oBACrC,MAAM,MAAM,GAAG,GAAG,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC;oBAC9C,MAAM,IAAI,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;oBACtD,MAAM,QAAQ,GAAG,mBAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAE9C,QAAQ,GAAG,IAAI,CAAC;oBAChB,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC;oBACnD,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;iBAC7B;gBAED,uEAAuE;gBACvE,OAAO;oBACL,OAAO;wBACP,UAAU;6BACP,KAAK,CAAC,MAAM,CAAC;6BACb,IAAI,CAAC,KAAK,CAAC,EAAE;4BACZ,8DAA8D;4BAC9D,4BAA4B;4BAC5B,IAAI,CAAC,QAAQ,EAAE;gCACb,QAAQ,GAAG,IAAI,CAAC;gCAChB,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;6BAChE;wBACH,CAAC,CAAC;6BACD,KAAK,CAAC,MAAM,CAAC,EAAE;4BACd,OAAO,CAAC,IAAI,CAAC,uBAAuB,SAAS,WAAW,EAAE,MAAM,CAAC,CAAC;4BAElE,kEAAkE;4BAClE,yDAAyD;4BACzD,IAAI,CAAC,QAAQ,EAAE;gCACb,QAAQ,GAAG,IAAI,CAAC;gCAChB,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;6BACvD;wBACH,CAAC,CAAC;6BACD,IAAI,CAAC,GAAG,EAAE;4BACT,iEAAiE;4BACjE,IAAI,SAAS,EAAE;gCACb,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;6BACxC;wBACH,CAAC,CAAC,CAAC;gBAEP,OAAO,OAAO;qBACX,KAAK,CAAC,MAAM,CAAC,EAAE;oBACd,OAAO,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,SAAS,UAAU,EAAE,MAAM,CAAC,CAAC;gBAC1D,CAAC,CAAC;qBACD,IAAI,CAAC,GAAG,EAAE;oBACT,MAAM,SAAS,GAAG,IAAI,CAAC;oBAEvB,IAAI,MAAM,KAAK,KAAK,EAAE;wBACpB,2DAA2D;wBAC3D,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC;wBAEtB,MAAM,GAAG,GAAG,IAAI,GAAG,kBAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;wBAC5D,MAAM,MAAM,GAAG,QAAQ;6BACpB,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,CAAC;6BAC5C,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBAE3B,wDAAwD;wBACxD,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;4BACf,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;wBACzC,CAAC,CAAC,CAAC;wBAEH,OAAO,MAAM,CAAC;qBACf;oBAED,0DAA0D;oBAC1D,OAAO,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;gBAC/D,CAAC,CAAC,CAAC;YACP,CAAC;SACF,CAAC,CAAC;QACH,uEAAuE;QACvE,wEAAwE;QACxE,6DAA6D;QAC7D,MAAM,CAAC,QAAQ,CAAC;YACd,OAAO,EAAE,UAAU,CAAC,SAAS;YAC7B,OAAO,EAAE,QAAQ,CAAC,UAAU;YAC5B,IAAI,EAAE,EAAE,CAAC,8DAA8D;SACxE,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC;YACd,OAAO,EAAE,UAAU,CAAC,SAAS;YAC7B,OAAO,EAAE,QAAQ,CAAC,SAAS;YAC3B,IAAI,EAAE,EAAE,CAAC,8DAA8D;SACxE,CAAC,CAAC;QAEH,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,EAAE;YACpC,KAAK,EAAE,yBAAyB;YAChC,OAAO,EAAE,GAAG,EAAE;gBACZ,QAAQ;qBACL,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC;qBAChC,IAAI,CAAC,GAAG,EAAE;oBACT,MAAM,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC,CAAC;qBACD,KAAK,CAAC,GAAG,EAAE;oBACV,MAAM,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC;SACF,CAAC,CAAC;QAEH,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE;YAC1C,OAAO,EAAE,CAAC,IAAuB,EAAE,EAAE;gBACnC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;gBACpC,MAAM,KAAK,GAAG,kBAAM,CAAC,mBAAmB,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;gBACvD,MAAM,KAAK,GAAG,OAAO,IAAI,KAAK,CAAC;gBAC/B,MAAM,KAAK,GAAG,OAAO,IAAI,KAAK,CAAC;gBAE/B,IAAI,CAAC,KAAK,EAAE;oBACV,OAAO;iBACR;gBAED,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAE9B,gEAAgE;gBAChE,gCAAgC;gBAChC,IAAI,QAAQ,EAAE;oBACZ,OAAO,MAAM,CAAC,MAAM,EAAE,CAAC;iBACxB;gBAED,4BAA4B;gBAC5B,QAAQ,GAAG,IAAI,CAAC;gBAChB,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAErD,2DAA2D;gBAC3D,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC;gBAEtB,MAAM,MAAM,GAAG,IAAI,CAAC;gBACpB,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,MAAM,GAAG,GAAG,IAAI,GAAG,kBAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBAC5D,MAAM,OAAO,GAAG,QAAQ;qBACrB,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC;qBAChC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,4CAA4C;gBAExE,uDAAuD;gBACvD,IAAI,KAAK,EAAE;oBACT,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;wBAChB,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;oBACzC,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;wBAChB,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;wBACjC,OAAO,CAAC,OAAO,EAAE,CAAC;oBACpB,CAAC,CAAC,CAAC;iBACJ;gBAED,OAAO,OAAO,CAAC;YACjB,CAAC;SACF,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC;YACd,OAAO,EAAE,UAAU,CAAC,WAAW;YAC/B,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,IAAI,EAAE,EAAE,CAAC,4DAA4D;SACtE,CAAC,CAAC;QAEH,MAAM,WAAW,GAAG,GAAG,EAAE;YACvB,yEAAyE;YACzE,2BAA2B;YAC3B,IAAI,CAAC,QAAQ,EAAE;gBACb,QAAQ,GAAG,IAAI,CAAC;gBAChB,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACvD;YACD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC;QAEF,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAE1C,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,OAAO,GAA4B;IACvC,OAAO;IACP,eAAe;IACf,QAAQ;IACR,QAAQ;IACR,KAAK;IACL,MAAM;IACN,MAAM;CACP,CAAC;AACF,kBAAe,OAAO,CAAC;AAEvB;;GAEG;AACH,IAAU,OAAO,CAoLhB;AApLD,WAAU,OAAO;IACf;;OAEG;IACH,sBAA6B,MAAe;QAC1C,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAE5D,OAAO,CAAC,KAAK,IAAI,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACvD,CAAC;IAJe,oBAAY,eAI3B,CAAA;IAED;;OAEG;IACH;QACE,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE3C,MAAM,CAAC,EAAE,GAAG,mBAAmB,CAAC;QAChC,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC;QAEtB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAC3B,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC3C,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAE7C,IAAI,CAAC,EAAE,GAAG,OAAO,EAAE,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAC9B,MAAM,CAAC,EAAE,GAAG,SAAS,EAAE,EAAE,CAAC;YAC1B,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;YAE5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE3B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,IAAI,SAAS,GAAG,CAAC,CAAC;IAElB;;OAEG;IACH,IAAI,MAAmB,CAAC;IAExB;;OAEG;IACH,iBAAiB,EAAc;QAC7B,IAAI,MAAM,EAAE;YACV,OAAO;SACR;QAED,MAAM,GAAG,IAAI,iBAAM,CAAC;YAClB,KAAK,EAAE,YAAY;YACnB,IAAI,EAAE;+DACmD;YACzD,OAAO,EAAE;gBACP,iBAAM,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC;gBAC9C,iBAAM,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC;aAChD;SACF,CAAC,CAAC;QAEH,MAAM;aACH,MAAM,EAAE;aACR,IAAI,CAAC,MAAM,CAAC,EAAE;YACb,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBACxB,OAAO,EAAE,EAAE,CAAC;aACb;YAED,MAAM,CAAC,OAAO,EAAE,CAAC;YACjB,MAAM,GAAG,IAAI,CAAC;YAEd,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;gBACjC,OAAO,CAAC,EAAE,CAAC,CAAC;YACd,CAAC,EAAE,sBAAsB,CAAC,CAAC;QAC7B,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,EAAE;YACV,WAAW;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,kBAAyB,MAAe,EAAE,IAAI,GAAG,KAAK;QACpD,MAAM,IAAI,GAAG,6BAAkB,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,IAAI,iBAAM,CAAC;YACxB,KAAK,EAAE,mCAAmC;YAC1C,IAAI,EAAE,IAAI;YACV,iBAAiB,EAAE,OAAO;YAC1B,OAAO,EAAE,CAAC,iBAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC,CAAC;SAC1D,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACnC,MAAM,CAAC,OAAO,EAAE,CAAC;YAEjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,MAAM,GAAG,GAAG,cAAc,MAAM,CAAC,KAAK,EAAE,CAAC;gBAEzC,uEAAuE;gBACvE,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;gBAEnD,oEAAoE;gBACpE,oEAAoE;gBACpE,8BAA8B;gBAC9B,OAAO,IAAI,OAAO,CAAO,GAAG,EAAE;oBAC5B,WAAW;gBACb,CAAC,CAAC,CAAC;aACJ;YAED,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IA5Be,gBAAQ,WA4BvB,CAAA;IAED;;OAEG;IACH,MAAM,MAAM,GAAG,YAAY,EAAE,CAAC;IAE9B;;OAEG;IACH,IAAI,WAAW,GAAG,CAAC,CAAC;IAEpB;;;;;;OAMG;IACH,oBACE,KAAmB,EACnB,QAAyB,EACzB,QAAgB;QAEhB,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACvC,WAAW,EAAE,CAAC;QAEd,IAAI,SAAS,EAAE;YACb,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SAChC;QACD,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;YACjC,IAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBACjC,OAAO,CAAC,GAAG,EAAE;oBACX,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EAAE,sBAAsB,CAAC,CAAC;QAE3B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAElC,OAAO,IAAI,+BAAkB,CAAC,GAAG,EAAE;YACjC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;gBACd,IAAI,EAAE,WAAW,KAAK,CAAC,EAAE;oBACvB,IAAI,SAAS,EAAE;wBACb,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;wBAC/B,SAAS,GAAG,CAAC,CAAC;qBACf;oBAED,IAAI,MAAM,EAAE;wBACV,MAAM,CAAC,OAAO,EAAE,CAAC;wBACjB,MAAM,GAAG,IAAI,CAAC;qBACf;oBAED,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBACpC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;wBACrB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBACpC,CAAC,EAAE,GAAG,CAAC,CAAC;iBACT;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAzCe,kBAAU,aAyCzB,CAAA;AACH,CAAC,EApLS,OAAO,KAAP,OAAO,QAoLhB","sourcesContent":["/*-----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport {\n  ILayoutRestorer,\n  IRouter,\n  JupyterLab,\n  JupyterLabPlugin\n} from '@jupyterlab/application';\n\nimport {\n  Dialog,\n  ICommandPalette,\n  ISplashScreen,\n  IThemeManager,\n  IWindowResolver,\n  ThemeManager,\n  WindowResolver\n} from '@jupyterlab/apputils';\n\nimport {\n  DataConnector,\n  ISettingRegistry,\n  IStateDB,\n  PageConfig,\n  SettingRegistry,\n  StateDB,\n  URLExt\n} from '@jupyterlab/coreutils';\n\nimport { IMainMenu } from '@jupyterlab/mainmenu';\n\nimport { ServiceManager } from '@jupyterlab/services';\n\nimport { CommandRegistry } from '@phosphor/commands';\n\nimport { PromiseDelegate } from '@phosphor/coreutils';\n\nimport { DisposableDelegate, IDisposable } from '@phosphor/disposable';\n\nimport { Menu } from '@phosphor/widgets';\n\nimport { activatePalette, restorePalette } from './palette';\n\nimport { createRedirectForm } from './redirect';\n\nimport '../style/index.css';\n\n/**\n * The interval in milliseconds that calls to save a workspace are debounced\n * to allow for multiple quickly executed state changes to result in a single\n * workspace save operation.\n */\nconst WORKSPACE_SAVE_DEBOUNCE_INTERVAL = 750;\n\n/**\n * The interval in milliseconds before recover options appear during splash.\n */\nconst SPLASH_RECOVER_TIMEOUT = 12000;\n\n/**\n * The command IDs used by the apputils plugin.\n */\nnamespace CommandIDs {\n  export const changeTheme = 'apputils:change-theme';\n\n  export const loadState = 'apputils:load-statedb';\n\n  export const recoverState = 'apputils:recover-statedb';\n\n  export const reset = 'apputils:reset';\n\n  export const resetOnLoad = 'apputils:reset-on-load';\n\n  export const saveState = 'apputils:save-statedb';\n}\n\n/**\n * The routing regular expressions used by the apputils plugin.\n */\nnamespace Patterns {\n  export const cloneState = /[?&]clone([=&]|$)/;\n\n  export const loadState = /^\\/workspaces\\/([^?\\/]+)/;\n\n  export const resetOnLoad = /(\\?reset|\\&reset)($|&)/;\n}\n\n/**\n * A data connector to access plugin settings.\n */\nclass SettingsConnector extends DataConnector<\n  ISettingRegistry.IPlugin,\n  string\n> {\n  /**\n   * Create a new settings connector.\n   */\n  constructor(manager: ServiceManager) {\n    super();\n    this._manager = manager;\n  }\n\n  /**\n   * Retrieve a saved bundle from the data connector.\n   */\n  fetch(id: string): Promise<ISettingRegistry.IPlugin> {\n    return this._manager.settings.fetch(id).then(data => {\n      // Replace the server ID with the original unmodified version.\n      data.id = id;\n\n      return data;\n    });\n  }\n\n  /**\n   * Save the user setting data in the data connector.\n   */\n  save(id: string, raw: string): Promise<void> {\n    return this._manager.settings.save(id, raw);\n  }\n\n  private _manager: ServiceManager;\n}\n\n/**\n * The default command palette extension.\n */\nconst palette: JupyterLabPlugin<ICommandPalette> = {\n  activate: activatePalette,\n  id: '@jupyterlab/apputils-extension:palette',\n  provides: ICommandPalette,\n  autoStart: true\n};\n\n/**\n * The default command palette's restoration extension.\n *\n * #### Notes\n * The command palette's restoration logic is handled separately from the\n * command palette provider extension because the layout restorer dependency\n * causes the command palette to be unavailable to other extensions earlier\n * in the application load cycle.\n */\nconst paletteRestorer: JupyterLabPlugin<void> = {\n  activate: restorePalette,\n  id: '@jupyterlab/apputils-extension:palette-restorer',\n  requires: [ILayoutRestorer],\n  autoStart: true\n};\n\n/**\n * The default setting registry provider.\n */\nconst settings: JupyterLabPlugin<ISettingRegistry> = {\n  id: '@jupyterlab/apputils-extension:settings',\n  activate: (app: JupyterLab): ISettingRegistry => {\n    const connector = new SettingsConnector(app.serviceManager);\n\n    return new SettingRegistry({ connector });\n  },\n  autoStart: true,\n  provides: ISettingRegistry\n};\n\n/**\n * The default theme manager provider.\n */\nconst themes: JupyterLabPlugin<IThemeManager> = {\n  id: '@jupyterlab/apputils-extension:themes',\n  requires: [ISettingRegistry, ISplashScreen],\n  optional: [ICommandPalette, IMainMenu],\n  activate: (\n    app: JupyterLab,\n    settings: ISettingRegistry,\n    splash: ISplashScreen,\n    palette: ICommandPalette | null,\n    mainMenu: IMainMenu | null\n  ): IThemeManager => {\n    const host = app.shell;\n    const commands = app.commands;\n    const url = app.info.urls.themes;\n    const key = themes.id;\n    const manager = new ThemeManager({ key, host, settings, splash, url });\n\n    // Keep a synchronously set reference to the current theme,\n    // since the asynchronous setting of the theme in `changeTheme`\n    // can lead to an incorrect toggle on the currently used theme.\n    let currentTheme: string;\n\n    commands.addCommand(CommandIDs.changeTheme, {\n      label: args => {\n        const theme = args['theme'] as string;\n        return args['isPalette'] ? `Use ${theme} Theme` : theme;\n      },\n      isToggled: args => args['theme'] === currentTheme,\n      execute: args => {\n        const theme = args['theme'] as string;\n        if (theme === manager.theme) {\n          return;\n        }\n        currentTheme = theme;\n        manager.setTheme(theme);\n        commands.notifyCommandChanged(CommandIDs.changeTheme);\n      }\n    });\n\n    // If we have a main menu, add the theme manager to the settings menu.\n    if (mainMenu) {\n      const themeMenu = new Menu({ commands });\n      themeMenu.title.label = 'JupyterLab Theme';\n      app.restored.then(() => {\n        const command = CommandIDs.changeTheme;\n        const isPalette = false;\n\n        manager.themes.forEach(theme => {\n          themeMenu.addItem({ command, args: { isPalette, theme } });\n        });\n      });\n      mainMenu.settingsMenu.addGroup(\n        [\n          {\n            type: 'submenu' as Menu.ItemType,\n            submenu: themeMenu\n          }\n        ],\n        0\n      );\n    }\n\n    // If we have a command palette, add theme switching options to it.\n    if (palette) {\n      app.restored.then(() => {\n        const category = 'Settings';\n        const command = CommandIDs.changeTheme;\n        const isPalette = true;\n        currentTheme = manager.theme;\n\n        manager.themes.forEach(theme => {\n          palette.addItem({ command, args: { isPalette, theme }, category });\n        });\n      });\n    }\n\n    return manager;\n  },\n  autoStart: true,\n  provides: IThemeManager\n};\n\n/**\n * The default window name resolver provider.\n */\nconst resolver: JupyterLabPlugin<IWindowResolver> = {\n  id: '@jupyterlab/apputils-extension:resolver',\n  autoStart: true,\n  provides: IWindowResolver,\n  requires: [IRouter],\n  activate: (app: JupyterLab, router: IRouter) => {\n    const candidate = Private.getWorkspace(router) || '';\n    const resolver = new WindowResolver();\n\n    return resolver\n      .resolve(candidate)\n      .catch(reason => {\n        console.warn('Window resolution failed:', reason);\n\n        return Private.redirect(router);\n      })\n      .then(() => {\n        PageConfig.setOption('workspace', resolver.name);\n\n        return resolver;\n      });\n  }\n};\n\n/**\n * The default splash screen provider.\n */\nconst splash: JupyterLabPlugin<ISplashScreen> = {\n  id: '@jupyterlab/apputils-extension:splash',\n  autoStart: true,\n  provides: ISplashScreen,\n  activate: app => {\n    return {\n      show: () => {\n        const { commands, restored } = app;\n\n        return Private.showSplash(restored, commands, CommandIDs.reset);\n      }\n    };\n  }\n};\n\n/**\n * The default state database for storing application state.\n */\nconst state: JupyterLabPlugin<IStateDB> = {\n  id: '@jupyterlab/apputils-extension:state',\n  autoStart: true,\n  provides: IStateDB,\n  requires: [IRouter, IWindowResolver, ISplashScreen],\n  activate: (\n    app: JupyterLab,\n    router: IRouter,\n    resolver: IWindowResolver,\n    splash: ISplashScreen\n  ) => {\n    let debouncer: number;\n    let resolved = false;\n\n    const { commands, info, serviceManager } = app;\n    const { workspaces } = serviceManager;\n    const transform = new PromiseDelegate<StateDB.DataTransform>();\n    const state = new StateDB({\n      namespace: info.namespace,\n      transform: transform.promise,\n      windowName: resolver.name\n    });\n\n    commands.addCommand(CommandIDs.recoverState, {\n      execute: () => {\n        const immediate = true;\n        const silent = true;\n\n        // Clear the state silently so that the state changed signal listener\n        // will not be triggered as it causes a save state.\n        return state\n          .clear(silent)\n          .then(() => commands.execute(CommandIDs.saveState, { immediate }));\n      }\n    });\n\n    // Conflate all outstanding requests to the save state command that happen\n    // within the `WORKSPACE_SAVE_DEBOUNCE_INTERVAL` into a single promise.\n    let conflated: PromiseDelegate<void> | null = null;\n\n    commands.addCommand(CommandIDs.saveState, {\n      label: () => `Save Workspace (${Private.getWorkspace(router)})`,\n      isEnabled: () => !!Private.getWorkspace(router),\n      execute: args => {\n        const workspace = Private.getWorkspace(router);\n\n        if (!workspace) {\n          return;\n        }\n\n        const timeout = args.immediate ? 0 : WORKSPACE_SAVE_DEBOUNCE_INTERVAL;\n        const id = workspace;\n        const metadata = { id };\n\n        // Only instantiate a new conflated promise if one is not outstanding.\n        if (!conflated) {\n          conflated = new PromiseDelegate<void>();\n        }\n\n        if (debouncer) {\n          window.clearTimeout(debouncer);\n        }\n\n        debouncer = window.setTimeout(() => {\n          // Prevent a race condition between the timeout and saving.\n          if (!conflated) {\n            return;\n          }\n\n          state\n            .toJSON()\n            .then(data => workspaces.save(id, { data, metadata }))\n            .then(() => {\n              conflated.resolve(undefined);\n              conflated = null;\n            })\n            .catch(reason => {\n              conflated.reject(reason);\n              conflated = null;\n            });\n        }, timeout);\n\n        return conflated.promise;\n      }\n    });\n\n    const listener = (sender: any, change: StateDB.Change) => {\n      commands.execute(CommandIDs.saveState);\n    };\n\n    commands.addCommand(CommandIDs.loadState, {\n      execute: (args: IRouter.ILocation) => {\n        // Since the command can be executed an arbitrary number of times, make\n        // sure it is safe to call multiple times.\n        if (resolved) {\n          return;\n        }\n\n        const { hash, path, search } = args;\n        const workspace = Private.getWorkspace(router);\n        const query = URLExt.queryStringToObject(search || '');\n        const clone = query['clone'];\n        const source = typeof clone === 'string' ? clone : workspace;\n\n        let promise: Promise<any>;\n\n        // If the default /lab workspace is being cloned, copy it out of local\n        // storage instead of making a round trip to the server because it\n        // does not exist on the server.\n        if (source === clone && source === '') {\n          const prefix = `${source}:${info.namespace}:`;\n          const mask = (key: string) => key.replace(prefix, '');\n          const contents = StateDB.toJSON(prefix, mask);\n\n          resolved = true;\n          transform.resolve({ type: 'overwrite', contents });\n          promise = Promise.resolve();\n        }\n\n        // If there is no promise, fetch the source and overwrite the database.\n        promise =\n          promise ||\n          workspaces\n            .fetch(source)\n            .then(saved => {\n              // If this command is called after a reset, the state database\n              // will already be resolved.\n              if (!resolved) {\n                resolved = true;\n                transform.resolve({ type: 'overwrite', contents: saved.data });\n              }\n            })\n            .catch(reason => {\n              console.warn(`Fetching workspace (${workspace}) failed:`, reason);\n\n              // If the workspace does not exist, cancel the data transformation\n              // and save a workspace with the current user state data.\n              if (!resolved) {\n                resolved = true;\n                transform.resolve({ type: 'cancel', contents: null });\n              }\n            })\n            .then(() => {\n              // Any time the local state database changes, save the workspace.\n              if (workspace) {\n                state.changed.connect(listener, state);\n              }\n            });\n\n        return promise\n          .catch(reason => {\n            console.warn(`${CommandIDs.loadState} failed:`, reason);\n          })\n          .then(() => {\n            const immediate = true;\n\n            if (source === clone) {\n              // Maintain the query string parameters but remove `clone`.\n              delete query['clone'];\n\n              const url = path + URLExt.objectToQueryString(query) + hash;\n              const cloned = commands\n                .execute(CommandIDs.saveState, { immediate })\n                .then(() => router.stop);\n\n              // After the state has been cloned, navigate to the URL.\n              cloned.then(() => {\n                router.navigate(url, { silent: true });\n              });\n\n              return cloned;\n            }\n\n            // After the state database has finished loading, save it.\n            return commands.execute(CommandIDs.saveState, { immediate });\n          });\n      }\n    });\n    // Both the load state and clone state patterns should trigger the load\n    // state command if the URL matches one of them, but cloning a workspace\n    // outranks loading it because it is an explicit user action.\n    router.register({\n      command: CommandIDs.loadState,\n      pattern: Patterns.cloneState,\n      rank: 20 // Set loading rank at a higher priority than the default 100.\n    });\n    router.register({\n      command: CommandIDs.loadState,\n      pattern: Patterns.loadState,\n      rank: 30 // Set loading rank at a higher priority than the default 100.\n    });\n\n    commands.addCommand(CommandIDs.reset, {\n      label: 'Reset Application State',\n      execute: () => {\n        commands\n          .execute(CommandIDs.recoverState)\n          .then(() => {\n            router.reload();\n          })\n          .catch(() => {\n            router.reload();\n          });\n      }\n    });\n\n    commands.addCommand(CommandIDs.resetOnLoad, {\n      execute: (args: IRouter.ILocation) => {\n        const { hash, path, search } = args;\n        const query = URLExt.queryStringToObject(search || '');\n        const reset = 'reset' in query;\n        const clone = 'clone' in query;\n\n        if (!reset) {\n          return;\n        }\n\n        const loading = splash.show();\n\n        // If the state database has already been resolved, resetting is\n        // impossible without reloading.\n        if (resolved) {\n          return router.reload();\n        }\n\n        // Empty the state database.\n        resolved = true;\n        transform.resolve({ type: 'clear', contents: null });\n\n        // Maintain the query string parameters but remove `reset`.\n        delete query['reset'];\n\n        const silent = true;\n        const hard = true;\n        const url = path + URLExt.objectToQueryString(query) + hash;\n        const cleared = commands\n          .execute(CommandIDs.recoverState)\n          .then(() => router.stop); // Stop routing before new route navigation.\n\n        // After the state has been reset, navigate to the URL.\n        if (clone) {\n          cleared.then(() => {\n            router.navigate(url, { silent, hard });\n          });\n        } else {\n          cleared.then(() => {\n            router.navigate(url, { silent });\n            loading.dispose();\n          });\n        }\n\n        return cleared;\n      }\n    });\n    router.register({\n      command: CommandIDs.resetOnLoad,\n      pattern: Patterns.resetOnLoad,\n      rank: 10 // Set reset rank at a higher priority than the default 100.\n    });\n\n    const fallthrough = () => {\n      // If the state database is still unresolved after the first URL has been\n      // routed, leave it intact.\n      if (!resolved) {\n        resolved = true;\n        transform.resolve({ type: 'cancel', contents: null });\n      }\n      router.routed.disconnect(fallthrough, state);\n    };\n\n    router.routed.connect(fallthrough, state);\n\n    return state;\n  }\n};\n\n/**\n * Export the plugins as default.\n */\nconst plugins: JupyterLabPlugin<any>[] = [\n  palette,\n  paletteRestorer,\n  resolver,\n  settings,\n  state,\n  splash,\n  themes\n];\nexport default plugins;\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * Returns the workspace name from the URL, if it exists.\n   */\n  export function getWorkspace(router: IRouter): string {\n    const match = router.current.path.match(Patterns.loadState);\n\n    return (match && decodeURIComponent(match[1])) || '';\n  }\n\n  /**\n   * Create a splash element.\n   */\n  function createSplash(): HTMLElement {\n    const splash = document.createElement('div');\n    const galaxy = document.createElement('div');\n    const logo = document.createElement('div');\n\n    splash.id = 'jupyterlab-splash';\n    galaxy.id = 'galaxy';\n    logo.id = 'main-logo';\n\n    galaxy.appendChild(logo);\n    ['1', '2', '3'].forEach(id => {\n      const moon = document.createElement('div');\n      const planet = document.createElement('div');\n\n      moon.id = `moon${id}`;\n      moon.className = 'moon orbit';\n      planet.id = `planet${id}`;\n      planet.className = 'planet';\n\n      moon.appendChild(planet);\n      galaxy.appendChild(moon);\n    });\n\n    splash.appendChild(galaxy);\n\n    return splash;\n  }\n\n  /**\n   * A debouncer for recovery attempts.\n   */\n  let debouncer = 0;\n\n  /**\n   * The recovery dialog.\n   */\n  let dialog: Dialog<any>;\n\n  /**\n   * Allows the user to clear state if splash screen takes too long.\n   */\n  function recover(fn: () => void): void {\n    if (dialog) {\n      return;\n    }\n\n    dialog = new Dialog({\n      title: 'Loading...',\n      body: `The loading screen is taking a long time.\n        Would you like to clear the workspace or keep waiting?`,\n      buttons: [\n        Dialog.cancelButton({ label: 'Keep Waiting' }),\n        Dialog.warnButton({ label: 'Clear Workspace' })\n      ]\n    });\n\n    dialog\n      .launch()\n      .then(result => {\n        if (result.button.accept) {\n          return fn();\n        }\n\n        dialog.dispose();\n        dialog = null;\n\n        debouncer = window.setTimeout(() => {\n          recover(fn);\n        }, SPLASH_RECOVER_TIMEOUT);\n      })\n      .catch(() => {\n        /* no-op */\n      });\n  }\n\n  /**\n   * Allows the user to clear state if splash screen takes too long.\n   */\n  export function redirect(router: IRouter, warn = false): Promise<void> {\n    const form = createRedirectForm(warn);\n    const dialog = new Dialog({\n      title: 'Please use a different workspace.',\n      body: form,\n      focusNodeSelector: 'input',\n      buttons: [Dialog.okButton({ label: 'Switch Workspace' })]\n    });\n\n    return dialog.launch().then(result => {\n      dialog.dispose();\n\n      if (result.value) {\n        const url = `workspaces/${result.value}`;\n\n        // Navigate to a new workspace URL and abandon this session altogether.\n        router.navigate(url, { hard: true, silent: true });\n\n        // This promise will never resolve because the application navigates\n        // away to a new location. It only exists to satisfy the return type\n        // of the `redirect` function.\n        return new Promise<void>(() => {\n          /* no-op */\n        });\n      }\n\n      return redirect(router, true);\n    });\n  }\n\n  /**\n   * The splash element.\n   */\n  const splash = createSplash();\n\n  /**\n   * The splash screen counter.\n   */\n  let splashCount = 0;\n\n  /**\n   * Show the splash element.\n   *\n   * @param ready - A promise that must be resolved before splash disappears.\n   *\n   * @param recovery - A command that recovers from a hanging splash.\n   */\n  export function showSplash(\n    ready: Promise<any>,\n    commands: CommandRegistry,\n    recovery: string\n  ): IDisposable {\n    splash.classList.remove('splash-fade');\n    splashCount++;\n\n    if (debouncer) {\n      window.clearTimeout(debouncer);\n    }\n    debouncer = window.setTimeout(() => {\n      if (commands.hasCommand(recovery)) {\n        recover(() => {\n          commands.execute(recovery);\n        });\n      }\n    }, SPLASH_RECOVER_TIMEOUT);\n\n    document.body.appendChild(splash);\n\n    return new DisposableDelegate(() => {\n      ready.then(() => {\n        if (--splashCount === 0) {\n          if (debouncer) {\n            window.clearTimeout(debouncer);\n            debouncer = 0;\n          }\n\n          if (dialog) {\n            dialog.dispose();\n            dialog = null;\n          }\n\n          splash.classList.add('splash-fade');\n          window.setTimeout(() => {\n            document.body.removeChild(splash);\n          }, 500);\n        }\n      });\n    });\n  }\n}\n"]}