{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../terminal-extension/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  ILayoutRestorer,\n  JupyterLab,\n  JupyterLabPlugin\n} from '@jupyterlab/application';\n\nimport {\n  ICommandPalette,\n  InstanceTracker,\n  MainAreaWidget\n} from '@jupyterlab/apputils';\n\nimport { ILauncher } from '@jupyterlab/launcher';\n\nimport { IMainMenu } from '@jupyterlab/mainmenu';\n\nimport { ServiceManager } from '@jupyterlab/services';\n\nimport { ITerminalTracker, Terminal } from '@jupyterlab/terminal';\n\n/**\n * The command IDs used by the terminal plugin.\n */\nnamespace CommandIDs {\n  export const createNew = 'terminal:create-new';\n\n  export const open = 'terminal:open';\n\n  export const refresh = 'terminal:refresh';\n\n  export const increaseFont = 'terminal:increase-font';\n\n  export const decreaseFont = 'terminal:decrease-font';\n\n  export const toggleTheme = 'terminal:toggle-theme';\n}\n\n/**\n * The class name for the terminal icon in the default theme.\n */\nconst TERMINAL_ICON_CLASS = 'jp-TerminalIcon';\n\n/**\n * The default terminal extension.\n */\nconst plugin: JupyterLabPlugin<ITerminalTracker> = {\n  activate,\n  id: '@jupyterlab/terminal-extension:plugin',\n  provides: ITerminalTracker,\n  requires: [IMainMenu, ICommandPalette, ILayoutRestorer],\n  optional: [ILauncher],\n  autoStart: true\n};\n\n/**\n * Export the plugin as default.\n */\nexport default plugin;\n\n/**\n * Activate the terminal plugin.\n */\nfunction activate(\n  app: JupyterLab,\n  mainMenu: IMainMenu,\n  palette: ICommandPalette,\n  restorer: ILayoutRestorer,\n  launcher: ILauncher | null\n): ITerminalTracker {\n  const { serviceManager } = app;\n  const category = 'Terminal';\n  const namespace = 'terminal';\n  const tracker = new InstanceTracker<MainAreaWidget<Terminal>>({ namespace });\n\n  // Bail if there are no terminals available.\n  if (!serviceManager.terminals.isAvailable()) {\n    console.log(\n      'Disabling terminals plugin because they are not available on the server'\n    );\n    return tracker;\n  }\n\n  // Handle state restoration.\n  restorer.restore(tracker, {\n    command: CommandIDs.createNew,\n    args: widget => ({ name: widget.content.session.name }),\n    name: widget => widget.content.session && widget.content.session.name\n  });\n\n  addCommands(app, serviceManager, tracker);\n\n  // Add some commands to the application view menu.\n  const viewGroup = [\n    CommandIDs.increaseFont,\n    CommandIDs.decreaseFont,\n    CommandIDs.toggleTheme\n  ].map(command => {\n    return { command };\n  });\n  mainMenu.viewMenu.addGroup(viewGroup, 30);\n\n  // Add command palette items.\n  [\n    CommandIDs.createNew,\n    CommandIDs.refresh,\n    CommandIDs.increaseFont,\n    CommandIDs.decreaseFont,\n    CommandIDs.toggleTheme\n  ].forEach(command => {\n    palette.addItem({ command, category, args: { isPalette: true } });\n  });\n\n  // Add terminal creation to the file menu.\n  mainMenu.fileMenu.newMenu.addGroup([{ command: CommandIDs.createNew }], 20);\n\n  // Add a launcher item if the launcher is available.\n  if (launcher) {\n    launcher.add({\n      command: CommandIDs.createNew,\n      category: 'Other',\n      rank: 0\n    });\n  }\n\n  app.contextMenu.addItem({\n    command: CommandIDs.refresh,\n    selector: '.jp-Terminal',\n    rank: 1\n  });\n\n  return tracker;\n}\n\n/**\n * Add the commands for the terminal.\n */\nexport function addCommands(\n  app: JupyterLab,\n  services: ServiceManager,\n  tracker: InstanceTracker<MainAreaWidget<Terminal>>\n) {\n  let { commands, shell } = app;\n\n  /**\n   * Whether there is an active terminal.\n   */\n  function isEnabled(): boolean {\n    return (\n      tracker.currentWidget !== null &&\n      tracker.currentWidget === app.shell.currentWidget\n    );\n  }\n\n  // Add terminal commands.\n  commands.addCommand(CommandIDs.createNew, {\n    label: args => (args['isPalette'] ? 'New Terminal' : 'Terminal'),\n    caption: 'Start a new terminal session',\n    iconClass: args => (args['isPalette'] ? '' : TERMINAL_ICON_CLASS),\n    execute: args => {\n      const name = args['name'] as string;\n      const initialCommand = args['initialCommand'] as string;\n      const term = new Terminal({ initialCommand });\n      const promise = name\n        ? services.terminals.connectTo(name)\n        : services.terminals.startNew();\n\n      term.title.icon = TERMINAL_ICON_CLASS;\n      term.title.label = '...';\n      let main = new MainAreaWidget({ content: term });\n      shell.addToMainArea(main);\n\n      return promise\n        .then(session => {\n          term.session = session;\n          tracker.add(main);\n          shell.activateById(main.id);\n\n          return main;\n        })\n        .catch(() => {\n          term.dispose();\n        });\n    }\n  });\n\n  commands.addCommand(CommandIDs.open, {\n    execute: args => {\n      const name = args['name'] as string;\n      // Check for a running terminal with the given name.\n      const widget = tracker.find(value => {\n        let content = value.content;\n        return (content.session && content.session.name === name) || false;\n      });\n      if (widget) {\n        shell.activateById(widget.id);\n      } else {\n        // Otherwise, create a new terminal with a given name.\n        return commands.execute(CommandIDs.createNew, { name });\n      }\n    }\n  });\n\n  commands.addCommand(CommandIDs.refresh, {\n    label: 'Refresh Terminal',\n    caption: 'Refresh the current terminal session',\n    execute: () => {\n      let current = tracker.currentWidget;\n      if (!current) {\n        return;\n      }\n      shell.activateById(current.id);\n\n      return current.content.refresh().then(() => {\n        if (current) {\n          current.content.activate();\n        }\n      });\n    },\n    isEnabled: () => tracker.currentWidget !== null\n  });\n\n  commands.addCommand(CommandIDs.increaseFont, {\n    label: 'Increase Terminal Font Size',\n    execute: () => {\n      let options = Terminal.defaultOptions;\n      if (options.fontSize < 72) {\n        options.fontSize++;\n        tracker.forEach(widget => {\n          widget.content.fontSize = options.fontSize;\n        });\n      }\n    },\n    isEnabled\n  });\n\n  commands.addCommand(CommandIDs.decreaseFont, {\n    label: 'Decrease Terminal Font Size',\n    execute: () => {\n      let options = Terminal.defaultOptions;\n      if (options.fontSize > 9) {\n        options.fontSize--;\n        tracker.forEach(widget => {\n          widget.content.fontSize = options.fontSize;\n        });\n      }\n    },\n    isEnabled\n  });\n\n  let terminalTheme: Terminal.Theme = 'dark';\n  commands.addCommand(CommandIDs.toggleTheme, {\n    label: 'Use Dark Terminal Theme',\n    caption: 'Whether to use the dark terminal theme',\n    isToggled: () => terminalTheme === 'dark',\n    execute: () => {\n      terminalTheme = terminalTheme === 'dark' ? 'light' : 'dark';\n      let options = Terminal.defaultOptions;\n      options.theme = terminalTheme;\n      tracker.forEach(widget => {\n        if (widget.content.theme !== terminalTheme) {\n          widget.content.theme = terminalTheme;\n        }\n      });\n      commands.notifyCommandChanged(CommandIDs.toggleTheme);\n    },\n    isEnabled\n  });\n}\n"]}